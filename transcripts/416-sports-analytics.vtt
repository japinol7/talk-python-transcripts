WEBVTT

00:00:00.000 --> 00:00:04.960
If you're looking for fun datasets for learning, for teaching, maybe a conference talk, or


00:00:04.960 --> 00:00:10.000
even if you're just really into them, Sports offers up a continuous stream of rich data


00:00:10.000 --> 00:00:12.040
that many people can relate to.


00:00:12.040 --> 00:00:15.060
Yet accessing that data can be tricky.


00:00:15.060 --> 00:00:20.500
Sometimes it's locked away in obscure file formats, other times the data exists but without


00:00:20.500 --> 00:00:22.840
a clear API to access it.


00:00:22.840 --> 00:00:29.240
On this episode, we talk about PySport, something of an awesome list of a wide range of libraries,


00:00:29.240 --> 00:00:37.000
but not all Python for accessing a wide variety of sports data from the NFL, NBA, F1, and more.


00:00:37.000 --> 00:00:41.880
We have Kuhn Vossen, the founder of PySport, to talk through some of the more popular projects.


00:00:41.880 --> 00:00:57.080
This is Talk Python To Me, episode 416, recorded May 11th, 2023.


00:00:57.080 --> 00:01:06.040
Welcome to Talk Python To Me, a weekly podcast on Python. This is your host, Michael Kennedy.


00:01:06.040 --> 00:01:10.960
Follow me on Mastodon, where I'm @mkennedy, and follow the podcast using @talkpython,


00:01:10.960 --> 00:01:17.120
both on fosstodon.org. Be careful with impersonating accounts on other instances, there are many.


00:01:17.120 --> 00:01:22.600
Keep up with the show and listen to over seven years of past episodes at talkpython.fm.


00:01:22.600 --> 00:01:26.880
We've started streaming most of our episodes live on YouTube. Subscribe to our YouTube


00:01:26.880 --> 00:01:32.500
channel over at talkpython.fm/youtube to get notified about upcoming shows and be part


00:01:32.500 --> 00:01:34.160
of that episode.


00:01:34.160 --> 00:01:40.380
This episode is brought to you by JetBrains, who encourage you to get work done with PyCharm.


00:01:40.380 --> 00:01:47.620
Download your free trial of PyCharm Professional at talkpython.fm/done-with-pycharm.


00:01:47.620 --> 00:01:49.460
And it's brought to you by InfluxDB.


00:01:49.460 --> 00:01:54.540
InfluxDB is the database purpose-built for handling time series data at a massive scale


00:01:54.540 --> 00:01:56.300
for real-time analytics.


00:01:56.300 --> 00:02:01.100
Try them for free at talkpython.fm/influxdb.


00:02:01.100 --> 00:02:05.500
A quick announcement before we jump into the conversation around PySports.


00:02:05.500 --> 00:02:10.860
We have over 240 hours of Python course video content at Talk Python.


00:02:10.860 --> 00:02:16.020
And if you're watching that content on a mobile platform, phone or tablet, the browser is


00:02:16.020 --> 00:02:18.460
definitely not the best experience.


00:02:18.460 --> 00:02:24.380
For example, on iOS, it won't even auto-advance or start playing without your interaction.


00:02:24.380 --> 00:02:28.000
We've had some mobile apps for our courses for a while now, but they have fallen a bit


00:02:28.000 --> 00:02:33.220
into disrepair for a couple of reasons, including app store tyranny.


00:02:33.220 --> 00:02:37.840
But over the past four months, we've completely reimagined and rewrote our mobile apps in


00:02:37.840 --> 00:02:40.060
a modern and beautiful platform.


00:02:40.060 --> 00:02:45.460
And I'm super happy to announce that they are now available for Android and iOS on both


00:02:45.460 --> 00:02:48.300
phone and tablets in their respective app stores.


00:02:48.300 --> 00:02:53.260
So please visit talkbython.fm/apps to see for yourself how beautiful and clean the new


00:02:53.260 --> 00:02:59.340
apps are and why I'm so excited about them. Download them for free and even take a couple


00:02:59.340 --> 00:03:03.500
of our free courses included in there, as well as the paid ones that you might have


00:03:03.500 --> 00:03:08.460
gotten of course. Finally, if you're curious for a bit of a look behind the curtain about


00:03:08.460 --> 00:03:14.020
how and why we rewrote them, check out my personal site mkennedy.codes for the full


00:03:14.020 --> 00:03:18.980
story. Thank you all for supporting our work. Now, on to the show.


00:03:18.980 --> 00:03:21.380
- Koen, welcome to Talk Python To Me.


00:03:21.380 --> 00:03:23.680
- Yeah, thanks for having me.


00:03:23.680 --> 00:03:25.560
Really cool to talk about this topic.


00:03:25.560 --> 00:03:28.040
- Yeah, I'm real excited to have you here.


00:03:28.040 --> 00:03:31.360
You have quite a collection of libraries.


00:03:31.360 --> 00:03:33.920
Now, up front, these are not all your libraries, right?


00:03:33.920 --> 00:03:37.120
These are sort of kind of an awesome list of Python,


00:03:37.120 --> 00:03:39.740
and even beyond Python, sports, libraries,


00:03:39.740 --> 00:03:42.520
data sets, APIs, models, everything, right?


00:03:42.520 --> 00:03:43.880
- I think it's for people,


00:03:43.880 --> 00:03:47.520
it was quite hard to find open source packages,


00:03:47.520 --> 00:03:50.640
And I try to collect everything I could find


00:03:50.640 --> 00:03:54.720
and make it available for everyone to find what they need.


00:03:54.720 --> 00:03:56.000
- It sounds like a great mission.


00:03:56.000 --> 00:03:58.020
And as people will see,


00:03:58.020 --> 00:04:01.720
there is a bunch of stuff that we'll get to talk about.


00:04:01.720 --> 00:04:05.500
So I noticed not absolutely every sport is covered there,


00:04:05.500 --> 00:04:09.280
but many of the popular sports are covered.


00:04:09.280 --> 00:04:12.060
And if you're interested in sports,


00:04:12.060 --> 00:04:14.880
I think also if you're interested in just examples


00:04:14.880 --> 00:04:16.720
that connect with people, right?


00:04:16.720 --> 00:04:18.960
Imagine you're a university professor


00:04:18.960 --> 00:04:23.240
and you don't wanna use the New York City tax data


00:04:23.240 --> 00:04:24.240
one more time.


00:04:24.240 --> 00:04:27.800
You wanna say, well, maybe people are into soccer,


00:04:27.800 --> 00:04:31.360
American football, or NBA, whatever it is, right?


00:04:31.360 --> 00:04:33.600
Maybe you could come up with something more interesting.


00:04:33.600 --> 00:04:35.320
F1, for example, right?


00:04:35.320 --> 00:04:36.160
- Yeah, definitely.


00:04:36.160 --> 00:04:38.840
There's quite some cool data available to use


00:04:38.840 --> 00:04:41.480
in your courses, yeah, absolutely.


00:04:41.480 --> 00:04:46.280
- Yeah, also, if people are members of some kind of club


00:04:46.280 --> 00:04:50.280
or team, maybe they could use some of this to bring some cool visualizations


00:04:50.280 --> 00:04:52.760
or analysis to their own organization.


00:04:52.760 --> 00:04:53.000
Right.


00:04:53.000 --> 00:04:53.200
Yeah.


00:04:53.200 --> 00:04:59.280
That's also one of the things that PySport likes to encourage to use open


00:04:59.280 --> 00:05:04.480
source packages that are already available instead of building your own


00:05:04.480 --> 00:05:07.040
stuff, because that's, that actually happens a lot.


00:05:07.040 --> 00:05:11.600
So that's also one of the, a part of the mission of PySport to, to make


00:05:11.600 --> 00:05:15.920
people aware of what's already there and try to bring people together.


00:05:16.040 --> 00:05:20.840
One of the big problems, not problems, it's an opportunity, but it's also a challenge of Python.


00:05:20.840 --> 00:05:25.640
You know, if you go to pypi.org right now, there's 453,000 packages.


00:05:25.640 --> 00:05:28.140
I didn't know the number, but that's quite a lot.


00:05:28.140 --> 00:05:30.240
We're coming up on half a million.


00:05:30.240 --> 00:05:36.240
And if your goal is to work with some specific data set or try to solve a certain type of problem,


00:05:36.240 --> 00:05:40.840
often the hardest part is figuring out, well, what library do I use? Does it exist?


00:05:40.840 --> 00:05:43.940
And if so, is it up to date and all of these things.


00:05:43.940 --> 00:05:47.500
So having a list like this, a place that aggregates it and sorts it,


00:05:47.500 --> 00:05:48.940
filters it, super neat.


00:05:48.940 --> 00:05:51.500
So really looking forward to talking to you about it.


00:05:51.500 --> 00:05:54.780
Before we get to that though, just give us a quick bit on your backstory.


00:05:54.780 --> 00:05:56.100
How'd you get into programming in Python?


00:05:56.100 --> 00:05:58.060
Yeah, this is an interesting story.


00:05:58.060 --> 00:06:03.980
I think I started programming when I was around 12, when I got the Lego Mindstorms.


00:06:03.980 --> 00:06:05.820
Lego that you could also program.


00:06:05.820 --> 00:06:09.340
My father gave me a Visual Basic book.


00:06:09.340 --> 00:06:11.180
Yeah, I should just figure it out.


00:06:11.420 --> 00:06:15.420
So that's where I started with programming and then during high school,


00:06:15.420 --> 00:06:19.680
I also did a web development with PHP.


00:06:19.680 --> 00:06:23.700
I'm not really sure at what age, but eventually I ended up with a, I


00:06:23.700 --> 00:06:26.200
think the first ditch search engine.


00:06:26.200 --> 00:06:30.780
They want to, yeah, they need a Python developer and I didn't really know


00:06:30.780 --> 00:06:32.800
Python, but that wasn't an issue.


00:06:32.800 --> 00:06:35.280
So there I learned Python.


00:06:35.280 --> 00:06:40.520
And from that point on, I, yeah, only, or mostly used Python.


00:06:40.580 --> 00:06:43.900
Right on, you're like, all right, forget this PHP stuff, go in Python.


00:06:43.900 --> 00:06:44.660
Yeah.


00:06:44.660 --> 00:06:48.980
Well, to be honest, we, my company, we still use, PHP.


00:06:48.980 --> 00:06:49.820
Yeah, I'm sure.


00:06:49.820 --> 00:06:52.260
Because, well, it works quite well.


00:06:52.260 --> 00:06:53.900
It's the performances is okay.


00:06:53.900 --> 00:06:56.460
I'm not really sure if I'm allowed to say it on this show, but


00:06:56.460 --> 00:06:58.300
it also had some advances.


00:06:58.300 --> 00:06:59.460
Yeah, absolutely.


00:06:59.460 --> 00:07:03.340
Well, I mean, almost every language has some, something it's particularly


00:07:03.340 --> 00:07:05.300
good at and reasons to keep using it.


00:07:05.300 --> 00:07:08.180
And then also there's just tons of software that was written, you know, pick


00:07:08.180 --> 00:07:10.880
your language written in that language and it still works well.


00:07:10.880 --> 00:07:13.140
And there's plenty of reason to just keep going with it.


00:07:13.140 --> 00:07:13.380
Right.


00:07:13.380 --> 00:07:13.660
Yeah.


00:07:13.660 --> 00:07:19.560
But, yeah, Python is, is really my language of, of, most interest.


00:07:19.560 --> 00:07:23.880
Um, what I really use on my, day to day, work.


00:07:23.880 --> 00:07:24.620
Excellent.


00:07:24.620 --> 00:07:25.100
Yeah.


00:07:25.100 --> 00:07:25.460
Yeah.


00:07:25.460 --> 00:07:25.900
Cool.


00:07:25.900 --> 00:07:26.960
What are you doing these days?


00:07:26.960 --> 00:07:28.420
Are you still working at the search engine?


00:07:28.420 --> 00:07:30.320
No, I did that quite a while ago.


00:07:30.320 --> 00:07:36.380
Um, I also worked at a, a huge online marketing agency where we did,


00:07:36.660 --> 00:07:41.060
I run the software department and we create tools to collect all the data


00:07:41.060 --> 00:07:46.040
from all kinds of different sources and make it available for the teams.


00:07:46.040 --> 00:07:48.960
All right now I'm running my own company.


00:07:48.960 --> 00:07:55.520
It's called Team TV, where we provide all kinds of tools where we use video and


00:07:55.520 --> 00:08:01.440
data for example, performance analysts, but also for highlight creation or


00:08:01.440 --> 00:08:06.340
live streaming, just to make sure that we tried, at least we tried to combine


00:08:06.560 --> 00:08:10.600
video and data in all possible ways within support domain.


00:08:10.600 --> 00:08:11.080
Yeah.


00:08:11.080 --> 00:08:14.680
That's, that's sounds like a really interesting thing to be working on.


00:08:14.680 --> 00:08:14.960
Yeah.


00:08:14.960 --> 00:08:18.000
I started mostly on the, on the video engineering part.


00:08:18.000 --> 00:08:21.000
So we built quite some stuff ourselves there.


00:08:21.000 --> 00:08:26.080
So from people uploading a huge amount of footage that we need to


00:08:26.080 --> 00:08:31.840
transcode and how to scale it, how to serve it, so that's stuff we build ourselves.


00:08:31.840 --> 00:08:32.240
Yeah.


00:08:32.240 --> 00:08:37.400
Later on, we keep on building more stuff around data and always keep the


00:08:37.400 --> 00:08:42.280
combination between data and the video because they, well, you can see some


00:08:42.280 --> 00:08:48.120
sort of metric, but you always want to see the footage behind it to actually


00:08:48.120 --> 00:08:49.320
understand the context of it.


00:08:49.320 --> 00:08:49.960
Yeah, sure.


00:08:49.960 --> 00:08:50.960
Sounds really fun.


00:08:50.960 --> 00:08:53.160
And you're also involved with Pydata Andover.


00:08:53.160 --> 00:08:53.640
Is that right?


00:08:53.640 --> 00:08:53.960
Yeah.


00:08:53.960 --> 00:08:54.280
Yeah.


00:08:54.280 --> 00:09:00.080
For, yeah, five years ago we started with Pydata Eindhoven.


00:09:00.200 --> 00:09:03.000
We were already friends with Pydata Amsterdam.


00:09:03.000 --> 00:09:06.280
They said, well, maybe you should also start on Eindhoven chapter.


00:09:06.280 --> 00:09:06.620
Yeah.


00:09:06.620 --> 00:09:10.680
I think this year will be the, the adversity, the five year adversity for


00:09:10.680 --> 00:09:15.440
Pydata Eindhoven and it's yeah, it's amazing community and that's yeah.


00:09:15.440 --> 00:09:19.040
Also inspired me to start with the, the Pysport.


00:09:19.040 --> 00:09:23.400
I'm not really sure if people all listen to the, to this podcast.


00:09:23.400 --> 00:09:25.240
No Pydata maybe.


00:09:25.240 --> 00:09:26.800
I think, I hope so.


00:09:26.800 --> 00:09:27.040
Yeah.


00:09:27.040 --> 00:09:29.360
I suspect most, most of them probably do.


00:09:29.720 --> 00:09:32.480
at least the data science inclined among us.


00:09:32.480 --> 00:09:34.260
- Yeah, I can tell a little bit about it,


00:09:34.260 --> 00:09:37.300
but I think right now we have a nice way


00:09:37.300 --> 00:09:40.460
of organizing the meetups and trying to get more people


00:09:40.460 --> 00:09:43.380
involved and talk about data science and share knowledge.


00:09:43.380 --> 00:09:46.180
And then once a year, we have the conference


00:09:46.180 --> 00:09:49.340
where we try to get, yeah, collect money


00:09:49.340 --> 00:09:52.340
that we can send to NumFocus and they can share it


00:09:52.340 --> 00:09:54.780
over all the open source projects.


00:09:54.780 --> 00:09:58.420
So yeah, it's a really amazing community here.


00:09:58.420 --> 00:10:06.020
- Excellent. Yeah, NumFocus does a lot to support the bigger data science oriented projects.


00:10:06.020 --> 00:10:09.860
I think that's kind of unique amongst the, in the Python space.


00:10:09.860 --> 00:10:14.820
You know, there's not really anything like that in the web or UI.


00:10:14.820 --> 00:10:17.620
You know, there's not a lot of areas where there's like organization that says,


00:10:17.620 --> 00:10:22.780
"Okay, we're going to try to find the popular projects and support them across organizations."


00:10:22.780 --> 00:10:26.780
Like people support flask, but they don't also support Django in


00:10:26.780 --> 00:10:28.580
the same sort of organization.


00:10:28.580 --> 00:10:28.860
Right.


00:10:28.860 --> 00:10:32.580
I think it's, it's also an opportunity for all the companies that are using


00:10:32.580 --> 00:10:36.020
those open source packages to give back.


00:10:36.020 --> 00:10:41.140
And I think doing it through non-focus, it makes it also easier because they use a


00:10:41.140 --> 00:10:46.020
lot of packages and can just donate to non-focus and they will make sure it's


00:10:46.020 --> 00:10:48.900
as disrooted over those, yeah.


00:10:48.900 --> 00:10:49.380
Packages.


00:10:49.380 --> 00:10:49.660
Right.


00:10:49.660 --> 00:10:50.140
Absolutely.


00:10:50.180 --> 00:10:54.020
If you use pandas, you should also support NumPy, right?


00:10:54.020 --> 00:10:56.420
Because that's kind of the foundation of, and so.


00:10:56.420 --> 00:10:57.860
- Yeah, yeah, yeah, yeah, yeah.


00:10:57.860 --> 00:10:58.700
- Interesting.


00:10:58.700 --> 00:10:59.520
Oh, that makes a lot of sense.


00:10:59.520 --> 00:11:03.220
All right, well, let's jump into sports


00:11:03.220 --> 00:11:06.620
and your project, Pi Sport.


00:11:06.620 --> 00:11:08.460
There are other people who are maintainers


00:11:08.460 --> 00:11:10.260
and working on this, or is this just your project?


00:11:10.260 --> 00:11:15.260
- To get the meetup that we had just a couple of weeks ago,


00:11:15.260 --> 00:11:17.540
we had some more people collected


00:11:17.540 --> 00:11:23.180
And now we are building from there on to get more people involved with just PySport.


00:11:23.180 --> 00:11:27.780
But one of the project we built with PySport is the Kloppy package.


00:11:27.780 --> 00:11:31.340
And there we have worked together with Jan van Haaren.


00:11:31.340 --> 00:11:37.700
He's a head of data science at Club Brugge, a big club in Belgium.


00:11:37.700 --> 00:11:41.220
We are the main maintainers there, but I think right now we have


00:11:41.220 --> 00:11:44.780
22 contributors to the package.


00:11:44.780 --> 00:11:47.740
So there's quite some people contributing there.


00:11:47.740 --> 00:11:48.100
Yeah.


00:11:48.100 --> 00:11:48.380
Yeah.


00:11:48.380 --> 00:11:49.020
That's a big group.


00:11:49.020 --> 00:11:50.180
That's a lot of people contributing.


00:11:50.180 --> 00:11:50.460
Yeah.


00:11:50.460 --> 00:11:51.380
Let's start it this way.


00:11:51.380 --> 00:11:53.700
Tell people what Pysport is and about that.


00:11:53.700 --> 00:11:56.500
And then we can talk a little broadly just about sports analytics


00:11:56.500 --> 00:11:57.940
before we get into the details.


00:11:57.940 --> 00:12:02.540
The most important mission of, of Pysport is to, you know, to bridge the gap


00:12:02.540 --> 00:12:09.060
between the clubs and the sports analytics and to just people and by using


00:12:09.060 --> 00:12:14.220
open source packages, because a lot of clubs are using open source packages.


00:12:14.500 --> 00:12:18.660
The sort packages are used by the clubs and people want to have a way to


00:12:18.660 --> 00:12:21.040
contribute to their favorite club.


00:12:21.040 --> 00:12:24.820
I think a lot of people are still struggling on how to do it.


00:12:24.820 --> 00:12:28.220
And with PySports, yeah, we want to share the knowledge and


00:12:28.220 --> 00:12:31.000
teach people on how to do it.


00:12:31.000 --> 00:12:37.340
So we try to get the experts from the clubs, but also getting the knowledge


00:12:37.340 --> 00:12:43.300
from, you know, like pandas or other big packages and see how we can get all


00:12:43.300 --> 00:12:48.140
knowledge into the sports analytics community. With Kloppy we try to set an


00:12:48.140 --> 00:12:55.340
example on how to build such a package, how to work together on such a


00:12:55.340 --> 00:13:00.700
thing and also encourage people to contribute. Show that you don't


00:13:00.700 --> 00:13:05.940
have to create a pull request, that there's a major refactor but also like


00:13:05.940 --> 00:13:12.340
minor things like typing errors fix in documentation and show people that


00:13:12.340 --> 00:13:16.140
that's also very valuable to a package.


00:13:16.140 --> 00:13:19.420
- Interesting, so CLOPi is standardized


00:13:19.420 --> 00:13:22.060
soccer tracking and event data, right?


00:13:22.060 --> 00:13:25.660
So you started out with soccer or as I guess


00:13:25.660 --> 00:13:27.660
a lot of the world might refer to it as football,


00:13:27.660 --> 00:13:30.740
but in the US, that's already taken,


00:13:30.740 --> 00:13:32.140
it's a namespace collision.


00:13:32.140 --> 00:13:33.940
- Yeah, yeah, yeah, yeah.


00:13:33.940 --> 00:13:35.740
Yeah, it's sometimes, yeah,


00:13:35.740 --> 00:13:37.700
it's difficult to talk about football,


00:13:37.700 --> 00:13:40.900
but here in Europe, we call it football,


00:13:40.900 --> 00:13:43.980
that you have put a package because it's international.


00:13:43.980 --> 00:13:46.540
So worldwide, I call it soccer.


00:13:46.540 --> 00:13:47.220
Yeah.


00:13:47.220 --> 00:13:47.620
Yeah.


00:13:47.620 --> 00:13:49.380
Less namespace namespace.


00:13:49.380 --> 00:13:54.820
So give us a quick bit of background on Kloppy, but since it's kind of one of the


00:13:54.820 --> 00:13:57.900
founding, you created this as a way to sort of set an example, right.


00:13:57.900 --> 00:14:02.660
For how to create a package and it helps people understand this event, this club


00:14:02.660 --> 00:14:03.020
data.


00:14:03.020 --> 00:14:05.180
Where that started is on Twitter.


00:14:05.180 --> 00:14:09.220
There was already quite some people talking about sports analytics, of course.


00:14:09.220 --> 00:14:14.020
And one guy, Joe Mulberry, he's working at a Danish top club.


00:14:14.020 --> 00:14:18.060
He asked for help because he created a notebook and he wanted to


00:14:18.060 --> 00:14:20.660
build an Flask API on top of it.


00:14:20.660 --> 00:14:22.220
And I said, well, I know Python.


00:14:22.220 --> 00:14:26.900
I don't know really much, much about soccer or about data, but yeah,


00:14:26.900 --> 00:14:28.340
I would like to be involved.


00:14:28.340 --> 00:14:29.660
I would like to help you.


00:14:29.660 --> 00:14:36.100
And when I received a notebook, I noticed that like 80% of the code was about


00:14:36.380 --> 00:14:41.300
reading and standardizing the data to a format that he could work with.


00:14:41.300 --> 00:14:45.900
Uh, when we talked about it, it seemed like most, at least a lot of people are


00:14:45.900 --> 00:14:50.020
struggling with that issue and doing the same thing over and over again, because


00:14:50.020 --> 00:14:54.140
in more notebooks that I saw people were doing the same thing, but in different


00:14:54.140 --> 00:15:00.340
ways and somewhere not correct implementation or inefficient implementations.


00:15:00.340 --> 00:15:06.300
So I thought, well, one thing I know is, is how to read data and how to get it


00:15:06.300 --> 00:15:09.960
into a standardized format because that was also one of the things I did


00:15:09.960 --> 00:15:11.880
at an online marketing company.


00:15:11.880 --> 00:15:12.880
Yeah.


00:15:12.880 --> 00:15:16.320
I don't know much, much about your data format, but I know about processing


00:15:16.320 --> 00:15:18.720
data and analyzing it and all that.


00:15:18.720 --> 00:15:18.960
Right.


00:15:18.960 --> 00:15:19.240
Yeah.


00:15:19.240 --> 00:15:23.280
I built a package, started with just tracking data, but also try to


00:15:23.280 --> 00:15:25.260
explain what the next steps could be.


00:15:25.260 --> 00:15:28.080
And then people said, well, this is really useful.


00:15:28.080 --> 00:15:34.880
And from that part, I kept on adding the serializers for different kinds of data


00:15:35.160 --> 00:15:37.500
for the tracking data and also for the event data.


00:15:37.500 --> 00:15:38.100
Yeah.


00:15:38.100 --> 00:15:42.740
To try to get knowledge from non sport Baker projects.


00:15:42.740 --> 00:15:48.420
So I also got, Will Gunnum from the textile package.


00:15:48.420 --> 00:15:53.940
He also did several reviews on this package and give feedback to, yeah.


00:15:53.940 --> 00:15:56.460
To try to get the package on a, on a higher level.


00:15:56.460 --> 00:16:01.620
So people within sports and list community could also gain more knowledge from there.


00:16:02.020 --> 00:16:06.300
But maybe also good, a big, a small, a small background on, on the data.


00:16:06.300 --> 00:16:10.260
So the tracking data, that's like positioning data for all players on the


00:16:10.260 --> 00:16:15.700
pitch, I think it's most of the time, 25, 25 frames a second.


00:16:15.700 --> 00:16:19.140
So, you know, the location for each player and the ball and on the other


00:16:19.140 --> 00:16:20.380
side, you have the event data.


00:16:20.380 --> 00:16:23.900
So there are all passes and shots and things like that.


00:16:23.900 --> 00:16:26.820
At this time from this position, there was a shot on the goal or there was a


00:16:26.820 --> 00:16:29.300
pass or there was a takeaway or penalty.


00:16:29.300 --> 00:16:29.780
Yeah.


00:16:29.780 --> 00:16:30.020
Yeah.


00:16:30.020 --> 00:16:30.500
Yeah.


00:16:30.500 --> 00:16:32.660
- Yeah, that's event data, yeah.


00:16:32.660 --> 00:16:35.420
And all the vendors choose different formats.


00:16:35.420 --> 00:16:37.420
- Yeah, yeah, oh geez.


00:16:37.420 --> 00:16:38.260
(laughing)


00:16:38.260 --> 00:16:39.820
That sounds hard.


00:16:39.820 --> 00:16:44.820
So first of all, 25 Hertz of all the people's location.


00:16:44.820 --> 00:16:47.740
This is beyond somebody with just a pen and paper


00:16:47.740 --> 00:16:49.380
and notebook writing down,


00:16:49.380 --> 00:16:52.980
oh, at this time there was a shot on the goal by number 25.


00:16:52.980 --> 00:16:54.420
Like, how do they get that data?


00:16:54.420 --> 00:16:55.300
That's crazy.


00:16:55.300 --> 00:16:58.700
- Yeah, yeah, that's quite an advanced systems that I use.


00:16:58.700 --> 00:17:01.780
So in the stadium, I think they have like 20 cameras


00:17:01.780 --> 00:17:04.580
around the pitch that they use computer vision


00:17:04.580 --> 00:17:08.140
to detect all the players and combine it.


00:17:08.140 --> 00:17:10.380
But I believe, and I'm not really sure


00:17:10.380 --> 00:17:12.460
if they're already with animals on the market


00:17:12.460 --> 00:17:14.700
that do it totally automated.


00:17:14.700 --> 00:17:17.140
But I think from the system that I'm currently used


00:17:17.140 --> 00:17:20.580
in soccer, there are still some people needed


00:17:20.580 --> 00:17:23.040
for difficult situations like a corner kick,


00:17:23.040 --> 00:17:25.580
where a lot of people in a small area


00:17:25.580 --> 00:17:26.420
and a lot of occlusions happen.


00:17:26.420 --> 00:17:27.740
- You can't see the numbers, yeah.


00:17:27.740 --> 00:17:28.940
- Yeah, they can see the numbers.


00:17:28.940 --> 00:17:32.740
So just after a corner, some manual operator


00:17:32.740 --> 00:17:36.180
has to reassign some players or correct something,


00:17:36.180 --> 00:17:38.340
but it's quite a fun system already.


00:17:38.340 --> 00:17:39.540
- It sounds incredibly advanced.


00:17:39.540 --> 00:17:42.500
It sounds like an awesome data set to work with


00:17:42.500 --> 00:17:44.100
because with that much data,


00:17:44.100 --> 00:17:47.020
you really can make a lot of interesting predictions


00:17:47.020 --> 00:17:48.220
and trends.


00:17:48.220 --> 00:17:50.620
I mean, at some point, maybe we'll just


00:17:50.620 --> 00:17:53.520
put some sort of like tracking RFID thing


00:17:53.520 --> 00:17:54.980
on the back of the player's heads,


00:17:54.980 --> 00:17:56.380
just stitch it on there.


00:17:56.380 --> 00:17:59.380
then you can fully automate it, you know?


00:17:59.380 --> 00:18:03.380
Yeah, I think, well, a soccer day ticket, yeah, maybe, yeah.


00:18:03.380 --> 00:18:07.380
Not sure if all players would accept it, but for example, on ice hockey,


00:18:07.380 --> 00:18:09.380
yeah, you can put on the helmet.


00:18:09.380 --> 00:18:11.380
Yeah, you could put on the helmet, sure.


00:18:11.380 --> 00:18:13.380
For football, yeah.


00:18:13.380 --> 00:18:17.380
Things like automobile racing, you know, they have, not all of them,


00:18:17.380 --> 00:18:22.380
but for example, F1 has incredibly a high frequency of, like,


00:18:22.380 --> 00:18:25.380
points that measure where is this car, how fast is it going,


00:18:25.380 --> 00:18:30.340
going, the cars are sending out real-time telemetry. There's certainly many sports


00:18:30.340 --> 00:18:32.860
that have quite high fidelity in their data.


00:18:32.860 --> 00:18:37.980
I must admit I haven't seen the data from everyone yet, but it would be really interesting


00:18:37.980 --> 00:18:43.060
to learn from them and how to work with data and see if it can be applied to football or


00:18:43.060 --> 00:18:47.120
soccer or the sport.


00:18:47.120 --> 00:18:51.300
This portion of Talk Python to Me is brought to you by JetBrains, who encourage you to


00:18:51.300 --> 00:18:53.780
get work done with PyCharm.


00:18:53.780 --> 00:18:55.980
PyCharm Professional is the complete IDE


00:18:55.980 --> 00:18:58.540
that supports all major Python workflows,


00:18:58.540 --> 00:19:00.720
including full stack development.


00:19:00.720 --> 00:19:02.940
That's front-end JavaScript, Python backend,


00:19:02.940 --> 00:19:04.300
and data support,


00:19:04.300 --> 00:19:07.620
as well as data science workflows with Jupyter.


00:19:07.620 --> 00:19:09.540
PyCharm just works out of the box.


00:19:09.540 --> 00:19:11.800
Some editors provide their functionality


00:19:11.800 --> 00:19:13.820
through piecemeal add-ins


00:19:13.820 --> 00:19:16.740
that you put together from a variety of sources.


00:19:16.740 --> 00:19:19.540
PyCharm is ready to go from minute one.


00:19:19.540 --> 00:19:22.240
And PyCharm thrives on complexity.


00:19:22.240 --> 00:19:24.160
The biggest selling point for me personally


00:19:24.160 --> 00:19:26.760
is that PyCharm understands the code structure


00:19:26.760 --> 00:19:29.900
of my entire project, even across languages


00:19:29.900 --> 00:19:33.160
such as Python and SQL and HTML.


00:19:33.160 --> 00:19:35.460
If you see your editor completing statements


00:19:35.460 --> 00:19:38.380
just because the word appears elsewhere in the file,


00:19:38.380 --> 00:19:40.820
but it's not actually relevant to that code block,


00:19:40.820 --> 00:19:43.300
that should make you really nervous.


00:19:43.300 --> 00:19:46.560
I've been a happy paying customer of PyCharm for years.


00:19:46.560 --> 00:19:51.520
Hardly a workday passes that I'm not deep inside PyCharm working on projects here at


00:19:51.520 --> 00:19:53.120
Talk Python.


00:19:53.120 --> 00:19:57.000
What tool is more important to your productivity than your code editor?


00:19:57.000 --> 00:19:59.360
You deserve one that works the best.


00:19:59.360 --> 00:20:06.320
So download your free trial of PyCharm Professional today at talkpython.fm/donewithpycharm and


00:20:06.320 --> 00:20:07.320
get work done.


00:20:07.320 --> 00:20:10.240
That link is in your podcast player show notes.


00:20:10.240 --> 00:20:15.440
Thank you to PyCharm from JetBrains for sponsoring the show and keeping Talk Python going strong.


00:20:15.440 --> 00:20:18.760
I bet it's a lot, actually.


00:20:18.760 --> 00:20:23.320
I bet it is, you know, just in terms of actual quantity of data, you know, how fast


00:20:23.320 --> 00:20:26.320
are sampling and how many cars for how long it's probably a lot of data.


00:20:26.320 --> 00:20:30.840
That's also one of the interesting things about, working with sports data that I


00:20:30.840 --> 00:20:36.600
think the data engineering part and, and this package just focused on reading the data,


00:20:36.600 --> 00:20:40.280
but then the next step, yeah, how to work with, how to work with the data, especially


00:20:40.280 --> 00:20:43.320
if you would like to use the tracking data for a whole season,


00:20:43.320 --> 00:20:46.640
that it's quite some data that also


00:20:46.640 --> 00:20:48.760
pandas can start struggling a bit with.


00:20:48.760 --> 00:20:52.440
It just occurred to me, there's probably a whole other demographic or


00:20:52.440 --> 00:20:54.720
aspect who would be interested in this


00:20:54.720 --> 00:20:57.640
kind of data, it would be like sports betting people.


00:20:57.640 --> 00:21:00.040
I mean, not that I have any interest in that at all.


00:21:00.040 --> 00:21:02.960
But if you were trying to figure out like, okay, if this team plays that team,


00:21:02.960 --> 00:21:06.000
if you can understand, okay, this, their star player,


00:21:06.000 --> 00:21:08.960
if we match up their moves against the other person's moves,


00:21:08.960 --> 00:21:13.160
it turns out there's a weakness in this way for their defense or who knows, right?


00:21:13.160 --> 00:21:16.660
I mean, there's probably with that much data, there's probably some interesting stuff you can do.


00:21:16.660 --> 00:21:25.160
I think that a lot of vendors of the data also have the betting industry as well as their clients.


00:21:25.160 --> 00:21:26.160
Because yeah, they


00:21:26.160 --> 00:21:28.160
I really care to work for them or support them.


00:21:28.160 --> 00:21:31.760
It's a little bit shady, I suppose.


00:21:31.760 --> 00:21:36.660
But yeah, it does seem like you could it's it's almost like really detailed


00:21:36.660 --> 00:21:38.980
information about companies for the stock market.


00:21:38.980 --> 00:21:42.860
This is kind of like a little bit like that for the sports betting in some ways, I suppose.


00:21:42.860 --> 00:21:44.540
Yeah, yeah.


00:21:44.540 --> 00:21:45.260
Interesting.


00:21:45.260 --> 00:21:46.940
I think one of the challenges


00:21:46.940 --> 00:21:49.900
here is probably a lot of this data is not


00:21:49.900 --> 00:21:51.340
easily offered up.


00:21:51.340 --> 00:21:52.780
There's probably not a lot of


00:21:52.780 --> 00:21:55.180
JSON APIs with low latency that are


00:21:55.180 --> 00:21:56.860
super easy to access.


00:21:56.860 --> 00:21:58.380
For some there must be, but not...


00:21:58.380 --> 00:22:00.180
There's probably a lot of data out there that


00:22:00.180 --> 00:22:02.860
is not overly welcome


00:22:02.860 --> 00:22:05.580
to either be given out or it's given out


00:22:05.580 --> 00:22:09.300
over in batch over slow periods or something like that, right?


00:22:09.300 --> 00:22:11.940
Maybe speak to a little bit about the data availability.


00:22:11.940 --> 00:22:13.660
Yeah, that's quite an issue.


00:22:13.660 --> 00:22:16.660
And I know mostly about the soccer data,


00:22:16.660 --> 00:22:21.220
but I can imagine that the same applies to most of the other sports.


00:22:21.220 --> 00:22:24.780
And I think data availability is a major issue,


00:22:24.780 --> 00:22:28.900
at least if you want to encourage the community to work with it


00:22:28.900 --> 00:22:31.060
and do research on it


00:22:31.060 --> 00:22:36.500
and get people build more cool stuff without being within a club.


00:22:36.500 --> 00:22:41.860
There are some companies that already provide quite a big setup of open event data.


00:22:41.860 --> 00:22:48.500
Statsbomb is one of them. I think they provide around 1500 data sets for event data.


00:22:48.500 --> 00:22:55.860
But if you're looking at the tracking data, there may be like 10, maybe 15 sets available,


00:22:55.860 --> 00:23:00.420
because all those vendors have deals with the leagues. They are not allowed to share it.


00:23:00.420 --> 00:23:05.700
So you have to know someone within a club or use a beautiful super


00:23:05.700 --> 00:23:07.040
scrapey or something like that.


00:23:07.040 --> 00:23:07.320
Right.


00:23:07.320 --> 00:23:12.000
That's the other option, but, then it's still very hard to get


00:23:12.000 --> 00:23:15.660
a tracking data because I'm not sure if you can actually scrape it.


00:23:15.660 --> 00:23:20.140
But that's, it is one of the things that, that I noticed when working on


00:23:20.140 --> 00:23:25.020
the, the, the open source of PySports website that are really a lot of


00:23:25.020 --> 00:23:29.700
scrapers and I think that's an indication that there's an issue with


00:23:29.740 --> 00:23:30.860
data availability.


00:23:30.860 --> 00:23:33.940
- Yeah, it's not, this plugs into the API,


00:23:33.940 --> 00:23:35.340
but this is a scraper.


00:23:35.340 --> 00:23:36.180
- Yeah.


00:23:36.180 --> 00:23:37.620
- I guess it's worth pointing out


00:23:37.620 --> 00:23:39.820
or throwing out a bit of word of caution,


00:23:39.820 --> 00:23:42.740
just because the website is publicly available


00:23:42.740 --> 00:23:45.860
and you can hit it with some kind of scraping tool,


00:23:45.860 --> 00:23:49.260
that doesn't mean you legally can do stuff with the data.


00:23:49.260 --> 00:23:51.420
You probably want to be pretty careful about that, right?


00:23:51.420 --> 00:23:54.620
- Yeah, because I think even when it's not explicitly


00:23:54.620 --> 00:23:57.220
mentioned, most of the times it's not allowed


00:23:57.220 --> 00:23:59.560
to scrape the data at all.


00:23:59.560 --> 00:24:02.600
but also in soccer, quite some websites


00:24:02.600 --> 00:24:05.520
that explicitly are forbidden.


00:24:05.520 --> 00:24:08.800
And yeah, so the factors are there,


00:24:08.800 --> 00:24:11.120
and it's also a bit, I was thinking about,


00:24:11.120 --> 00:24:13.800
should I include them or should I not include them?


00:24:13.800 --> 00:24:17.420
Because they kind of encourage non-legal actions,


00:24:17.420 --> 00:24:20.720
but yeah, not really sure about it, again.


00:24:20.720 --> 00:24:24.000
- Yeah, sure, I can see the case for both sides of that.


00:24:24.000 --> 00:24:26.360
But yeah, I just wanna let people know,


00:24:26.360 --> 00:24:28.600
like, just be careful with what you do with the data.


00:24:28.600 --> 00:24:33.160
It's one thing if it's an academic research project and it's just for my own interest or whatever.


00:24:33.160 --> 00:24:38.600
But if you start craving that website and trying to make money out of it, you should not do it.


00:24:38.600 --> 00:24:41.400
Or find a way to do it legitimately.


00:24:41.400 --> 00:24:41.640
Right.


00:24:41.640 --> 00:24:43.800
But just don't sneak through.


00:24:43.800 --> 00:24:44.040
Yeah.


00:24:44.040 --> 00:24:44.520
All right.


00:24:44.520 --> 00:24:51.960
Well, I think it might be fun to let's talk through some of the packages you have here.


00:24:51.960 --> 00:24:57.960
So if you go to pisport.org and there's a nav bar and on the left it says open source.


00:24:57.960 --> 00:25:02.760
And if people click that, then they end up with a whole bunch of,


00:25:02.760 --> 00:25:06.760
I'll open it just this way for a moment, we can look at it and talk about it.


00:25:06.760 --> 00:25:10.760
So if you just click on it, it actually there's a delay as it downloads.


00:25:10.760 --> 00:25:16.280
Yeah, there's still something I need to fix because, yeah, it's quite some package.


00:25:16.280 --> 00:25:19.720
It's not a complaint, it's just I don't know how many pages that is,


00:25:19.720 --> 00:25:21.640
but that's a really small scroll bar.


00:25:21.640 --> 00:25:21.960
Yeah.


00:25:21.960 --> 00:25:25.400
What I noticed that's pretty cool is you can go in, there's a filter


00:25:25.400 --> 00:25:28.400
that you all have, and you can filter by your language.


00:25:28.400 --> 00:25:31.240
Right now you have Haskell, Python, and R, and others.


00:25:31.240 --> 00:25:33.240
And then you can pick by sports,


00:25:33.240 --> 00:25:36.120
and then you can pick by type of thing, right?


00:25:36.120 --> 00:25:39.080
So I filtered our discussion down to Python libraries just


00:25:39.080 --> 00:25:40.200
because, you know,


00:25:40.200 --> 00:25:41.880
- We have a single app for that.


00:25:41.880 --> 00:25:42.880
- Yeah.


00:25:42.880 --> 00:25:46.520
And you could also pick amongst the different types of tools.


00:25:46.520 --> 00:25:48.280
So we talked about the scrapers,


00:25:48.280 --> 00:25:50.680
and probably to a lesser degree, the APIs,


00:25:50.680 --> 00:25:53.040
right, the API clients, which is cool.


00:25:53.040 --> 00:25:55.040
There are some in there, they say, "Here's the API,"


00:25:55.040 --> 00:25:57.040
we just built a strongly typed package


00:25:57.040 --> 00:25:59.640
rather than just doing straight rest, which is great.


00:25:59.640 --> 00:26:01.880
But you also have models and calculators


00:26:01.880 --> 00:26:03.880
like for predicting things


00:26:03.880 --> 00:26:05.880
and then IO for file formats,


00:26:05.880 --> 00:26:08.840
visualization, open data, and databases.


00:26:08.840 --> 00:26:11.240
Right? So I encourage people to


00:26:11.240 --> 00:26:13.000
rather than try to read the whole list,


00:26:13.000 --> 00:26:15.480
which is hundreds and hundreds of packages,


00:26:15.480 --> 00:26:18.640
to, you know, filter down maybe to the sport you're interested in


00:26:18.640 --> 00:26:21.520
or a couple of sports or the type of tooling


00:26:21.520 --> 00:26:22.800
you're interested in. Yeah?


00:26:22.800 --> 00:26:27.840
Yeah, I think filtering is a must, but maybe if you have plenty of time, you could just


00:26:27.840 --> 00:26:33.960
scroll and see what's interesting because it's still, I think, a very interesting list


00:26:33.960 --> 00:26:37.520
to see what's just what available and get inspiration.


00:26:37.520 --> 00:26:38.520
Yeah.


00:26:38.520 --> 00:26:39.520
It's quite a list.


00:26:39.520 --> 00:26:40.520
Yeah.


00:26:40.520 --> 00:26:41.520
So what's the sort here?


00:26:41.520 --> 00:26:44.040
If I come here, how do I, how does this get sorted?


00:26:44.040 --> 00:26:46.120
Like, is there any meaning to the order they appear?


00:26:46.120 --> 00:26:47.880
Is it just when they were entered or?


00:26:47.880 --> 00:26:49.520
That's a good question.


00:26:49.520 --> 00:26:54.300
I also open source the data collection part of this website, but it's, it's


00:26:54.300 --> 00:26:57.320
daily collected at least to provide an update.


00:26:57.320 --> 00:27:01.280
And I think I'm a, I think there's a, an order.


00:27:01.280 --> 00:27:05.880
And when I added the packages, I think that's the order here, but,


00:27:05.880 --> 00:27:08.960
um, to be honest, it can be pretty random.


00:27:08.960 --> 00:27:10.420
Excellent.


00:27:10.420 --> 00:27:10.780
All right.


00:27:10.780 --> 00:27:14.960
So here I'll, I'll just sort of, go through a couple of the scrapers here


00:27:14.960 --> 00:27:19.320
and we can maybe dive into one or two potentially, so there's pie ball.


00:27:19.320 --> 00:27:22.000
I just, we'll just go through just to give people a sense, right.


00:27:22.000 --> 00:27:23.560
Uh, of the ones here, right?


00:27:23.560 --> 00:27:34.680
So there's pie ball, which is a Python API, nice wrapper for stats.nba.com with a focus on NBA and WNBA application.


00:27:34.680 --> 00:27:35.560
That's pretty cool.


00:27:35.560 --> 00:27:42.640
I don't know anything about stats.nba.com, but it looks like, yeah, this is a whole website with all sorts of data.


00:27:42.640 --> 00:27:44.560
It's got players, teams, leaders.


00:27:44.560 --> 00:27:45.400
Looks great.


00:27:45.400 --> 00:27:46.000
Actually.


00:27:46.080 --> 00:27:49.580
I think quite some people are also using this package.


00:27:49.580 --> 00:27:54.420
I think it's mostly used package when working with basketball data.


00:27:54.420 --> 00:27:59.000
And it's nice that they used the API to get this data.


00:27:59.000 --> 00:28:00.800
Yeah, you get quite a bit of data here.


00:28:00.800 --> 00:28:06.300
You've got like the player, their team, their age, their total number of points scored.


00:28:06.300 --> 00:28:08.980
A lot of stuff you can do to sort of compare them.


00:28:08.980 --> 00:28:10.020
And yeah, that's great.


00:28:10.020 --> 00:28:13.820
So if you're into basketball, I think this is a great start.


00:28:13.820 --> 00:28:17.100
That's also quite actively maintained.


00:28:17.100 --> 00:28:22.300
That's also one of the things that I intentionally mentioned on the list,


00:28:22.300 --> 00:28:26.140
because some packages are not really maintained well.


00:28:26.140 --> 00:28:28.460
I think it's a benefit.


00:28:28.460 --> 00:28:32.620
Yeah, one of the things in the list that you call out is the number of contributors,


00:28:32.620 --> 00:28:36.540
the latest version, when the last commit was to the package.


00:28:36.540 --> 00:28:37.420
That's pretty cool.


00:28:37.420 --> 00:28:41.260
In the beginning, I thought, well, maybe I can just manually update the list, but...


00:28:41.260 --> 00:28:46.260
But then I decided, I think data engineering is fun.


00:28:46.260 --> 00:28:51.800
Let's find a way to automatically fetch the data


00:28:51.800 --> 00:28:52.820
and update it.


00:28:52.820 --> 00:28:56.740
Also the license is pretty important to show it here.


00:28:56.740 --> 00:29:01.000
And also a lot commit to see how actively it's maintained


00:29:01.000 --> 00:29:03.760
the latest versions and also the contributors.


00:29:03.760 --> 00:29:06.340
Because I think it's good that some packages


00:29:06.340 --> 00:29:08.500
have some more contributors that you do.


00:29:08.500 --> 00:29:10.140
- Sure, the difference between a package


00:29:10.140 --> 00:29:13.220
with one contributor and one with 30 contributors.


00:29:13.220 --> 00:29:14.440
That's a big difference.


00:29:14.440 --> 00:29:15.280
It's a really big difference, yeah.


00:29:15.280 --> 00:29:18.900
- Yeah, I think it's also good for people to see


00:29:18.900 --> 00:29:21.740
if there's a package with just a single contributor


00:29:21.740 --> 00:29:25.320
that might give an opportunity to contribute to it


00:29:25.320 --> 00:29:26.540
or work together.


00:29:26.540 --> 00:29:29.620
So I would like to encourage people


00:29:29.620 --> 00:29:31.300
to get involved in those projects.


00:29:31.300 --> 00:29:32.140
- Yeah, that's a good idea.


00:29:32.140 --> 00:29:34.500
- So yeah, that could help out.


00:29:34.500 --> 00:29:35.860
- Yeah, and each one of these packages,


00:29:35.860 --> 00:29:38.140
you can go in and open the details here


00:29:38.140 --> 00:29:39.980
and it gives you a little bit more information.


00:29:39.980 --> 00:29:43.140
Like it, for example, it actually lists the contributors and links to their


00:29:43.140 --> 00:29:48.540
GitHub profiles and choose their website and the GitHub page and IPI and so on.


00:29:48.540 --> 00:29:48.700
Yeah.


00:29:48.700 --> 00:29:48.980
Yeah.


00:29:48.980 --> 00:29:52.460
And also you can click on one of the contributes and see what


00:29:52.460 --> 00:29:54.260
other packages they, they built.


00:29:54.260 --> 00:29:55.940
Oh, really?


00:29:55.940 --> 00:29:56.420
Okay.


00:29:56.420 --> 00:30:00.540
So like, if I click on this one, yeah, they've done this, just this one.


00:30:00.540 --> 00:30:01.980
Well, and this one, just a single one.


00:30:01.980 --> 00:30:02.220
Yeah.


00:30:02.220 --> 00:30:04.220
Some of them, they might have worked on multiple.


00:30:04.220 --> 00:30:05.860
I know depend upon has worked on a few.


00:30:05.860 --> 00:30:07.380
Yeah.


00:30:07.380 --> 00:30:09.100
That's a really nice to contribute to that.


00:30:09.100 --> 00:30:09.380
Yeah.


00:30:09.940 --> 00:30:14.040
Yeah, yeah, I'm the absolutely prolific open source contributor.


00:30:14.040 --> 00:30:14.540
Yeah.


00:30:14.540 --> 00:30:15.540
Works on my project too.


00:30:15.540 --> 00:30:20.740
This portion of Talk Python to Me is brought to you by InfluxData,


00:30:20.740 --> 00:30:22.740
the makers of InfluxDB.


00:30:22.740 --> 00:30:27.240
InfluxDB is a database purpose-built for handling time series data


00:30:27.240 --> 00:30:30.540
at a massive scale for real-time analytics.


00:30:30.540 --> 00:30:34.640
Developers can ingest, store, and analyze all types of time series data,


00:30:34.640 --> 00:30:37.840
metrics, events, and traces in a single platform.


00:30:37.840 --> 00:30:39.960
So dear listener, let me ask you a question.


00:30:39.960 --> 00:30:41.520
How would boundless cardinality


00:30:41.520 --> 00:30:43.960
and lightning fast SQL queries impact the way


00:30:43.960 --> 00:30:46.440
that you develop real-time applications?


00:30:46.440 --> 00:30:49.580
InfluxDB processes large time series data sets


00:30:49.580 --> 00:30:51.720
and provides low latency SQL queries,


00:30:51.720 --> 00:30:53.680
making it the go-to choice


00:30:53.680 --> 00:30:56.000
for developers building real-time applications


00:30:56.000 --> 00:30:58.000
and seeking crucial insights.


00:30:58.000 --> 00:30:59.480
For developer efficiency,


00:30:59.480 --> 00:31:02.080
InfluxDB helps you create IoT, analytics,


00:31:02.080 --> 00:31:04.960
and cloud applications using timestamped data


00:31:04.960 --> 00:31:06.980
rapidly and at scale.


00:31:06.980 --> 00:31:09.540
It's designed to ingest billions of data points


00:31:09.540 --> 00:31:12.460
in real time with unlimited cardinality.


00:31:12.460 --> 00:31:14.620
InfluxDB streamlines building once


00:31:14.620 --> 00:31:17.660
and deploying across various products and environments


00:31:17.660 --> 00:31:20.940
from the edge, on-premise, and to the cloud.


00:31:20.940 --> 00:31:24.820
Try it for free at talkpython.fm/influxdb.


00:31:24.820 --> 00:31:27.700
The link is in your podcast player show notes.


00:31:27.700 --> 00:31:30.140
Thanks to InfluxData for supporting the show.


00:31:30.140 --> 00:31:35.540
I didn't realize you could actually see all the projects


00:31:35.540 --> 00:31:38.660
that PySport knows about that that particular user works on.


00:31:38.660 --> 00:31:40.160
That's a cool aspect of it.


00:31:40.160 --> 00:31:44.660
>> I spent quite some time on fetching all the data and trying to combine it.


00:31:44.660 --> 00:31:49.420
Also fetching data for Python and also do the similar for R packages.


00:31:49.420 --> 00:31:53.860
Yeah, and seeing how to get all available data on one place.


00:31:53.860 --> 00:31:57.180
It also tries to fetch images or


00:31:57.180 --> 00:32:01.580
screenshots from the read-me's of the report stories that works for some.


00:32:01.580 --> 00:32:04.920
>> Yeah, that's nice. Screenshots can be very helpful.


00:32:04.920 --> 00:32:09.720
Less important on the scrapers, more on the visualizers probably, but still.


00:32:09.720 --> 00:32:10.600
Yeah, definitely.


00:32:10.600 --> 00:32:14.040
What is, opensource.pysport.org written in?


00:32:14.040 --> 00:32:19.720
It's, in, React using, next, JS.


00:32:19.720 --> 00:32:25.320
So it was also quite an adventure for me because it's the first, application that might also


00:32:25.320 --> 00:32:31.720
explain why it's still a bit, slow on loading because I didn't really dive into how to, to make


00:32:31.720 --> 00:32:36.180
make it faster, but you still went, but in the backend it's, it's Python choosing


00:32:36.180 --> 00:32:37.560
Luigi.


00:32:37.560 --> 00:32:38.560
Okay.


00:32:38.560 --> 00:32:45.900
That's, I still think it's a pretty interesting tool because it's really simple to set up


00:32:45.900 --> 00:32:48.580
like August, August station or some tasks.


00:32:48.580 --> 00:32:49.580
Right.


00:32:49.580 --> 00:32:52.240
Like the daily scraping, the updating the packages and that kind of stuff.


00:32:52.240 --> 00:32:53.240
Yeah.


00:32:53.240 --> 00:32:58.380
And then there's a GitHub action that runs on a daily basis and then fetch all the data


00:32:58.380 --> 00:33:01.620
and updates and commits it in a different branch.


00:33:01.620 --> 00:33:05.980
And that one gets deployed to a personal, I believe.


00:33:05.980 --> 00:33:07.420
- Okay, very interesting.


00:33:07.420 --> 00:33:10.180
- But if you are interested in the source,


00:33:10.180 --> 00:33:13.420
you can also, it's also hope source.


00:33:13.420 --> 00:33:14.380
- Okay, great.


00:33:14.380 --> 00:33:18.260
So, Piebald for NBA, we have the Hockey Scraper,


00:33:18.260 --> 00:33:22.740
which is for scraping NHL play-by-play and shift data


00:33:22.740 --> 00:33:24.060
with six contributors.


00:33:24.060 --> 00:33:25.100
That's pretty interesting.


00:33:25.100 --> 00:33:27.140
- What you'll see on the filter list


00:33:27.140 --> 00:33:32.500
for every sports as a package also for the NHL for ice hockey.


00:33:32.500 --> 00:33:36.340
That's a little bit less maintained, I think.


00:33:36.340 --> 00:33:41.060
But I have to, I'm not really sure if it still works,


00:33:41.060 --> 00:33:44.980
because with those scrapers, it can work today and not tomorrow.


00:33:44.980 --> 00:33:49.060
It doesn't even necessarily mean that they were intentionally blocked, right?


00:33:49.060 --> 00:33:51.460
It could just be, "Hey, we've redesigned our site.


00:33:51.460 --> 00:33:52.500
Doesn't that look awesome?"


00:33:52.500 --> 00:33:55.540
You're like, "Oh, the CSS selectors no longer pull up the thing."


00:33:55.540 --> 00:33:57.200
So, yeah.


00:33:57.200 --> 00:33:59.420
So that's also on the scraping part.


00:33:59.420 --> 00:34:03.720
If it's a last commit is like a while ago yet.


00:34:03.720 --> 00:34:05.480
It might be broken.


00:34:05.480 --> 00:34:06.400
Maybe, maybe not.


00:34:06.400 --> 00:34:07.000
Yeah, sure.


00:34:07.000 --> 00:34:07.420
All right.


00:34:07.420 --> 00:34:08.560
Let's see some more.


00:34:08.560 --> 00:34:12.960
And I think in the stats bomb, PI, there's an official, package.


00:34:12.960 --> 00:34:16.480
There's also cool that, sets bomb provides an open source


00:34:16.480 --> 00:34:18.160
package for accessing their data.


00:34:18.160 --> 00:34:18.320
Yeah.


00:34:18.320 --> 00:34:19.200
What is stats bomb?


00:34:19.200 --> 00:34:22.640
I see that showing up in many places on these different packages.


00:34:22.800 --> 00:34:27.280
- Yeah, Statsbomb is, I think, one of the leading providers


00:34:27.280 --> 00:34:29.980
of event data in football,


00:34:29.980 --> 00:34:33.380
and I think in both football and soccer, and in football.


00:34:33.380 --> 00:34:35.380
So they provide event data,


00:34:35.380 --> 00:34:37.580
so everything that happens on the pitch,


00:34:37.580 --> 00:34:41.660
like passes, dribbles, interceptions, everything.


00:34:41.660 --> 00:34:45.160
They are also one of the providers of the open data sets.


00:34:45.160 --> 00:34:48.020
- Okay, yeah, they've got a free data section, that's cool.


00:34:48.020 --> 00:34:48.860
- Yeah.


00:34:48.860 --> 00:34:51.360
- They proclaim themselves as data champions.


00:34:51.360 --> 00:34:52.200
(laughing)


00:34:52.200 --> 00:34:55.200
Yeah, I think the data is pretty good.


00:34:55.200 --> 00:35:00.200
I'm thinking also one of the best in the market right now.


00:35:00.200 --> 00:35:03.200
But at least that's what I heard from some users.


00:35:03.200 --> 00:35:04.200
Sure.


00:35:04.200 --> 00:35:05.200
They even have courses.


00:35:05.200 --> 00:35:08.200
Modern Scouting and Data-Driven Recruitment.


00:35:08.200 --> 00:35:10.200
That's kind of interesting, isn't it?


00:35:10.200 --> 00:35:16.200
Yeah, you also have to figure out how to apply data science in your job.


00:35:16.200 --> 00:35:21.200
So how to use it and how to use the data for scouting purposes.


00:35:21.200 --> 00:35:22.200
Yeah.


00:35:22.200 --> 00:35:27.300
If you work in professional, a professional sports organization or even college sports,


00:35:27.300 --> 00:35:31.900
the US at least, there's a lot of recruiting people up from lower levels.


00:35:31.900 --> 00:35:39.360
The type is in all sports, but I think the data is really helping to make the number


00:35:39.360 --> 00:35:43.300
of players that you have to watch from the footage a lot less.


00:35:43.300 --> 00:35:49.400
So if you can already make a short list instead of watching 15,000 players, then yeah, it's


00:35:49.400 --> 00:35:50.400
really convenient.


00:35:50.400 --> 00:35:55.860
Or maybe you're looking for a particular asset or a particular part of the play


00:35:55.860 --> 00:35:57.920
that a player is good at, right?


00:35:57.920 --> 00:36:02.720
Maybe you're looking for a quarterback for a football team that is especially


00:36:02.720 --> 00:36:05.240
good at running the ball in addition to just throwing it right.


00:36:05.240 --> 00:36:10.100
You could, you could ask the data for that and really narrow in quite quickly, I


00:36:10.100 --> 00:36:10.480
imagine.


00:36:10.480 --> 00:36:15.340
And then you have to work with the data, figuring out how to extract it because


00:36:15.340 --> 00:36:19.240
maybe that single metric that's really important for you is not available in


00:36:19.240 --> 00:36:20.480
original data set.


00:36:20.480 --> 00:36:24.580
So then you have to figure out how to work with the data and, get


00:36:24.580 --> 00:36:27.240
those metrics out of the drawer data.


00:36:27.240 --> 00:36:27.440
Yeah.


00:36:27.440 --> 00:36:29.420
Maybe it's something calculated or inferred or.


00:36:29.420 --> 00:36:29.780
Yeah.


00:36:29.780 --> 00:36:33.340
And that's also one of the things that happens in, in a soccer based on the


00:36:33.340 --> 00:36:37.500
tracking data, but it will probably happen in also in football and all the


00:36:37.500 --> 00:36:42.260
other sports that clubs will define their own metrics based on folks up on


00:36:42.260 --> 00:36:47.980
tracking data and use that, to, you know, to figure out what players match


00:36:47.980 --> 00:36:49.740
their own play the most.


00:36:49.740 --> 00:36:52.260
>> Cool. Okay. So yeah, as you can see,


00:36:52.260 --> 00:36:54.300
there's a bunch of stats bombs here.


00:36:54.300 --> 00:36:57.020
Pi Baseball, an MLB game,


00:36:57.020 --> 00:37:00.340
seem to be a couple of things around baseball data.


00:37:00.340 --> 00:37:01.940
Baseball is one of those games,


00:37:01.940 --> 00:37:05.860
it's kind of, I feel like baseball is one of those games that was


00:37:05.860 --> 00:37:10.780
almost created by a statistician just so they could come up with stats.


00:37:10.780 --> 00:37:14.500
There's so many stats and people get averages.


00:37:14.500 --> 00:37:15.620
What kind of hitter are they?


00:37:15.620 --> 00:37:19.660
well, there's like a 0.3, you know, there are 300 hitter, right?


00:37:19.660 --> 00:37:22.540
For 30% and all that.


00:37:22.540 --> 00:37:24.020
And I'm not a huge fan of baseball.


00:37:24.020 --> 00:37:26.020
I find it kind of a slow game.


00:37:26.020 --> 00:37:27.540
It's kind of fun to play, but to watch it.


00:37:27.540 --> 00:37:29.140
And it's like, you know, same as golf.


00:37:29.140 --> 00:37:30.020
I don't watch those things.


00:37:30.020 --> 00:37:35.140
I'm sure they're fun to play, but it's just like in terms of stats, these


00:37:35.140 --> 00:37:38.580
kinds of games, there's probably a ton of stats here because it's all about stats.


00:37:38.580 --> 00:37:38.820
There.


00:37:38.820 --> 00:37:43.740
I also believe that, the baseball data science departments are one of the


00:37:43.740 --> 00:37:45.700
biggest departments over all sport.


00:37:45.700 --> 00:37:48.600
And maybe, but I'm not sure about it.


00:37:48.600 --> 00:37:51.480
You can also make a lot of impact there.


00:37:51.480 --> 00:37:55.840
Maybe because also in all the sports, for example, soccer, a lot of things


00:37:55.840 --> 00:37:58.880
has impact on the eventual outcome.


00:37:58.880 --> 00:38:04.580
It's also a discussion if all data is available to, to know


00:38:04.580 --> 00:38:06.860
what actually has the most impact.


00:38:06.860 --> 00:38:11.180
So this is also one of the discussions within the soccer and list community.


00:38:11.240 --> 00:38:16.720
Yeah. For both of these, Pi Baseball and MLB Game, you can see from your Luigi


00:38:16.720 --> 00:38:21.480
automation, there's, they're, they're both quite well, the MLB game is not


00:38:21.480 --> 00:38:22.480
particularly up to date.


00:38:22.480 --> 00:38:26.960
I guess the Pi Baseball one is more up to date, but you know, 13 contributors, 30


00:38:26.960 --> 00:38:27.840
contributors.


00:38:27.840 --> 00:38:28.560
That's quite a lot.


00:38:28.560 --> 00:38:28.760
Yeah.


00:38:28.760 --> 00:38:29.520
That's quite a lot.


00:38:29.520 --> 00:38:33.040
And the, the Pi Baseball was updated this month, right?


00:38:33.040 --> 00:38:36.240
That's, but you know, when I saw these, I'm like, oh, these are kind of similar.


00:38:36.240 --> 00:38:40.000
And then I look at, look at your page here and I see, oh, well, Pi Baseball is,


00:38:40.120 --> 00:38:43.640
you know, way more up-to-date modern and should check that out first.


00:38:43.640 --> 00:38:43.820
Right.


00:38:43.820 --> 00:38:45.780
That's the kind of value you get for having that info.


00:38:45.780 --> 00:38:45.940
Yeah.


00:38:45.940 --> 00:38:51.280
That's also the intention that you have a quite quick overview of,


00:38:51.280 --> 00:38:52.460
uh, yeah.


00:38:52.460 --> 00:38:53.880
Oh, it's maintained it.


00:38:53.880 --> 00:38:55.060
And, yeah,


00:38:55.060 --> 00:38:58.000
and that one against also goes against the API.


00:38:58.000 --> 00:39:02.160
So let's see, a couple more, I guess it's worth, giving a


00:39:02.160 --> 00:39:06.780
shout out to the NFL fast pie that, well, you know, NFL's, got a lot of data as


00:39:06.780 --> 00:39:09.420
well, what else there's some college baseball.


00:39:09.780 --> 00:39:12.840
Here's one that I think is that shows up across a lot of the different categories,


00:39:12.840 --> 00:39:16.440
because it seems to do a lot, which is fast F1.


00:39:16.440 --> 00:39:17.120
Have you seen that?


00:39:17.120 --> 00:39:19.860
Have you played with this any also updated this month?


00:39:19.860 --> 00:39:23.040
I should dig into it because quite some contributors.


00:39:23.040 --> 00:39:28.880
And I think it's really interesting to, to also see the motor sports or cycling


00:39:28.880 --> 00:39:32.600
or more those sports to see what they are doing, how they are doing it.


00:39:32.600 --> 00:39:32.820
Yeah.


00:39:32.820 --> 00:39:35.200
I noticed looking through here that there's not a lot of motor


00:39:35.200 --> 00:39:37.140
sports compared to the other sports.


00:39:37.400 --> 00:39:39.480
And so people are, if you're out there,


00:39:39.480 --> 00:39:41.800
like if you're an IndyCar or if you're a motocross


00:39:41.800 --> 00:39:43.740
or somewhere like, and you got a package,


00:39:43.740 --> 00:39:44.940
then shoot it over to these guys


00:39:44.940 --> 00:39:45.960
and have them put it in the list.


00:39:45.960 --> 00:39:46.800
That'd be cool.


00:39:46.800 --> 00:39:48.720
Yeah, the fast F1, they've got a page here


00:39:48.720 --> 00:39:49.960
that has a bunch of things.


00:39:49.960 --> 00:39:53.720
It has access to timing data, telemetry, session results,


00:39:53.720 --> 00:39:57.960
and all the data is provided in an extended Panda data,


00:39:57.960 --> 00:40:01.480
Panda's data frame format, which is pretty cool, right?


00:40:01.480 --> 00:40:03.320
Integration with matplotlib.


00:40:03.320 --> 00:40:05.280
There's an examples gallery too.


00:40:05.280 --> 00:40:10.080
You come over here and you can see it has things like position changes during the race.


00:40:10.080 --> 00:40:15.780
So this, it'll say, if you go up here, it'll do things like, you gotta go for it.


00:40:15.780 --> 00:40:22.780
You know, go to the seat, get season 23, race one, or for race, I guess, rather than practice or qualifying.


00:40:22.780 --> 00:40:24.080
And that's Bahrain.


00:40:24.080 --> 00:40:28.780
And so then here's, you know, it has all the drivers, their time throughout the race, their position.


00:40:28.780 --> 00:40:30.180
You can see probably pit stop.


00:40:30.180 --> 00:40:31.780
There's a lot of cool stuff you can see in here.


00:40:31.780 --> 00:40:32.800
It looks really nice.


00:40:32.800 --> 00:40:37.180
And also with those examples, I think that's really helpful to get


00:40:37.180 --> 00:40:39.860
people started with those packages.


00:40:39.860 --> 00:40:40.080
Yeah.


00:40:40.080 --> 00:40:41.980
It's not exactly a Jupyter notebook.


00:40:41.980 --> 00:40:45.500
It's the HTML of a Jupyter notebook, but you know, it's still


00:40:45.500 --> 00:40:46.580
exactly what you need, right?


00:40:46.580 --> 00:40:47.740
To, but I think you can use it.


00:40:47.740 --> 00:40:49.540
Even I wrote it by a notebook.


00:40:49.540 --> 00:40:50.460
You download it right there.


00:40:50.460 --> 00:40:50.860
Absolutely.


00:40:50.860 --> 00:40:51.020
Yeah.


00:40:51.020 --> 00:40:51.220
Yeah.


00:40:51.220 --> 00:40:51.460
Yeah.


00:40:51.460 --> 00:40:54.900
And apparently two and a half seconds to generate the script.


00:40:54.900 --> 00:40:56.540
Let's see.


00:40:56.540 --> 00:41:00.180
You can, you've even got cool visualizations, like on the track,


00:41:00.460 --> 00:41:05.380
color it by, by speed around the tracks of the, you know, there's a lot of cool data here.


00:41:05.380 --> 00:41:09.940
I'm not really sure why I haven't seen this one before, but yeah, it looks really, really cool.


00:41:09.940 --> 00:41:11.140
Yeah.


00:41:11.140 --> 00:41:14.020
When I looked, I looked around a couple of the different packages and this one, like the


00:41:14.020 --> 00:41:16.820
documentation and examples and stuff seem, seem super good.


00:41:16.820 --> 00:41:17.500
Okay.


00:41:17.500 --> 00:41:18.920
So that's the scrapers.


00:41:18.920 --> 00:41:21.340
There's many more, there's plenty more there.


00:41:21.340 --> 00:41:25.640
Another one, models, calculators, maybe take us through some of the ones


00:41:25.640 --> 00:41:27.020
that stand out in this category.


00:41:27.060 --> 00:41:30.600
Like for example, there's Lori's code for Metro code tracking data.


00:41:30.600 --> 00:41:30.960
I love it.


00:41:30.960 --> 00:41:32.200
That is just, it's a Lori's code.


00:41:32.200 --> 00:41:33.780
Yeah.


00:41:33.780 --> 00:41:38.680
So this is mostly about how to also do all kinds of modeling on top of it.


00:41:38.680 --> 00:41:40.620
I do predictions on top of data.


00:41:40.620 --> 00:41:40.980
Yeah.


00:41:40.980 --> 00:41:45.600
One of the, the picks that I think is pretty interesting is the soccer action.


00:41:45.600 --> 00:41:45.760
Yeah.


00:41:45.760 --> 00:41:47.140
Of course, again, it's soccer.


00:41:47.140 --> 00:41:52.220
Uh, it might, there's only Python possibly, but for example, they have soccer XG,


00:41:52.220 --> 00:41:55.980
which is what does that XG boost models for soccer event data?


00:41:56.020 --> 00:41:58.900
Yes, the expected goals.


00:41:58.900 --> 00:42:03.300
So what's the expected value for a certain shot,


00:42:03.300 --> 00:42:05.540
if it should go in or not.


00:42:05.540 --> 00:42:09.700
So that's also based on a position on the page,


00:42:09.700 --> 00:42:13.620
how many players are between the player with the ball


00:42:13.620 --> 00:42:14.620
and the goal.


00:42:14.620 --> 00:42:17.980
So you can use it to determine, yeah,


00:42:17.980 --> 00:42:20.660
how if a player should score a goal


00:42:20.660 --> 00:42:22.500
and how many goals he should make.


00:42:22.500 --> 00:42:23.460
- And the likelihoods.


00:42:23.460 --> 00:42:24.300
Yeah.


00:42:24.300 --> 00:42:28.500
I think this is actually one of the really interesting aspects is the model and calculate it.


00:42:28.500 --> 00:42:30.800
You know, the prediction side is pretty cool.


00:42:30.800 --> 00:42:36.940
There's quite some work to do for PiSport because for example, the expected goals,


00:42:36.940 --> 00:42:39.900
there's also one of the things that I've seen in ice hockey,


00:42:39.900 --> 00:42:44.400
also in order sports where you have to score within a goal.


00:42:44.400 --> 00:42:49.500
And I think it would be cool to find a way to abstract it over all sport.


00:42:49.500 --> 00:42:53.500
Yeah, because it is kind of the same idea, probably different datasets,


00:42:53.500 --> 00:42:58.820
But all right, like scoring in hockey and scoring in soccer is from a structural


00:42:58.820 --> 00:43:02.320
perspective of the data is kind of the same thing, even though it's really,


00:43:02.320 --> 00:43:06.000
yeah, quite different in size of the goal and how easy it is and all that.


00:43:06.000 --> 00:43:06.220
Yeah.


00:43:06.220 --> 00:43:09.500
But I think we can still learn from, yeah, from the other sports


00:43:09.500 --> 00:43:10.660
and see how they did it.


00:43:10.660 --> 00:43:10.920
Yeah.


00:43:10.920 --> 00:43:12.760
Train up a model, but on different data.


00:43:12.760 --> 00:43:13.000
Right.


00:43:13.000 --> 00:43:14.740
But same, same type of model potentially.


00:43:14.740 --> 00:43:14.980
Yeah.


00:43:14.980 --> 00:43:17.100
Maybe some different features, but, yeah.


00:43:17.100 --> 00:43:17.420
Yeah.


00:43:17.420 --> 00:43:23.260
So the next category is IO and that obviously stats bomb is in here, right?


00:43:23.260 --> 00:43:27.740
Python package to parse stats bombs, JSON data to CSV, which is cool.


00:43:27.740 --> 00:43:31.660
Some on soccer, the spattle format, which I have no idea what that is.


00:43:31.660 --> 00:43:31.820
Yeah.


00:43:31.820 --> 00:43:37.660
That's also one of the things they built to make like atomic data format.


00:43:37.660 --> 00:43:39.340
That's yeah.


00:43:39.340 --> 00:43:41.340
Also kind of standardized.


00:43:41.340 --> 00:43:44.100
So there's some overlap between soccer action and Kloppy.


00:43:44.100 --> 00:43:49.140
I think they mostly focused on how to eventually work with the data.


00:43:49.340 --> 00:43:55.860
So calculate also the expected threat and also like a contribution model.


00:43:55.860 --> 00:44:00.140
So for every action towards our goal, I was there.


00:44:00.140 --> 00:44:00.900
Right.


00:44:00.900 --> 00:44:01.140
Okay.


00:44:01.140 --> 00:44:05.300
So maybe there was a takeaway and then a pass and a pass and then a score, like


00:44:05.300 --> 00:44:08.220
all of those people should somehow get credit for that potentially, right?


00:44:08.220 --> 00:44:08.500
Yeah.


00:44:08.500 --> 00:44:08.900
Okay.


00:44:08.900 --> 00:44:09.580
Makes sense.


00:44:09.580 --> 00:44:15.460
But they also build the way to note the data and they will currently also.


00:44:15.700 --> 00:44:20.860
working together with them to see if we can make copy to load the data and


00:44:20.860 --> 00:44:24.800
after the copy package, focus on unloading it and standardizing it.


00:44:24.800 --> 00:44:27.400
And then after soccer action using it.


00:44:27.400 --> 00:44:30.560
So see how the, the legal block blocks can work together.


00:44:30.560 --> 00:44:31.060
Absolutely.


00:44:31.060 --> 00:44:36.360
We have the NFL DB, a library to manage and update NFL data in a relational database.


00:44:36.360 --> 00:44:37.180
That's kind of cool.


00:44:37.180 --> 00:44:37.780
All right.


00:44:37.780 --> 00:44:38.200
Let's see.


00:44:38.200 --> 00:44:40.600
The next category is the visualization.


00:44:40.600 --> 00:44:42.340
I've probably the, excuse me.


00:44:42.340 --> 00:44:45.640
The most important part is probably the actual data acquisition, but


00:44:45.640 --> 00:44:48.680
the most desired part is probably the visualization, right?


00:44:48.680 --> 00:44:53.480
Like the data engineering part is, is not really, really sexy.


00:44:53.480 --> 00:44:55.000
I mean, no one sees it.


00:44:55.000 --> 00:44:58.740
And output is a structured CSV or parquet file.


00:44:58.740 --> 00:45:04.160
So it is not really cool to show, but for example, the MPL soccer, I think,


00:45:04.160 --> 00:45:11.320
uh, it's, it's a really, really nice packet used by every person in the soccer


00:45:11.320 --> 00:45:12.000
community.


00:45:12.000 --> 00:45:12.360
Yeah.


00:45:12.360 --> 00:45:14.640
There's a lot of, contributors here.


00:45:14.640 --> 00:45:15.040
Yeah.


00:45:15.320 --> 00:45:17.900
And the visualizations look really cool.


00:45:17.900 --> 00:45:18.740
- Yeah.


00:45:18.740 --> 00:45:22.320
- They also have a huge list of examples.


00:45:22.320 --> 00:45:23.160
- Okay.


00:45:23.160 --> 00:45:27.400
- So all kind of, you can just copy and paste to create some.


00:45:27.400 --> 00:45:29.040
- Pizza charts, I love them.


00:45:29.040 --> 00:45:29.880
- Yeah.


00:45:29.880 --> 00:45:31.320
- Yeah, we'll actually come back to the pizza charts


00:45:31.320 --> 00:45:32.440
in just a moment actually.


00:45:32.440 --> 00:45:35.840
But yeah, these are some good looking visualizations here.


00:45:35.840 --> 00:45:37.600
- Yeah, and I think the interesting thing


00:45:37.600 --> 00:45:39.960
about this package is that at some point


00:45:39.960 --> 00:45:43.120
there were two packages that did similar things


00:45:43.120 --> 00:45:46.340
And then they decided, well, we should just work together.


00:45:46.340 --> 00:45:49.080
And they spent quite some time on integrating those packages.


00:45:49.080 --> 00:45:50.360
And then there was one.


00:45:50.360 --> 00:45:52.960
And I think that's really cool to see


00:45:52.960 --> 00:45:55.140
that instead of kind of competing,


00:45:55.140 --> 00:45:57.760
they decided to work together and make,


00:45:57.760 --> 00:46:00.360
I think, one of the most awesome packages


00:46:00.360 --> 00:46:01.640
for the soccer community.


00:46:01.640 --> 00:46:02.600
- It's really nice.


00:46:02.600 --> 00:46:03.440
It's really nice.


00:46:03.440 --> 00:46:05.800
There's a lot of soccer ones in here.


00:46:05.800 --> 00:46:09.120
There's also one for a PT plot for American football,


00:46:09.120 --> 00:46:11.840
although I don't understand what PT stands for.


00:46:11.840 --> 00:46:14.480
And then the fast formula one is also in there.


00:46:14.480 --> 00:46:15.480
We already saw those pictures,


00:46:15.480 --> 00:46:17.520
but a lot of nice visualizations there.


00:46:17.520 --> 00:46:18.360
- Yeah.


00:46:18.360 --> 00:46:20.240
- And is that it for all the categories?


00:46:20.240 --> 00:46:21.800
No, then there's the open data.


00:46:21.800 --> 00:46:23.960
- Yeah, I think maybe when I look at this list,


00:46:23.960 --> 00:46:25.880
there are some missing.


00:46:25.880 --> 00:46:29.000
It's still a bit limited on what data is available.


00:46:29.000 --> 00:46:31.520
That's something that we should work together


00:46:31.520 --> 00:46:34.000
also with Leaks to see if there's a way


00:46:34.000 --> 00:46:37.080
to make some more data available.


00:46:37.080 --> 00:46:39.560
- Yeah, they have it and they offer to publicly


00:46:39.560 --> 00:46:40.400
put it in the list, right?


00:46:40.400 --> 00:46:43.560
- When it's available, I would definitely add it.


00:46:43.560 --> 00:46:46.720
But there's already some interesting data,


00:46:46.720 --> 00:46:49.400
there may be a little bit smaller data sets,


00:46:49.400 --> 00:46:50.760
but you can definitely use it


00:46:50.760 --> 00:46:52.720
to start playing around with it.


00:46:52.720 --> 00:46:57.720
- All right, so I think that kind of covers the list


00:46:57.720 --> 00:47:00.520
with the Python filter sort on.


00:47:00.520 --> 00:47:04.040
You wanted also to give a quick shout out to NFL Verse,


00:47:04.040 --> 00:47:06.240
right, because while not Python,


00:47:06.240 --> 00:47:09.240
is quite a series of packages that does cool stuff


00:47:09.240 --> 00:47:11.700
in the NFL for that data, right?


00:47:11.700 --> 00:47:11.900
Yeah.


00:47:11.900 --> 00:47:16.180
So it's, it's, it's not Python is for the R users, but I think what's, what's


00:47:16.180 --> 00:47:20.920
really interesting there, what they did is they created quite some different


00:47:20.920 --> 00:47:25.620
packages, one for collecting the data, one for organizing it, one for reading


00:47:25.620 --> 00:47:30.300
the data, one for doing all kinds of modeling, one for creating the visualizations.


00:47:30.300 --> 00:47:35.940
And I think that's also an example for, for, for other sports on how to,


00:47:36.180 --> 00:47:38.060
to make those packages available,


00:47:38.060 --> 00:47:40.500
making sure that everything fits together.


00:47:40.500 --> 00:47:41.500
- Yeah, that's cool.


00:47:41.500 --> 00:47:44.300
It's under the NFL Virtual Organization,


00:47:44.300 --> 00:47:45.820
but a bunch of different projects.


00:47:45.820 --> 00:47:47.740
You talked about having the data


00:47:47.740 --> 00:47:50.900
and stuff that's not immediately obvious or predictable.


00:47:50.900 --> 00:47:53.500
You might need a higher level sort of thinking about it.


00:47:53.500 --> 00:47:56.940
And one of them that stands out here is the NFL Fourth,


00:47:56.940 --> 00:48:00.020
which studies fourth down decision data


00:48:00.020 --> 00:48:01.540
with the NFL version models,


00:48:01.540 --> 00:48:02.780
which is kind of cool because


00:48:02.780 --> 00:48:05.100
that's one of the big decisions that a coach makes.


00:48:05.100 --> 00:48:09.660
It can make the game or it can lose the game and there's a go, no-go decision, right?


00:48:09.660 --> 00:48:13.180
And there's a lot of, it's not just, well, they went this far, then they didn't make it.


00:48:13.180 --> 00:48:18.220
It's, well, it was the, they had 30 seconds left in the game and they had to do it or,


00:48:18.220 --> 00:48:21.020
you know, cause otherwise they were just going to lose anyway, right?


00:48:21.020 --> 00:48:25.260
There's a lot of higher, like sort of inference and higher level things you want to bring into


00:48:25.260 --> 00:48:28.940
that rather than just 30% of the time they make it fourth down, right?


00:48:28.940 --> 00:48:29.180
Yeah.


00:48:29.180 --> 00:48:34.300
And this, I think also one of the reason they just build an entire package around it to,


00:48:34.300 --> 00:48:36.660
-to work with it. -Yeah, it's pretty interesting.


00:48:36.660 --> 00:48:40.500
Now, before all the Python people say, "I don't want to learn R, I don't care about R."


00:48:40.500 --> 00:48:44.460
It is also worth pointing out that you can call R from Python.


00:48:44.460 --> 00:48:49.140
I don't know how much the visualization stuff still works super well or anything like that,


00:48:49.140 --> 00:48:52.140
but you can use, what is it called?


00:48:52.140 --> 00:48:54.420
-rpy2. -Okay.


00:48:54.420 --> 00:48:58.180
And you can end up, you just pass it in R file, and then you start


00:48:58.180 --> 00:49:00.180
calling functions or whatever.


00:49:00.180 --> 00:49:02.180
Get a function out of it and call that function.


00:49:02.180 --> 00:49:07.340
So it's worth, you know, if you really, really want to use some of these packages,


00:49:07.340 --> 00:49:11.340
maybe it's worth doing a quick little integration and then turn it into a data frame,


00:49:11.340 --> 00:49:13.180
pandas data frame and running with it or something.


00:49:13.180 --> 00:49:16.780
It looks interesting. It's definitely worth a try.


00:49:16.780 --> 00:49:20.780
It's nothing I've ever used, but I can see, you know, if you really care about NFL data


00:49:20.780 --> 00:49:25.300
and you really care about Python, it might be worth giving those combos a look there.


00:49:25.300 --> 00:49:30.300
I think there is one package to work with their data from Python.


00:49:30.300 --> 00:49:33.480
So if you look at the list there, there should be at least one.


00:49:33.480 --> 00:49:38.900
I think it's not on their website on their GitHub page, but I think there's


00:49:38.900 --> 00:49:41.440
another one that integrates well with it.


00:49:41.440 --> 00:49:41.940
Sure.


00:49:41.940 --> 00:49:42.280
Right.


00:49:42.280 --> 00:49:45.900
Not under the organization, but maybe somebody else made that does.


00:49:45.900 --> 00:49:46.180
Yeah.


00:49:46.180 --> 00:49:46.920
That that's cool.


00:49:46.920 --> 00:49:47.540
Excellent.


00:49:47.540 --> 00:49:49.680
Maybe they use this, this integration.


00:49:49.680 --> 00:49:50.420
I don't know.


00:49:50.420 --> 00:49:51.000
All right.


00:49:51.000 --> 00:49:55.300
And then the last thing I want to talk about here is interesting on two levels.


00:49:55.540 --> 00:50:02.200
So you've got a playground.pysport.org, which is a hosted notebook to play with


00:50:02.200 --> 00:50:05.980
some examples, like in particular, Kloppy and MPL soccer, right?


00:50:05.980 --> 00:50:10.880
I think one of the issues or challenges for a lot of people also working within


00:50:10.880 --> 00:50:15.180
the bigger clips is that they don't always have a background in programming.


00:50:15.180 --> 00:50:20.660
So often they start as a video analyst or working as a performance analyst, and


00:50:20.660 --> 00:50:21.940
then they think, well, there's data.


00:50:21.940 --> 00:50:22.880
I want to work with it.


00:50:23.140 --> 00:50:27.340
And if you need to set up your Python environment for the first


00:50:27.340 --> 00:50:29.060
time, it can be a bit overwhelming.


00:50:29.060 --> 00:50:34.760
So that's why I for, well, there is Jupyter light, which is a very


00:50:34.760 --> 00:50:37.420
cool project based on a pyrite.


00:50:37.420 --> 00:50:39.820
Let's see if, yeah, if you can use it.


00:50:39.820 --> 00:50:44.180
And it is just a start with the Kloppy and the MPL soccer package.


00:50:44.180 --> 00:50:50.180
I just fetched the notebook from there, from my gallery, integrated into this


00:50:50.180 --> 00:50:55.940
one into the playground and you can just start playing around with it.


00:50:55.940 --> 00:50:56.180
Yeah.


00:50:56.180 --> 00:51:00.900
And so here's a proper Jupyter notebook using all of their libraries and stuff.


00:51:00.900 --> 00:51:05.380
But what's awesome about this, as you said, based on Piledead, I'm not sure


00:51:05.380 --> 00:51:09.820
necessarily actually stuck in people's minds, like this is running in web


00:51:09.820 --> 00:51:11.620
assembly on our front end, right?


00:51:11.620 --> 00:51:13.180
Which is pretty epic.


00:51:13.180 --> 00:51:16.980
It makes it really convenient for people to just start playing around with it


00:51:17.100 --> 00:51:21.580
without installing Python and working with virtual environments.


00:51:21.580 --> 00:51:21.940
Yeah.


00:51:21.940 --> 00:51:23.020
You know how it works.


00:51:23.020 --> 00:51:23.760
Yeah.


00:51:23.760 --> 00:51:26.700
It makes it super easy for you to host it because all you're doing


00:51:26.700 --> 00:51:28.080
is serving up static files.


00:51:28.080 --> 00:51:32.120
You're not hosting, you're not running a Kubernetes cluster or anything like that.


00:51:32.120 --> 00:51:32.420
Right.


00:51:32.420 --> 00:51:34.460
Trying to prevent abuse of it and so on.


00:51:34.460 --> 00:51:34.700
Yeah.


00:51:34.700 --> 00:51:35.020
Yeah.


00:51:35.020 --> 00:51:41.140
So, yeah, multiple sites make it good to, for me and for the people using it.


00:51:41.140 --> 00:51:41.700
For sure.


00:51:41.700 --> 00:51:44.740
And it even does that, that wild, what's it called?


00:51:44.740 --> 00:51:48.340
pizza, pizza plot, that kind of style of plot that we were looking at.


00:51:48.340 --> 00:51:50.160
And it, it runs fast and great.


00:51:50.160 --> 00:51:50.380
Yeah.


00:51:50.380 --> 00:51:51.900
This is really, really nice.


00:51:51.900 --> 00:51:52.140
Yeah.


00:51:52.140 --> 00:51:54.660
Are you, are you happy with pyro dot or, Jupyter light?


00:51:54.660 --> 00:51:59.020
Yeah, there was, yeah, well, yeah, there was some, some issues with it,


00:51:59.020 --> 00:52:03.620
especially around working with, with fetching data because some of these,


00:52:03.620 --> 00:52:07.900
um, try to fetch the open data from, from Steps, BOM, or also


00:52:07.900 --> 00:52:09.140
some phones and stuff like that.


00:52:09.140 --> 00:52:09.540
Yeah.


00:52:09.540 --> 00:52:11.820
So we had to work around it.


00:52:12.100 --> 00:52:17.660
It is also what you see on top of here is the, the patching of the request


00:52:17.660 --> 00:52:19.960
the library to make it work in a JupyterLite.


00:52:19.960 --> 00:52:26.260
I think it's better to, to have a working version then, then not patching it.


00:52:26.260 --> 00:52:27.260
I think it's great.


00:52:27.260 --> 00:52:31.020
And then everything that uses requests can just do its thing.


00:52:31.020 --> 00:52:31.340
Yeah.


00:52:31.340 --> 00:52:31.980
This is really cool.


00:52:31.980 --> 00:52:34.700
I, when I saw that you had this, I thought, Oh, this is, this is clever


00:52:34.700 --> 00:52:37.020
that it's based on JupyterLite and it's really nice.


00:52:37.020 --> 00:52:37.340
Yeah.


00:52:37.340 --> 00:52:37.580
Yeah.


00:52:37.580 --> 00:52:39.340
So people, people can check that out.


00:52:39.700 --> 00:52:41.860
Maybe people out there listening and maintain some of these


00:52:41.860 --> 00:52:43.320
packages and have notebooks.


00:52:43.320 --> 00:52:46.480
Like if they get them working here, could they submit them to you


00:52:46.480 --> 00:52:48.920
and have them added in this list?


00:52:48.920 --> 00:52:53.440
The entire playground is part of the, the Pi sports organization on GitHub.


00:52:53.440 --> 00:52:57.880
You can just watch, see the report story and make a pull request.


00:52:57.880 --> 00:53:03.240
And I will just review it and merge it and then it will be available.


00:53:03.240 --> 00:53:03.800
Oh, yeah.


00:53:03.800 --> 00:53:04.080
Yeah.


00:53:04.080 --> 00:53:04.720
That's awesome.


00:53:04.720 --> 00:53:06.880
So really happy for more packages here.


00:53:06.880 --> 00:53:07.760
More examples.


00:53:08.960 --> 00:53:10.600
- Yeah, more examples would be very welcome.


00:53:10.600 --> 00:53:11.440
Excellent.


00:53:11.440 --> 00:53:12.260
All right.


00:53:12.260 --> 00:53:15.640
Well, I think we're getting pretty much short on time


00:53:15.640 --> 00:53:17.560
for talking about sports analytics,


00:53:17.560 --> 00:53:19.320
but really, really good work there.


00:53:19.320 --> 00:53:20.360
Now, before you get out of here,


00:53:20.360 --> 00:53:22.400
I have the final two questions for you.


00:53:22.400 --> 00:53:23.280
I always ask.


00:53:23.280 --> 00:53:25.880
Notable PyPI package, something you've come across,


00:53:25.880 --> 00:53:27.520
like, oh, this library is awesome.


00:53:27.520 --> 00:53:28.560
People should check it out.


00:53:28.560 --> 00:53:30.880
I mean, it's kind of the whole topic of this show.


00:53:30.880 --> 00:53:33.240
So we talked about, you know, maybe a hundred,


00:53:33.240 --> 00:53:34.160
we didn't mention them all,


00:53:34.160 --> 00:53:36.640
but went through a list of a hundred different Python


00:53:36.640 --> 00:53:38.600
packages, but something you want to give a shout out to


00:53:38.600 --> 00:53:39.600
that things go out there.


00:53:39.600 --> 00:53:42.320
- I'm not really sure if the entire Python world


00:53:42.320 --> 00:53:45.880
already knows it, but on the last PySport meetup,


00:53:45.880 --> 00:53:48.760
I made an example using a DuckDB,


00:53:48.760 --> 00:53:51.880
and that was something that people didn't know about it,


00:53:51.880 --> 00:53:55.720
especially with integration with Pandas DataFrames,


00:53:55.720 --> 00:53:57.680
that you just build a DataFrame


00:53:57.680 --> 00:54:00.160
and run queries directly on top of it.


00:54:00.160 --> 00:54:01.200
Yeah, I've-- - Oh, interesting.


00:54:01.200 --> 00:54:03.080
I heard of DuckDB, but I didn't realize


00:54:03.080 --> 00:54:05.480
the Pandas kind of direct integration


00:54:05.480 --> 00:54:08.400
also has direct Parquet query, interesting.


00:54:08.400 --> 00:54:08.760
Okay.


00:54:08.760 --> 00:54:14.200
That makes it quite easy to also play around with, with SQL queries.


00:54:14.200 --> 00:54:18.720
And I was very happy that I had a presentation on last by data.


00:54:18.720 --> 00:54:20.360
I dove a conference.


00:54:20.360 --> 00:54:20.880
Yeah.


00:54:20.880 --> 00:54:24.840
I think it's a package that, well, not everyone, but it's a really a


00:54:24.840 --> 00:54:28.680
word checking out because it can make your life easier.


00:54:28.680 --> 00:54:32.560
I think it's just a Swiss army knife for data engineering.


00:54:32.560 --> 00:54:34.880
And yeah, I think it's a nice one.


00:54:34.880 --> 00:54:35.200
Yeah.


00:54:35.200 --> 00:54:36.280
Great recommendation.


00:54:36.560 --> 00:54:39.960
And if you're going to write Python code, what editor are you using these days?


00:54:39.960 --> 00:54:42.040
I'm using PyCharm.


00:54:42.040 --> 00:54:44.360
So not, yeah, not sure if it's cool.


00:54:44.360 --> 00:54:45.080
I love PyCharm.


00:54:45.080 --> 00:54:45.680
PyCharm is awesome.


00:54:45.680 --> 00:54:45.880
Okay.


00:54:45.880 --> 00:54:46.440
Excellent one.


00:54:46.440 --> 00:54:46.760
Yeah.


00:54:46.760 --> 00:54:51.400
So I guess final call to action, people are interested in open source sports


00:54:51.400 --> 00:54:54.960
analytics, they're open and maybe interested in PySport, want to contribute


00:54:54.960 --> 00:54:57.880
back or, you know, be part of it in some way, what do you tell them?


00:54:57.880 --> 00:55:02.920
Yeah, you can reach out on, on Twitter or LinkedIn to, to see,


00:55:02.920 --> 00:55:05.360
you know, where you, where you can contribute.


00:55:05.600 --> 00:55:10.600
And I think it's also, if you're not working in the sport domain and would like to contribute,


00:55:10.600 --> 00:55:15.280
please reach out because I think the knowledge from outside of sports is really useful within


00:55:15.280 --> 00:55:16.280
sports.


00:55:16.280 --> 00:55:22.480
So there are a lot of options to contribute and make an even more community, a more better


00:55:22.480 --> 00:55:23.480
community.


00:55:23.480 --> 00:55:24.480
Yeah, absolutely.


00:55:24.480 --> 00:55:25.480
All right.


00:55:25.480 --> 00:55:28.080
Well, thank you so much for being here and sharing all these projects you've collected.


00:55:28.080 --> 00:55:30.080
Thanks a lot for being on the show.


00:55:30.080 --> 00:55:31.080
It's really, really nice.


00:55:31.080 --> 00:55:32.080
Yeah.


00:55:32.080 --> 00:55:33.080
Thank you.


00:55:33.080 --> 00:55:34.080
You're welcome.


00:55:34.080 --> 00:55:35.080
Bye.


00:55:35.080 --> 00:55:37.800
another episode of Talk Python to Me.


00:55:37.800 --> 00:55:39.240
Thank you to our sponsors.


00:55:39.240 --> 00:55:40.600
Be sure to check out what they're offering.


00:55:40.600 --> 00:55:42.720
It really helps support the show.


00:55:42.720 --> 00:55:44.500
The folks over at JetBrains encourage you


00:55:44.500 --> 00:55:47.280
to get work done with PyCharm.


00:55:47.280 --> 00:55:49.880
PyCharm Professional understands complex projects


00:55:49.880 --> 00:55:52.920
across multiple languages and technologies,


00:55:52.920 --> 00:55:54.560
so you can stay productive while you're writing


00:55:54.560 --> 00:55:58.520
Python code and other code like HTML or SQL.


00:55:58.520 --> 00:56:03.520
Download your free trial at talkpython.fm/donewithpycharm.


00:56:04.120 --> 00:56:07.400
InfluxData encourages you to try InfluxDB.


00:56:07.400 --> 00:56:09.640
InfluxDB is a database purpose-built


00:56:09.640 --> 00:56:11.360
for handling time series data


00:56:11.360 --> 00:56:14.360
at a massive scale for real-time analytics.


00:56:14.360 --> 00:56:18.800
Try it for free at talkpython.fm/influxdb.


00:56:18.800 --> 00:56:20.120
Want to level up your Python?


00:56:20.120 --> 00:56:21.920
We have one of the largest catalogs


00:56:21.920 --> 00:56:24.280
of Python video courses over at Talk Python.


00:56:24.280 --> 00:56:26.320
Our content ranges from true beginners


00:56:26.320 --> 00:56:29.300
to deeply advanced topics like memory and async.


00:56:29.300 --> 00:56:31.960
And best of all, there's not a subscription in sight.


00:56:31.960 --> 00:56:35.000
Check it out for yourself at training.talkpython.fm.


00:56:35.000 --> 00:56:36.600
Be sure to subscribe to the show,


00:56:36.600 --> 00:56:39.620
open your favorite podcast app, and search for Python.


00:56:39.620 --> 00:56:40.980
We should be right at the top.


00:56:40.980 --> 00:56:43.880
You can also find the iTunes feed at /itunes,


00:56:43.880 --> 00:56:46.040
the Google Play feed at /play,


00:56:46.040 --> 00:56:50.080
and the Direct RSS feed at /rss on talkpython.fm.


00:56:50.080 --> 00:56:53.600
We're live streaming most of our recordings these days.


00:56:53.600 --> 00:56:54.740
If you want to be part of the show


00:56:54.740 --> 00:56:57.000
and have your comments featured on the air,


00:56:57.000 --> 00:56:58.880
be sure to subscribe to our YouTube channel


00:56:58.880 --> 00:57:01.880
at talkpython.fm/youtube.


00:57:01.880 --> 00:57:03.300
This is your host, Michael Kennedy.


00:57:03.300 --> 00:57:04.460
Thanks so much for listening.


00:57:04.460 --> 00:57:05.700
I really appreciate it.


00:57:05.700 --> 00:57:07.920
Now get out there and write some Python code.


00:57:07.920 --> 00:57:10.500
(upbeat music)


00:57:10.500 --> 00:57:25.500
[Music]


00:57:25.500 --> 00:57:28.080
(upbeat music)


00:57:28.080 --> 00:57:38.080
[BLANK_AUDIO]

