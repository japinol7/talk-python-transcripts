WEBVTT

00:00:00.000 --> 00:00:04.040
Are you early in your software dev or data science career? Maybe it hasn't even


00:00:04.040 --> 00:00:07.760
really started yet and you're still in school. On this episode we have Sydney


00:00:07.760 --> 00:00:11.520
Runkel who has had a ton of success in the Python space and she hasn't even


00:00:11.520 --> 00:00:15.680
graduated college yet. We sit down to talk to her about what she's done and


00:00:15.680 --> 00:00:20.180
might do differently again to achieve that success. It's the Young Coders


00:00:20.180 --> 00:00:25.440
Blueprint to Success on episode 443 of Talk Python to Me. This episode was


00:00:25.440 --> 00:00:29.600
recorded November 8th, 2023.


00:00:29.600 --> 00:00:41.320
[Music]


00:00:41.320 --> 00:00:45.960
Welcome to Talk Python to Me, a weekly podcast on Python. This is your host


00:00:45.960 --> 00:00:50.040
Michael Kennedy. Follow me on Mastodon where I'm @mkennedy and follow the


00:00:50.040 --> 00:00:55.560
podcast using @talkpython both on fosstodon.org. Keep up with the show and


00:00:55.560 --> 00:01:00.500
listen to over seven years of past episodes at talkpython.fm. We've started


00:01:00.500 --> 00:01:04.680
streaming most of our episodes live on YouTube. Subscribe to our YouTube channel


00:01:04.680 --> 00:01:09.760
over at talkpython.fm/youtube to get notified about upcoming shows and be


00:01:09.760 --> 00:01:15.200
part of that episode. This episode is sponsored by us over at


00:01:15.200 --> 00:01:20.960
Talk Python Training. Did you know that we have over 250 hours of Python courses?


00:01:20.960 --> 00:01:25.960
Yeah, that's right. Check them out at talkpython.fm/courses.


00:01:25.960 --> 00:01:29.120
Sydney, welcome to Talk Python to Me. It's awesome to have you here.


00:01:29.120 --> 00:01:30.320
Thanks, I'm excited to be here.


00:01:30.320 --> 00:01:33.960
Yeah, it's really cool to have you here. Lovely to have somebody who has a


00:01:33.960 --> 00:01:39.040
brand new experience in the whole software industry and you've certainly


00:01:39.040 --> 00:01:43.160
found a lot of early success. So that's great and you're here to share it with


00:01:43.160 --> 00:01:44.720
everyone. So happy to have you here.


00:01:44.720 --> 00:01:46.080
Yeah, I'm super excited to talk about it.


00:01:46.080 --> 00:01:50.040
Yeah, so you know we're gonna talk about your experience. You're working on some


00:01:50.040 --> 00:01:54.200
pretty awesome projects and as we were just talking before we hit record, you're


00:01:54.200 --> 00:01:59.040
still in college, still finishing up your last year of college at Madison, which is


00:01:59.040 --> 00:02:03.880
excellent. So I think you'll be an inspiration and you know provide a lot


00:02:03.880 --> 00:02:07.200
of good tips for people who are just getting into the software industry.


00:02:07.200 --> 00:02:10.320
Alright, well before we get to that though, tell people a quick bit about yourself.


00:02:10.320 --> 00:02:11.320
Who are you?


00:02:11.320 --> 00:02:15.440
Yeah, sure. So my name is Sydney, obviously. I'm currently a senior at the


00:02:15.440 --> 00:02:19.280
University of Wisconsin-Madison. I'm studying computer science. I actually


00:02:19.280 --> 00:02:22.560
started off in both engineering and computer science but decided that I


00:02:22.560 --> 00:02:25.240
loved computer science enough that I just wanted to focus on that.


00:02:25.240 --> 00:02:28.120
Yeah, why'd you switch? What engineering discipline were you in?


00:02:28.120 --> 00:02:31.640
I was in electrical engineering so there was a decent amount of crossover between


00:02:31.640 --> 00:02:35.680
the two but I was just finding that I really liked my more advanced CS classes


00:02:35.680 --> 00:02:38.040
more than the advanced engineering classes.


00:02:38.040 --> 00:02:42.640
Way long ago, I think, the way you kind of got a computer science degree is you did an


00:02:42.640 --> 00:02:46.040
engineering, an electrical engineering degree. Like, oh that has to do with


00:02:46.040 --> 00:02:49.600
electrons and circuitry and that's computers, isn't it? So, the same thing, right?


00:02:49.600 --> 00:02:53.680
Now it's way more focused, right? Like the software side of education, isn't it?


00:02:53.680 --> 00:02:57.240
Yeah, definitely. And the nice thing is we still have some cross-listed classes so I


00:02:57.240 --> 00:02:59.080
still get to kind of dip my toes in both sides.


00:02:59.080 --> 00:02:59.920
Yeah, excellent.


00:02:59.920 --> 00:03:04.560
Yeah, so I grew up in North Carolina originally in Chapel Hill. Really loved it


00:03:04.560 --> 00:03:09.440
but for some reason decided to move up to where it's quite cold. And yeah, I


00:03:09.440 --> 00:03:13.400
really enjoyed my time at Madison thus far. I think it's a great place to learn about CS.


00:03:13.400 --> 00:03:17.840
Well, I have some really good friends who were there for grad school at Madison and


00:03:17.840 --> 00:03:23.960
just loved it. But I'm sure as we come into November that perhaps the weather's


00:03:23.960 --> 00:03:27.600
a little different than North Carolina which is, you know, sometimes it gets


00:03:27.600 --> 00:03:28.800
chilly. Get a jacket.


00:03:28.800 --> 00:03:31.600
Yeah, I'm getting some new, like, nice winter experiences, you know?


00:03:31.600 --> 00:03:37.480
Yes, of course. Of course. Well, let's set the stage a little bit by talking about


00:03:37.480 --> 00:03:43.200
what you're doing so people get a sense, right? Like, obviously, Madison, for those


00:03:43.200 --> 00:03:47.400
who don't know, is a super highly respected school so it's a pretty top-tier


00:03:47.400 --> 00:03:51.280
computer science department there. That alone is pretty awesome. The fact you're


00:03:51.280 --> 00:03:54.520
about to graduate, it's pretty awesome. But you're also working on some cool


00:03:54.520 --> 00:03:59.040
open-source/funded, I guess? I don't know what the term for that is, like,


00:03:59.040 --> 00:04:05.040
backed open-source. But working with Pydantic. So yeah, talk a bit about what


00:04:05.040 --> 00:04:06.520
you're doing these days.


00:04:06.520 --> 00:04:11.240
Yeah, so I'm currently working part-time at Pydantic. I know you've had Samuel and


00:04:11.240 --> 00:04:15.280
some others on the team on the show before. But I reached out to Samuel kind


00:04:15.280 --> 00:04:19.280
of later in the summer, actually, after I heard him talk on your podcast at PyCon


00:04:19.280 --> 00:04:22.640
and asked if they were interested in having an intern, you know, help with some


00:04:22.640 --> 00:04:25.680
of the open-source work. Because obviously, they're delving into new


00:04:25.680 --> 00:04:29.600
commercial things now and Samuel got back to me. And so now I'm primarily


00:04:29.600 --> 00:04:34.800
working on open-source there. I help with incoming issues and new feature requests,


00:04:34.800 --> 00:04:38.840
etc. We're currently working on the version 2.5 release which has lots of


00:04:38.840 --> 00:04:42.720
new features and fixes, which is great. And it has certainly been the job where


00:04:42.720 --> 00:04:47.080
I've learned the most the fastest. I think being surrounded by other developers who


00:04:47.080 --> 00:04:51.720
have tons of open-source experience makes such a collaborative and fast-moving


00:04:51.720 --> 00:04:55.880
team. And so I've really enjoyed being able to learn so much and, you know, dive


00:04:55.880 --> 00:04:59.200
into this really well-thought-out and well-developed code base and kind of go


00:04:59.200 --> 00:04:59.560
from there.


00:04:59.560 --> 00:05:04.720
That's awesome. Yeah, Samuel is a great guy. The Pydantic project, it's really


00:05:04.720 --> 00:05:06.760
taken the world by storm, wouldn't you say?


00:05:06.760 --> 00:05:11.080
Yeah, absolutely. Number of downloads per month, I think. Recently, we hit over a


00:05:11.080 --> 00:05:15.200
million downloads per month. It's quite impressive and, you know, crazy given that


00:05:15.200 --> 00:05:16.600
it only started a couple of years ago.


00:05:16.600 --> 00:05:21.360
I think that I saw, I can't remember, was it an ex-Twitter post or was it a


00:05:21.360 --> 00:05:27.200
Mastodon post that Samuel had put up there that Pydantic had been, at this


00:05:27.200 --> 00:05:31.200
point, downloaded over a billion times, which is kind of unimaginable.


00:05:31.200 --> 00:05:35.400
Yeah, it's quite crazy. I haven't taken a math class super recently, but I know


00:05:35.400 --> 00:05:37.680
that it's quite a large number.


00:05:37.680 --> 00:05:41.680
That's right. It's definitely large. A lot of zeros. So I pulled up the GitHub


00:05:41.680 --> 00:05:47.800
page here for Pydantic and it says the project is used by 270,000 other GitHub


00:05:47.800 --> 00:05:48.600
projects.


00:05:48.600 --> 00:05:54.040
Yeah, it's definitely quite ingrained in a lot of projects. Obviously, also used


00:05:54.040 --> 00:05:57.640
to support a lot of other popular open source projects, like the one that comes


00:05:57.640 --> 00:06:01.760
to mind immediately is FastAPI, which obviously many of the podcast listeners


00:06:01.760 --> 00:06:05.960
also know about, but it's exciting that it's able to serve as such a consistent


00:06:05.960 --> 00:06:08.480
like foundational block for so many other libraries.


00:06:08.480 --> 00:06:13.160
Yeah, it really is. Like the podcast website's based on Beanie, which is, you


00:06:13.160 --> 00:06:18.200
know, MongoDB plus Pydantic. And I was literally just working on some FastAPI


00:06:18.200 --> 00:06:21.680
code. I'm like, "Oh, I got to put this away. Got to do the podcast with Sydney."


00:06:21.680 --> 00:06:25.440
So yeah, it's definitely, definitely something that's pretty wild. I don't


00:06:25.440 --> 00:06:29.640
know about how you feel about this, but does it make you a little bit nervous to


00:06:29.640 --> 00:06:32.280
work on a project that affects so many people?


00:06:32.280 --> 00:06:35.600
Yeah, that's a good question. I think starting off, I thought I would feel a


00:06:35.600 --> 00:06:39.160
bit more nervous, but once I kind of got into the swing of things, I think we


00:06:39.160 --> 00:06:42.560
have a really great code review system there. So, you know, I feel supported,


00:06:42.560 --> 00:06:45.600
even though if I'm, you know, making changes that seem kind of new or


00:06:45.600 --> 00:06:49.160
different to me, I feel like we have a great team and not only just the team of


00:06:49.160 --> 00:06:53.160
Pydantic, but obviously other open source contributors that can give feedback,


00:06:53.160 --> 00:06:56.440
et cetera. And it's nice to be able to rely on them for feedback before


00:06:56.440 --> 00:06:57.560
obviously we release too.


00:06:57.560 --> 00:07:01.840
Yeah, absolutely. Yeah. Right below the, the number, the used by count is the


00:07:01.840 --> 00:07:06.880
contributors and there's 447, at least directly to Pydantic. I don't know if


00:07:06.880 --> 00:07:11.720
the Pydantic one, maybe there's a Pydantic core that's a separate repo


00:07:11.720 --> 00:07:15.440
these days. They used to be one thing, but then the whole V2 was about splitting


00:07:15.440 --> 00:07:15.920
that up, right?


00:07:15.920 --> 00:07:19.640
Yep. Yeah, exactly. So we have a core written in Rust that handles a lot of


00:07:19.640 --> 00:07:21.640
the validation and serialization logic now.


00:07:21.640 --> 00:07:26.400
Yeah. Yeah. Very cool. So you're about to graduate. You talked about jumping


00:07:26.400 --> 00:07:31.520
into this project and learning so much. I had a really similar experience when I


00:07:31.520 --> 00:07:35.600
was in grad school, I was studying math, but then I got to work on some actual


00:07:35.600 --> 00:07:39.440
software projects and they were desktop apps. Can you believe it back then?


00:07:39.440 --> 00:07:43.400
But really, really fun projects though. And I had the same experience, like,


00:07:43.400 --> 00:07:47.120
wow, I've learned so much here. And, you know, I did less computer science in


00:07:47.120 --> 00:07:51.520
college because I studied math and computer science minor, but still my


00:07:51.560 --> 00:07:56.920
interactions with my computer science side of those courses, I felt there were


00:07:56.920 --> 00:08:01.240
a little bit, I mean, I guess you should be this way. They felt a little academic


00:08:01.240 --> 00:08:06.640
being at the university and a little bit not entirely in touch with like, what's


00:08:06.640 --> 00:08:09.760
the latest way of writing code? What's the latest technologies? What's the


00:08:09.760 --> 00:08:14.760
latest open source or what's the latest tools? You know, been a long time, let's


00:08:14.760 --> 00:08:18.800
say a couple of years since that was, since I did that in the mid nineties.


00:08:18.800 --> 00:08:19.040
Yeah.


00:08:19.680 --> 00:08:23.400
Totally changed. What's your experience? Is it similar or how this new project


00:08:23.400 --> 00:08:24.520
kind of gave you a lot of exposure?


00:08:24.520 --> 00:08:27.560
Yeah, I would say my experience has been quite similar kind of with the


00:08:27.560 --> 00:08:32.400
juxtaposition of standards in my computer science classes and more academic


00:08:32.400 --> 00:08:37.240
applications of computer science versus in my various internships. I think that's


00:08:37.240 --> 00:08:40.280
been one of the most valuable thing about seeking out, you know, diverse


00:08:40.280 --> 00:08:45.000
opportunities outside of classes, really being able to get experience with, you


00:08:45.000 --> 00:08:48.880
know, like version control systems and continuous deployment systems and how do


00:08:48.880 --> 00:08:52.360
I work on a code review? How do I, you know, interpret a code review, things


00:08:52.360 --> 00:08:56.600
like that. And then beyond that, just modern coding standards and current


00:08:56.600 --> 00:09:00.600
libraries, et cetera. So I definitely do think there's a gap, but I do think


00:09:00.600 --> 00:09:03.360
there's still a lot of value in, you know, some of the fundamental concepts


00:09:03.360 --> 00:09:06.960
that are, you know, language agnostic or just, you know, easier to learn in a


00:09:06.960 --> 00:09:10.840
classroom and aren't quite as dependent on like code quality and production


00:09:10.840 --> 00:09:14.960
quality, et cetera. But I think it's also really important to get the experience


00:09:14.960 --> 00:09:18.120
outside of class that gives a lot more feedback as to like, is this good code?


00:09:18.120 --> 00:09:21.200
Is this bad code? Et cetera. Cause that's certainly something that's really


00:09:21.200 --> 00:09:22.200
emphasized in class.


00:09:22.200 --> 00:09:27.120
Even if they try, I think one thing that's super hard to simulate is working


00:09:27.120 --> 00:09:31.880
on a team where stuff is used by other people and there are consequences. You


00:09:31.880 --> 00:09:35.200
know, it's one thing to say, well, we're going to pretend to do a PR and how'd


00:09:35.200 --> 00:09:38.600
that go for you? It's another to say, we're going to take down 270,000


00:09:38.600 --> 00:09:42.840
projects if we get this wrong. So the continuous integration should probably


00:09:42.840 --> 00:09:43.440
be working, right?


00:09:43.440 --> 00:09:44.400
Yep. Definitely.


00:09:44.440 --> 00:09:48.760
What languages was, has your courses mostly been in?


00:09:48.760 --> 00:09:53.120
So our kind of foundational computer science courses, you know, learning about


00:09:53.120 --> 00:09:57.400
data structures, et cetera, are in Java. There are a couple of kind of like on


00:09:57.400 --> 00:10:01.120
ramp courses that you can take in Python. If you've never really learned code


00:10:01.120 --> 00:10:03.800
before, obviously that's a little bit easier to get started with. And then I've


00:10:03.800 --> 00:10:08.200
taken some courses in C as well that are architecture related, et cetera. And now


00:10:08.200 --> 00:10:12.280
that I'm kind of past the intro, past the computer architecture and into the


00:10:12.480 --> 00:10:16.360
elective focus classes, we've kind of pivoted back to Python. I think part of


00:10:16.360 --> 00:10:20.040
that is I'm taking a lot of more data science, machine learning focus classes.


00:10:20.040 --> 00:10:23.520
And so obviously Python's a pretty convenient language to write up those


00:10:23.520 --> 00:10:23.680
things.


00:10:23.680 --> 00:10:29.040
That's pretty much the de facto on there for sure. Yeah. When I took the couple of


00:10:29.040 --> 00:10:33.080
computer science classes that I did or programming classes, it was, it was a


00:10:33.080 --> 00:10:36.680
little bit out of sync with what I was wanting to do. So when I was, I also


00:10:36.680 --> 00:10:39.440
started out in engineering, I'm like, eh, maybe I'll switch to something else.


00:10:39.600 --> 00:10:42.440
But yeah, before I did, they said, well, you're going to need to take a


00:10:42.440 --> 00:10:44.840
programming class. I'm like, oh, that sounds awesome. They're like, yeah, we


00:10:44.840 --> 00:10:48.480
got to have Fortran 77 class for him. Like, are you serious? Like this is the


00:10:48.480 --> 00:10:51.960
most important class you're ever going to take. Don't skip on. I'm like,


00:10:51.960 --> 00:10:57.720
maybe not so sure about that. Then I said, then I wanted to take another course.


00:10:57.720 --> 00:11:00.720
I'm like, maybe I'll take a C++ course. They're like, great. But first you got to


00:11:00.720 --> 00:11:06.120
take a Lisp course. I'm like, really? Can I just like take something that modern


00:11:06.120 --> 00:11:11.360
software is built with, please? Nope, nope, nope. But yeah, very fun. Quite the


00:11:11.360 --> 00:11:14.880
journey though. It sounds like, and knowing Java is a good skill. It's a kind


00:11:14.880 --> 00:11:18.880
of a different paradigm for how code executes. It's the same for C, right?


00:11:18.880 --> 00:11:21.800
Yep. Yeah, I definitely think it was helpful. I think at the time in class, I


00:11:21.800 --> 00:11:24.920
was like, man, I really love Python. You know, why can't we be writing Python?


00:11:24.920 --> 00:11:28.360
But definitely great to get, you know, exposure to different languages. And I


00:11:28.360 --> 00:11:32.160
think it helps, you know, to better understand general like patterns in


00:11:32.160 --> 00:11:35.520
programming, et cetera. If you have to implement that and see the different


00:11:35.520 --> 00:11:36.880
implementations in different languages.


00:11:36.880 --> 00:11:41.360
Yeah, for sure. Python with its types is getting a little, a little bit more like


00:11:41.360 --> 00:11:46.080
Java, but hopefully not too much like Java. So yeah, excellent. All right. So


00:11:46.080 --> 00:11:49.200
you mentioned that you're doing a lot of Java. Quick audience question out there.


00:11:49.200 --> 00:11:54.080
Arjun says, I'm an IT professional. I've not had any experience, had any


00:11:54.080 --> 00:11:57.680
experience in any coding. What's the best way to start with Python? I initially a


00:11:57.680 --> 00:12:01.600
few years ago started learning Java, but kind of lost interest. What are your


00:12:01.600 --> 00:12:01.920
thoughts?


00:12:01.960 --> 00:12:07.320
That's a great question. Honestly, I started by reading a how to write Python


00:12:07.320 --> 00:12:11.720
book and kind of pivoted from that to online courses. I think my number one


00:12:11.720 --> 00:12:15.640
recommendation would be online courses. I know you guys that talk Python have some


00:12:15.640 --> 00:12:20.000
awesome online courses that people can take. And before I think in like middle


00:12:20.000 --> 00:12:23.680
school and high school, I took some courses through edX and Udemy. And I


00:12:23.680 --> 00:12:27.200
think that's a great way to get started because you can kind of have the balance


00:12:27.200 --> 00:12:30.520
of I'm writing code, I'm seeing other people write code, you know, often


00:12:30.520 --> 00:12:34.040
there's like auto graded questions involved. And the nice thing about an


00:12:34.040 --> 00:12:37.840
online course is that it's asynchronous, right? So you can do things when it fits


00:12:37.840 --> 00:12:40.880
into your own time. And another nice thing is that there's a pretty large


00:12:40.880 --> 00:12:44.080
community of people online who love to write Python and are getting started


00:12:44.080 --> 00:12:46.840
writing Python. And so I think there's also a lot of support there, which is


00:12:46.840 --> 00:12:47.120
great.


00:12:47.120 --> 00:12:51.440
Yeah, there's definitely more resources now than there ever have been, right?


00:12:51.440 --> 00:12:52.120
Yeah, yeah.


00:12:52.120 --> 00:12:57.120
I agree with online courses. I really, really like the focus. You know, when I


00:12:57.120 --> 00:13:00.360
started doing online courses that we have, one of the things I wanted to do is


00:13:00.360 --> 00:13:05.320
try to go like, how do people who might otherwise take a semester long course at


00:13:05.320 --> 00:13:08.240
say a community college, because if you're in a full on university, you


00:13:08.240 --> 00:13:10.720
probably have a program you're following. But if you're just like, I'm just going


00:13:10.720 --> 00:13:15.320
to take a course, how do you take that and change that from 16 weeks to five


00:13:15.320 --> 00:13:18.960
hours, you know, and still get something, you know, meaningful out of it. Since


00:13:18.960 --> 00:13:23.800
this is kind of focused at young people and not, we're talking like, you know,


00:13:23.800 --> 00:13:29.080
20s type of young person, but just, you know, if people come along, like, but


00:13:29.080 --> 00:13:34.760
what about my middle school or something? Are you familiar with this project, code


00:13:34.760 --> 00:13:35.800
combat? Have you seen this?


00:13:35.800 --> 00:13:37.920
Yeah, yeah. I used it in middle school.


00:13:37.920 --> 00:13:42.960
Did you? Amazing. What a cool way to write code. Tell people what it is. What


00:13:42.960 --> 00:13:44.280
are your thoughts since you actually used it?


00:13:44.280 --> 00:13:48.000
There are a lot of sites like this that basically allow you to write code with,


00:13:48.000 --> 00:13:51.600
you know, some pretty significant guidance and support to, you know, move


00:13:51.600 --> 00:13:55.880
along characters and games and help in this case, like find other characters


00:13:55.880 --> 00:13:58.960
with your code. And, you know, I can think of other examples. Like I worked on a


00:13:58.960 --> 00:14:02.800
like robot program where I was helping a robot Carol, like, you know, walk around


00:14:02.800 --> 00:14:07.200
a maze and things like that. And so I think websites like code combat or code


00:14:07.200 --> 00:14:11.720
academy or even code.org have a lot of really great opportunities, especially


00:14:11.720 --> 00:14:14.840
geared towards younger people who might need help writing code for the first


00:14:14.840 --> 00:14:17.840
time. It can't like just jump right into the deep end with one of the more


00:14:17.840 --> 00:14:22.160
complex courses on like Udemy, for example, offers a lot more like collegiate


00:14:22.160 --> 00:14:25.800
level things. But I think these sites are particularly great and entertaining.


00:14:25.800 --> 00:14:28.520
You know, it makes you feel like you're playing a game, but you're also learning


00:14:28.520 --> 00:14:29.520
in the background, which is great.


00:14:29.520 --> 00:14:33.560
Yeah. This is such a neat game. They've got these different worlds or whatever,


00:14:33.560 --> 00:14:38.480
and they each have maybe this one here, Cloud Drip Mountain, has 110 programming


00:14:38.480 --> 00:14:42.480
puzzles. And the reason I really, when people ask sometimes, I recommend this


00:14:42.480 --> 00:14:47.720
one is a lot of these things that are like for really true younger people or


00:14:47.720 --> 00:14:51.240
really just true beginners, they hide so much of the code. They're like, well, if


00:14:51.240 --> 00:14:54.080
we could just teach the concept of loops, you know, and then you just drag a


00:14:54.080 --> 00:14:57.640
circle around this thing and then you click this block in, you know, I think


00:14:57.640 --> 00:15:02.080
that still is a pretty big gap. But this is you write real Python with an editor,


00:15:02.080 --> 00:15:05.960
but the little editor is like the world's most aggressive autocomplete you've ever


00:15:05.960 --> 00:15:10.200
seen. Right. If you type the letter H, it'll like hero dot attack. And like,


00:15:10.200 --> 00:15:13.000
should you, what should you type in here? You know, it's like, whoa, OK. Yeah.


00:15:13.000 --> 00:15:17.720
But yeah, I think this is this is really awesome for young, young people. But,


00:15:17.720 --> 00:15:20.880
you know, I think even maybe older people might just if they want to kind of play


00:15:20.880 --> 00:15:24.000
an online game, right. If you're sitting around, you're like, oh, maybe I'll play


00:15:24.000 --> 00:15:27.280
Candy Crush or something like I'd rather play co-combat than that, you know.


00:15:27.280 --> 00:15:30.800
Yeah. It's definitely great to have the additional engagement there. And, you


00:15:30.800 --> 00:15:34.400
know, if it's just like write this for loop to do whatever, that's not even


00:15:34.400 --> 00:15:37.600
close to as engaging as like, you know, the enemy or things like that.


00:15:37.600 --> 00:15:42.600
Yeah, exactly. Exactly. Cool. So there's a whole spectrum of online resources


00:15:42.600 --> 00:15:45.760
there. All right. How about we jump into some of the tips, some of the things


00:15:45.760 --> 00:15:50.000
that's well before we do one thing I think you kind of hinted at that with your


00:15:50.000 --> 00:15:54.360
answer here, your response there. How much programming experience did you have


00:15:54.360 --> 00:15:59.480
when you got to Madison? Because I think one of the challenges is while maybe


00:15:59.480 --> 00:16:03.600
the principle of computer science is you could show up with zero coding experience


00:16:03.600 --> 00:16:06.800
and they're like, this is a keyboard. Awesome. And we're going to start with


00:16:06.800 --> 00:16:10.440
that. A lot of people don't. And so you might be sitting next to somebody like,


00:16:10.440 --> 00:16:13.160
oh, we're both working on a project. How are you done? Like, well, I've been


00:16:13.160 --> 00:16:17.640
coding for, you know, however long. Right. What was your experience going in?


00:16:17.720 --> 00:16:22.760
Yeah, I would say for a college freshman that I did have quite a bit of experience.


00:16:22.760 --> 00:16:27.200
I had, you know, done all these code combat-esque things in middle school.


00:16:27.200 --> 00:16:31.080
And then I was lucky enough that my high school offered some coding classes, even


00:16:31.080 --> 00:16:35.240
at the AP level. So more advanced courses. So I'd taken those. And then


00:16:35.240 --> 00:16:38.960
especially... Probably more Java, right? That's what AP seems to be a lot of.


00:16:38.960 --> 00:16:42.440
I actually took one in Python, but I think that there was definitely another one in


00:16:42.440 --> 00:16:47.080
Java. And then especially during the pandemic, I did start to get a bit antsy.


00:16:47.080 --> 00:16:50.840
And I was like, man, I really want to be, you know, working and applying this. So I


00:16:50.840 --> 00:16:54.360
started having computer science internships in high school. So I think


00:16:54.360 --> 00:16:57.640
definitely coming in, I was a bit more prepared for some of the classes,


00:16:57.640 --> 00:17:01.160
especially my first Java class. I'd never written Java before, but I at least


00:17:01.160 --> 00:17:04.520
understood, you know, some of the paradigms that were helpful. And I do think


00:17:04.520 --> 00:17:07.480
it's helpful to come in with some experience, because like you said, if you


00:17:07.480 --> 00:17:11.160
come in with none, it's a little bit hard to just jump into a college level course.


00:17:11.160 --> 00:17:15.000
Yeah, for sure. You can do it. Not saying you can't do it. But I guess the thing is,


00:17:15.000 --> 00:17:17.800
you know, if you look around the class, you're like, there's some people that are


00:17:17.800 --> 00:17:21.240
really good at this. Like maybe that probably is true. But it also could be


00:17:21.240 --> 00:17:23.880
that there's some people that have a lot of experience and you're brand new. And


00:17:23.880 --> 00:17:28.600
we all know that the first bit of code that you write is always a bit of a got to get


00:17:28.600 --> 00:17:29.960
your mind into it sort of thing.


00:17:29.960 --> 00:17:33.400
Yeah, definitely. And I think the good news is, too, you know, if you take one quick


00:17:33.400 --> 00:17:36.840
course, like even introduce yourself for, you know, five to 10 hours, like that's


00:17:36.840 --> 00:17:40.760
going to be a really big benefit. So it doesn't take a ton of work to just get over


00:17:40.760 --> 00:17:42.520
that initial, you know, learning curve.


00:17:42.520 --> 00:17:47.160
Yeah, that's a super good point. I remember when I was learning C++, I was so psyched


00:17:47.160 --> 00:17:51.400
that I got it to compile. And then I learned about runtime bugs and how much harder they


00:17:51.400 --> 00:17:55.320
are. I'm like, oh, this is, this is worse. This is way worse. All right. So all right,


00:17:55.320 --> 00:18:01.320
let's jump into the tips. So tip number one, you have work on open source contributions.


00:18:01.320 --> 00:18:02.200
Tell us about this.


00:18:02.200 --> 00:18:06.440
I can't say that during my like first couple of years of programming experience that I


00:18:06.440 --> 00:18:11.160
did this, it was really only more recently as like this past summer. But I think, you


00:18:11.160 --> 00:18:14.760
know, getting involved in the open source community can be really beneficial, especially


00:18:14.760 --> 00:18:19.000
in terms of like seeing other well-written code and, you know, standards in the industry.


00:18:19.000 --> 00:18:22.200
And I think, you know, another thing I want to mention here is that like open source


00:18:22.200 --> 00:18:25.320
contributions seem a little bit intimidating at first, right? It's like, oh, my gosh,


00:18:25.320 --> 00:18:29.720
here's this huge project that has been worked on for years. I don't know where to start.


00:18:29.720 --> 00:18:33.960
But like even minor documentation updates are super helpful. You know, we're just writing


00:18:33.960 --> 00:18:38.280
an example in the docs or writing an extra test, things like that. And so I think even


00:18:38.280 --> 00:18:42.840
just those little like micro contributions can really help you get involved in that community.


00:18:42.840 --> 00:18:46.360
And then also just learning more about the tools you're using day to day anyways.


00:18:46.360 --> 00:18:52.440
Yeah, absolutely. And many projects are very welcoming. People who want to raise their


00:18:52.440 --> 00:18:53.960
hand to get involved, right?


00:18:53.960 --> 00:18:57.800
Absolutely. I mean, you know, filtering on the good first issue tag is always a good


00:18:57.800 --> 00:19:01.880
way to start. We're trying to, you know, mark more and more of those at Pydantic just because


00:19:01.880 --> 00:19:05.720
there are certainly a lot of people that want to help and we more than welcome their assistance.


00:19:05.720 --> 00:19:09.000
It's really great to see, you know, first time contributors popping up every day.


00:19:09.000 --> 00:19:13.320
So for people who maybe are listening and they're thinking about just getting into


00:19:13.320 --> 00:19:18.120
this, right? But I'm a labeled good first issue, right? So if you go to the issues,


00:19:18.120 --> 00:19:22.520
you can actually see which things have been labeled as, look, you don't need to understand


00:19:22.520 --> 00:19:27.480
a whole bunch about the system to get started. So that's a really good way to kind of see what's


00:19:27.480 --> 00:19:31.560
already out there, because I think you might look at a project, I want to help, but how,


00:19:31.560 --> 00:19:35.640
like, what do they need help with? Like, well, here's a whole list of small steps that people


00:19:35.640 --> 00:19:37.640
- somebody could raise their hand and help with, right?


00:19:37.640 --> 00:19:40.200
Exactly. Yeah. It's a great - when you have this huge project, it's like, oh,


00:19:40.200 --> 00:19:44.440
no, where do I even start? And then searching by that tag is a great way to just jump in and


00:19:44.440 --> 00:19:48.840
filter, especially, you know, on large projects like we currently have about 400 issues, right?


00:19:48.840 --> 00:19:50.600
So it's nice to have that filter there.


00:19:50.600 --> 00:19:53.320
Honestly, I'm pretty impressed that there's only 400 issues.


00:19:53.320 --> 00:19:56.120
Yeah. I'm trying to keep it clean. We'll see.


00:19:56.120 --> 00:19:58.120
It's not easy, is it?


00:19:58.120 --> 00:20:02.200
Definitely a lot coming in, a lot coming in after every release, but it's great to,


00:20:02.200 --> 00:20:06.280
you know, see so many people engaging and interested in new features and helping report


00:20:06.280 --> 00:20:07.560
and fix bugs, you know?


00:20:07.560 --> 00:20:13.480
Yeah. Yeah. I'm looking here and one of these, just open once, but it's numbered 8058. So,


00:20:13.480 --> 00:20:19.080
you know, that's a whole bunch of closed or deleted, ignored issues, but somebody had to


00:20:19.080 --> 00:20:20.440
deal with them along the way. Yeah.


00:20:20.440 --> 00:20:24.600
Yeah, certainly. And I think another great thing about working on open source contributions,


00:20:24.600 --> 00:20:29.000
especially if you don't have a ton of experience with software development, you know, maybe you're


00:20:29.000 --> 00:20:33.000
a student and you've worked a lot with computer science concepts is it's a great way to practice


00:20:33.000 --> 00:20:35.000
your version control skills, right?


00:20:35.000 --> 00:20:38.600
Like you're going to need to make commits. You're going to need to submit a pull request


00:20:38.600 --> 00:20:42.760
and get that reviewed and iterate with other developers. And so it's an awesome way to


00:20:42.760 --> 00:20:47.400
just pick a project and develop those skills kind of in parallel with your actual coding


00:20:47.400 --> 00:20:48.120
skills as well.


00:20:48.120 --> 00:20:52.760
Yeah, absolutely. And also get a sense of what does releasing and testing software feel like,


00:20:52.760 --> 00:20:58.120
because probably got a PR, then the PR has got to run some continuous integration. And


00:20:58.120 --> 00:21:03.240
then, you know, which branch does it go into? All those sort of things that we were talking


00:21:03.240 --> 00:21:07.960
about before that make it hard to simulate in school, like you're throwing in the somewhat


00:21:07.960 --> 00:21:10.440
deep end, but you know, it's good learning.


00:21:10.440 --> 00:21:13.880
Yep, definitely. And there's a lot of documentation to help with. How do I make my first


00:21:13.880 --> 00:21:16.520
commit? How do I pull this code down, et cetera, which is good.


00:21:16.520 --> 00:21:21.000
Yeah. I also think the tutorials and the documentation side could be really helpful. I was


00:21:21.000 --> 00:21:27.480
working on some project and it had documentation for the, you know, whatever property function,


00:21:27.480 --> 00:21:31.800
whatever it was that I was working with, some kind of enumeration and it was like split


00:21:31.800 --> 00:21:36.600
segments. And then you look at it, the documentation says this, setting this to true will


00:21:36.600 --> 00:21:42.280
split the segments. Like, okay, what does it base the splitting on? Like, what does


00:21:42.280 --> 00:21:46.280
this even do? Like, okay, I understand they will be split, but I would need to be more


00:21:46.280 --> 00:21:50.120
precise. Right. And like, just if you look at it, it kind of has just the name turned


00:21:50.120 --> 00:21:55.080
into a sentence. Like, you know, that thing is ripe for getting a little bit of extra


00:21:55.080 --> 00:21:56.040
detail, I would say.


00:21:56.040 --> 00:21:59.720
Yeah, definitely. You know, if you're confused, I'm sure someone else is confused and


00:21:59.720 --> 00:22:02.920
always great to at least, you know, report or help fix that, et cetera.


00:22:02.920 --> 00:22:08.680
Yeah. The other thing I like about your first tip here is you make connections in the


00:22:08.680 --> 00:22:13.160
industry pretty quickly, right? Like jumping into Pydanic, you get to know Samuel


00:22:13.160 --> 00:22:16.680
Colvin, who's connected to all these other people. And you probably work with Sebastian


00:22:16.680 --> 00:22:20.920
Ramirez from FastAPI because those two projects work closely together. Right. And all


00:22:20.920 --> 00:22:24.280
of a sudden people are like, oh yeah, that guy's amazing. I wish I could meet him. Right.


00:22:24.280 --> 00:22:27.400
You know, you're working virtually side by side, right?


00:22:27.400 --> 00:22:31.640
Yeah. It's really great. And, you know, awesome to have such a community that's focused


00:22:31.640 --> 00:22:35.160
on like helping other projects. And obviously it's just, you know, general improvement


00:22:35.160 --> 00:22:39.640
of projects for public use, which is a really great motive. And as you mentioned, like


00:22:39.640 --> 00:22:43.000
any contribution that you're going to make is going to get you noticed and help you


00:22:43.000 --> 00:22:46.920
make connections, which is great when you're, for example, a student like me looking to,


00:22:46.920 --> 00:22:50.760
you know, like make connections in the computer science and software community and


00:22:50.760 --> 00:22:52.440
maybe look for jobs eventually, et cetera.


00:22:52.440 --> 00:22:57.560
Yeah, absolutely. And if people show up, you know, you go to a job interview and there's


00:22:57.560 --> 00:23:02.120
10, 20 applicants and they're like, okay, look, we work with FastAPI. Have you, are


00:23:02.120 --> 00:23:05.880
you familiar with it? Somebody says, no, I think I've heard of it. Is that, is that


00:23:05.880 --> 00:23:09.560
a Python framework? Yes. It's a Python framework. Okay. Then the next person is like, yeah,


00:23:09.560 --> 00:23:13.080
I've written a little demo app with it. And then, you know, you show up and you're like,


00:23:13.080 --> 00:23:17.960
yeah, I actually contributed and added this feature that I hired. You know what I mean?


00:23:17.960 --> 00:23:22.040
You know, a lot of people focus on what is your kind of GitHub profile look like?


00:23:22.040 --> 00:23:25.720
What kind of projects do you have, et cetera. And, you know, if you're like, man, I don't


00:23:25.720 --> 00:23:29.400
have the time to develop all these awesome projects on my own, but you know how I can


00:23:29.400 --> 00:23:33.800
boost my profiles, just work on other people's, other people's projects, help out, et cetera.


00:23:33.800 --> 00:23:37.000
Right. And then, you know, someday you'll probably come up with something that catches


00:23:37.000 --> 00:23:41.080
on and you'll have your own project. But, you know, when you're really new, it's kind


00:23:41.080 --> 00:23:45.720
of hard to, those things are not easy to make a popular project in the first place. And


00:23:45.720 --> 00:23:48.360
so you can really jumpstart that whole process.


00:23:48.360 --> 00:23:49.160
Yep. Definitely.


00:23:49.160 --> 00:23:53.080
All right. Related to this, and you kind of hinted that it is the next tip is reading


00:23:53.080 --> 00:23:54.040
other people's code.


00:23:54.040 --> 00:23:58.120
Yeah. As we discussed at the beginning of the podcast, sometimes the code that you might


00:23:58.120 --> 00:24:01.560
write in class, you perhaps are a little bit more focused on, you know, getting it to work


00:24:01.560 --> 00:24:07.000
than how clean is this? How maintainable is this? How well would it work with other systems?


00:24:07.000 --> 00:24:11.960
So I think reading other people's code, especially often through, you know, open source contributions


00:24:11.960 --> 00:24:15.320
can be really beneficial in just helping you understand like, what are the industry


00:24:15.320 --> 00:24:20.520
norms? How can I improve my own code so that I'm, you know, matching these? And another


00:24:20.520 --> 00:24:24.600
great kind of tie in with the open source contributions is if I write some code to fix


00:24:24.600 --> 00:24:29.560
a bug and then get reviews from the, you know, maintainers of a repository, like I'm getting


00:24:29.560 --> 00:24:33.880
immediate feedback about like, how am I doing in my, you know, patterns that I'm using and


00:24:33.880 --> 00:24:35.800
the ways that I'm refactoring things, et cetera.


00:24:35.800 --> 00:24:40.040
And I think that's one of the best ways to learn the most quickly is, you know, you already


00:24:40.040 --> 00:24:44.680
had to come up with a solution to implement this fix yourself. But then let me collaborate


00:24:44.680 --> 00:24:48.760
with other people who are really experienced in this field to get a better idea of what


00:24:48.760 --> 00:24:50.520
I, how I should be solving problems like this.


00:24:50.520 --> 00:24:56.600
- Sure. And when you learn through a tutorial or online course, or even a college course,


00:24:56.600 --> 00:25:01.000
there's really different kind of expectations about how the code runs a lot of times. It's


00:25:01.000 --> 00:25:05.320
like, oh, okay. So if I type this in and I do this loop and I do this thing, then it'll


00:25:05.320 --> 00:25:10.760
work. But what about the error handling? What about the robustness, right? Like those things


00:25:10.760 --> 00:25:16.200
are my experience when I was working with interns more quite a while ago, but it was


00:25:16.200 --> 00:25:20.280
like, we'd have a project project would be going along great and they'd write awesome


00:25:20.280 --> 00:25:23.800
code, but I'd say, okay, see where you're supposed to put that number, type the word


00:25:23.800 --> 00:25:27.400
seven in there and see what happens, you know, and then boom, the program dies.


00:25:27.400 --> 00:25:31.080
You're like, okay, we still got a little more work to do. Like, how about an error message?


00:25:31.080 --> 00:25:35.800
Like this has to be a number rather than just killing the program, right? That kind of,


00:25:35.800 --> 00:25:40.280
those, those kinds of things you learn by working on like real projects, like open source


00:25:40.280 --> 00:25:44.360
ones. I think also, you know, you get to better understand for a given language. Obviously


00:25:44.360 --> 00:25:48.600
I'm most familiar with Python, like where should I be writing documentation for my code?


00:25:48.600 --> 00:25:52.680
You know, where should I be putting my examples? Where should I put my tests? And things like


00:25:52.680 --> 00:25:55.640
that. You don't necessarily have to think about if you're just writing a script, you


00:25:55.640 --> 00:25:58.760
know, for a class or, you know, online or in person, whatever that might be.


00:25:58.760 --> 00:26:04.760
Talk Python to me is partially supported by our training courses. When you need to


00:26:04.760 --> 00:26:10.200
learn something new, whether it's foundational Python or advanced topics like async web


00:26:10.200 --> 00:26:17.400
apps, FastAPI and more, be sure to check out our over 250 hours of courses over at


00:26:17.400 --> 00:26:22.040
Talk Python. And if your company is evaluating how they'll get up to speed on Python,


00:26:22.040 --> 00:26:29.000
please consider giving our content a look. Check it all out at talkpython.fm/courses.


00:26:29.000 --> 00:26:35.640
William out there says when wanting to contribute to a project, I tend to fall down the


00:26:35.640 --> 00:26:40.600
try to understand everything rabbit hole. Any tips on balancing contributing and learning by


00:26:40.600 --> 00:26:44.440
reading code? Yeah, that's a great question. I definitely fell down that rabbit hole myself.


00:26:44.440 --> 00:26:47.960
You know, I'm like, okay, I'm gonna fix this one line in this function. And then I'm like,


00:26:47.960 --> 00:26:53.720
oh, I just read 500 lines of code in this one. I think a good thing is to focus specifically


00:26:53.720 --> 00:26:58.680
on like one issue, right? Like find one bug or one fix that needs to be made and just kind of


00:26:58.680 --> 00:27:02.600
constrain yourself to like, let me fix this one thing. And then if you're like, oh, I have extra


00:27:02.600 --> 00:27:07.080
time, then go ahead and read the rest. But I think obviously, to your point, like you do have to


00:27:07.080 --> 00:27:12.600
contextualize some to be able to understand an issue or a bug better. But I suppose the nice


00:27:12.600 --> 00:27:15.320
thing is the more you read, the better it ends up being the long term.


00:27:15.320 --> 00:27:20.120
Yeah, personally, I kind of feel like try to understand programs and stuff like vertical


00:27:20.120 --> 00:27:25.240
slices through like all the tiers and parts of it. Like how much of this database bit do I need to


00:27:25.240 --> 00:27:29.400
understand to make this part work? I don't want to try to understand all the stored procedures


00:27:29.400 --> 00:27:33.320
and this weird optimization. I just need to know, how do I get this thing so that I can do this


00:27:33.320 --> 00:27:39.880
feature? And you kind of slowly explore your way through, but you can sort of do those things more


00:27:39.880 --> 00:27:43.400
quickly than trying to like, okay, first, we're going to read everything. Give me a week.


00:27:43.400 --> 00:27:47.320
Yeah. And I think another thing that helps sometimes that helps keep me focused is,


00:27:47.320 --> 00:27:51.720
okay, let me create something that's going to reproduce this problem. And then let me step


00:27:51.720 --> 00:27:57.480
through a debugger so that I'm at least letting myself know where like this data is coming from


00:27:57.480 --> 00:28:01.400
or where this problem is coming from. But I don't necessarily have to understand like every function


00:28:01.400 --> 00:28:05.400
that things move through or every class, but I'm at least like getting that kind of higher level


00:28:05.400 --> 00:28:09.320
understanding of like, where the heck is this thing coming from? And then I can really focus


00:28:09.320 --> 00:28:13.960
more on, you know, where's the issue that needs to be fixed? And let me really take a look at those


00:28:13.960 --> 00:28:14.840
couple of lines of code.


00:28:14.840 --> 00:28:19.400
Another thing you get from reading other people's code is an appreciation of style,


00:28:19.400 --> 00:28:24.680
right? Like formatting and polish and presentation, because a lot of good code,


00:28:24.680 --> 00:28:29.320
and a lot of times this is open source code, is written to be read more than it's meant to


00:28:29.320 --> 00:28:30.120
be written, right?


00:28:30.120 --> 00:28:36.200
Definitely. We like our automatic formatters a lot at Pydantic. So we just implemented the new


00:28:36.200 --> 00:28:43.160
rough formatter, which is written in Rust, super fast and adheres to, I think it's like 99.9%


00:28:43.160 --> 00:28:47.320
compatible with black, which is great. And then before that we were using black for everything.


00:28:47.320 --> 00:28:52.040
So another benefit of those contributions is getting used to using code formatters,


00:28:52.040 --> 00:28:55.080
you know, once you're done writing your code. And now I find myself, you know,


00:28:55.080 --> 00:28:59.000
just creating an environment and using code formatters for my academic code anyways,


00:28:59.000 --> 00:29:02.440
because I can't stand the look of it if it doesn't, you know, match.


00:29:02.440 --> 00:29:07.480
Yeah. The professors must love you. They're like, "Oh, this is so nice. I can read it


00:29:07.480 --> 00:29:12.440
compared to like whatever." So that's another one that got submitted. Yeah. I switched over


00:29:12.440 --> 00:29:18.360
to using rough for all of my projects as well, and ran rough against like tens of thousands of


00:29:18.360 --> 00:29:23.080
lines of Python and rough format. And it was like, you hit enter and it's just done. It's like


00:29:23.080 --> 00:29:28.920
reformatted, you know, 392 Python files. I'm like, "Did it really do it that quick?" Yes.


00:29:28.920 --> 00:29:32.920
Sebastian was quoted as saying like, "You know, sometimes I purposefully introduce little


00:29:32.920 --> 00:29:37.400
bugs or, you know, well-formatted things in my code just to make sure it's working." And it is,


00:29:37.400 --> 00:29:39.720
but I just wanted to make sure because it's so darn fast.


00:29:39.720 --> 00:29:44.360
Yeah, that's awesome. I integrated it into PyCharm. And there's a way now with the plugin


00:29:44.360 --> 00:29:50.360
to say when you do reformat code in PyCharm, just run rough format, which is really cool. And so now


00:29:50.360 --> 00:29:53.880
you just, you know, hit the keystroke to reformat and it's just, you go, and you're like, "Okay."


00:29:53.880 --> 00:29:54.200
Yeah.


00:29:54.200 --> 00:29:55.480
And so it's all good to go. Very nice.


00:29:55.480 --> 00:29:57.240
Awesome. I know what I'll be doing after this call then.


00:29:57.240 --> 00:30:03.240
Alyssa says, "I'm a TA for a college intro Python course. What advice would you have for students


00:30:03.240 --> 00:30:07.560
getting into Python for the first time in college level? You know, what to focus their time on and


00:30:07.560 --> 00:30:07.960
so on."


00:30:07.960 --> 00:30:12.200
Yeah, that's a great question. I think kind of the fundamental data structures can be really


00:30:12.200 --> 00:30:16.600
helpful to focus on at first and kind of fundamental concepts to programming like


00:30:16.600 --> 00:30:21.800
for loops, while loops, functions, classes, et cetera. And one nice thing about Python is that,


00:30:21.800 --> 00:30:26.120
you know, it's relatively easy to read code that's written with those structures, right?


00:30:26.120 --> 00:30:30.760
Like it's a little bit more intuitive than other languages like C, for example. And so I think


00:30:30.760 --> 00:30:35.080
getting started with those basics is nice in Python because if you just look at, you know,


00:30:35.080 --> 00:30:39.720
someone's example code who's implemented that, you can kind of read it like English if it's written


00:30:39.720 --> 00:30:40.200
well enough.


00:30:41.160 --> 00:30:44.760
Good names for variables and functions and that kind of stuff, right?


00:30:44.760 --> 00:30:48.440
Yeah, definitely. And I think too, kind of like we mentioned at the beginning, if you


00:30:48.440 --> 00:30:53.320
kind of find a fun, easy project that can help to contextualize and make your work more exciting,


00:30:53.320 --> 00:30:57.720
right? If it's not just, okay, let me, you know, think through these 10 concepts that I need to


00:30:57.720 --> 00:31:01.880
learn, but like, oh, let me write a rock, paper, scissors function or things like that.


00:31:01.880 --> 00:31:07.640
Yeah. One thing I'd also throw in there to add is maybe get them started with good tools


00:31:07.640 --> 00:31:12.120
really soon, right? Like PyCharm or VS Code, something like that, like rather than just


00:31:12.120 --> 00:31:17.480
notepad or some random thing, like, look, these tools will really, really help you though.


00:31:17.480 --> 00:31:22.840
They'll like help auto format it. They'll like do the formatting for you. They'll give you advice


00:31:22.840 --> 00:31:26.360
and show you the errors before you even run it, you know, like send them on the right path with


00:31:26.360 --> 00:31:26.600
that.


00:31:26.600 --> 00:31:29.320
Yeah. That's a great tip. I think it makes everything feel a little bit less


00:31:29.320 --> 00:31:33.320
overwhelming, right? It's like, okay, this is going to do half my work for me and then I just


00:31:33.320 --> 00:31:34.760
need to do some of the thinking.


00:31:34.760 --> 00:31:38.680
Exactly. And it's got my back. I think, you know, if you say like, okay, you type the if


00:31:38.680 --> 00:31:41.960
statement, then you hit colon, then you go and you hit four spaces. You're like, what? I got to


00:31:41.960 --> 00:31:46.280
press space four times. This is, but if you just say I type colon, I hit enter, then I keep typing


00:31:46.280 --> 00:31:50.200
and it's like auto indented, right? It's already done what I need. Then like, oh, okay, this is


00:31:50.200 --> 00:31:52.200
actually, it sounds weird, but it's actually totally fine.


00:31:52.200 --> 00:31:53.000
Yeah, definitely.


00:31:53.000 --> 00:31:59.400
So your next piece of advice here is to join some kind of club, your science club or something at


00:31:59.400 --> 00:32:01.160
your school to get going.


00:32:01.160 --> 00:32:05.880
Yeah. Like I mentioned, I was really fortunate in high school to have a teacher that taught


00:32:05.880 --> 00:32:11.320
some CS courses and I even helped lead like the coding club at my school. And I think this is a


00:32:11.320 --> 00:32:15.960
really great opportunity to engage with other students who are interested in coding. Even if


00:32:15.960 --> 00:32:20.680
you don't have coding courses, you can all kind of get together once a week, even, or once every


00:32:20.680 --> 00:32:25.480
two weeks and just work on projects or learn together in the club that I was leading. We


00:32:25.480 --> 00:32:31.000
sort of did a combination of little lessons and then also, you know, working on projects together.


00:32:31.000 --> 00:32:34.920
And then sometimes we would do little competitions, you know, there are things like


00:32:34.920 --> 00:32:40.360
LeetCode and other websites like that, that allow you to practice your algorithm skills. And not


00:32:40.360 --> 00:32:44.680
only are you getting better with coding, but it also helps to connect with other coders in your


00:32:44.680 --> 00:32:48.600
community. I think obviously by the nature of the work, sometimes it can feel a little bit lonely.


00:32:48.600 --> 00:32:53.160
And so it's nice to connect like that. And if you're not in school, but still looking to engage,


00:32:53.160 --> 00:32:58.840
there are, you know, Python meetups and other like data meetups and yeah, yeah, exactly.


00:32:59.720 --> 00:33:05.480
I don't know why I chose this location, but yeah, I just threw Python. I told it near you,


00:33:05.480 --> 00:33:09.080
but it actually put it in Verizon, New York, wherever there's, there's tons and tons of these


00:33:09.080 --> 00:33:13.800
places, right. An evening of Python coding, Python and APIs, Python, a hundred days of code.


00:33:13.800 --> 00:33:18.120
There's just tons of options, right. Because when you're in school, there's usually like clubs,


00:33:18.120 --> 00:33:22.760
either in high school or in college, there's maybe even more, but once you graduate, then you're


00:33:22.760 --> 00:33:27.400
like, well, go back to high school. That'd be weird. But these, these meetups and also, you


00:33:27.400 --> 00:33:35.000
know, PyCon just got announced for Pittsburgh and PyCon is such a major experience, I think for a


00:33:35.000 --> 00:33:38.360
lot of people. Looking in from the outside, I feel like people, a lot of people are like, well,


00:33:38.360 --> 00:33:42.520
I was really intimidated to go. And really it's just like a programming party and everyone's so


00:33:42.520 --> 00:33:45.640
welcoming and you should really check it out, I think for people listening.


00:33:45.640 --> 00:33:49.240
I'm excited. I'm going to go for the first time and next year. Yeah.


00:33:49.240 --> 00:33:54.440
Yeah. Awesome. Yeah. I love PyCon. Always, always tons of fun. What's our next tip here?


00:33:55.080 --> 00:33:58.120
Reach out to local companies for job opportunities. You talked about your


00:33:58.120 --> 00:34:01.560
internships and I was going to ask you about like, how did you find them so


00:34:01.560 --> 00:34:07.320
soon? But I knew a tip was coming, so save it for now. Like this is a great, great piece of advice.


00:34:07.320 --> 00:34:13.160
Yeah. So I think sometimes getting a, you know, your first job in a computer science field can,


00:34:13.160 --> 00:34:16.600
or, you know, software development field can feel a little bit intimidating, especially when you're


00:34:16.600 --> 00:34:20.440
on the younger side. Right. It's like, oh, well, all these people that I see working at


00:34:20.440 --> 00:34:24.760
big companies are, you know, older and have degrees and are more experienced, but, you know,


00:34:24.760 --> 00:34:29.800
there are a lot of small computer science startups or even medium-sized companies that are more than


00:34:29.800 --> 00:34:36.360
happy to hire younger high school interns. And so my first ever like computer science experience was


00:34:36.360 --> 00:34:41.320
a company that was in Chapel Hill, Carver, where I grew up called QuantWorks. And I worked for them


00:34:41.320 --> 00:34:46.120
for two summers in a row and it was really great just to start to get working with other people.


00:34:46.120 --> 00:34:52.680
We did some work for a local nonprofit group and then worked on an API with COVID information.


00:34:52.680 --> 00:34:57.320
And, you know, even those, these weren't like huge projects you'd hear about at,


00:34:57.320 --> 00:35:02.040
you know, Google or things like that. It was really great to just get those like local experiences.


00:35:02.040 --> 00:35:06.760
And I think also it's a little bit easier to, you know, get ins at smaller companies, right? Like


00:35:06.760 --> 00:35:12.040
if I, as a 15 year old email someone at Google, like, you know, who knows about me hearing a


00:35:12.040 --> 00:35:16.760
response, but, you know, local companies, I think it's just a lot easier to connect and start growing


00:35:16.760 --> 00:35:21.480
your career roots there. - Yeah. Here's the big secret that you don't learn until you've kind of


00:35:21.480 --> 00:35:27.000
walked the path. I think if you get one of those jobs at the amazing thing companies or some big


00:35:27.000 --> 00:35:32.120
tech company, you're probably going to be doing something really focused and specific. You won't


00:35:32.120 --> 00:35:37.320
get a real broad chance to work on software, but if you get a job at a small company, you know,


00:35:37.320 --> 00:35:42.040
you kind of got to do a lot of stuff because, well, it's maybe you and the one other person,


00:35:42.040 --> 00:35:48.520
right? So I think it helps you grow a little bit quicker. - Yeah. I completely agree. I've been


00:35:48.520 --> 00:35:54.840
really grateful to have had kind of all my job experiences be at smaller companies. At the next


00:35:54.840 --> 00:36:00.760
company that I worked at, it was an insurance tech company. I got to, you know, work on an API client


00:36:00.760 --> 00:36:07.080
and on even some like marketing videos for our company. And then, you know, got my first exposure


00:36:07.080 --> 00:36:12.040
to like cloud infrastructure, which like you're saying, like those aren't, those combinations of


00:36:12.040 --> 00:36:15.720
things aren't something you'd get to do at, you know, a large company internship. So I think


00:36:15.720 --> 00:36:19.160
that's one of the benefits of- - Yeah, there's teams for each one of those things you just said.


00:36:19.160 --> 00:36:23.960
- Right. And then sub teams and then sub sub teams. Yep. - Yes, exactly. And it's easier,


00:36:23.960 --> 00:36:28.360
like you said, it's easier to get those jobs. So it'd be cool to get a job at Google or Microsoft


00:36:28.360 --> 00:36:33.160
or whatever, but seriously, look around, there's probably a lot more opportunity at, you know,


00:36:33.160 --> 00:36:38.520
small groups that really need some computer help. You know what I mean? - Yeah. And the benefits of


00:36:38.520 --> 00:36:42.040
looking local is like, you might already have a connection there that you didn't know about or


00:36:42.040 --> 00:36:47.400
like that. So it's always helpful. - Next up, next tip, learn about software design principles.


00:36:47.400 --> 00:36:52.040
- Yeah. So this kind of ties nicely into our previous tip, but you know, the earlier you get


00:36:52.040 --> 00:36:57.560
to start working on some sort of production system or even just, you know, an open source project that


00:36:57.560 --> 00:37:02.520
has releases, et cetera, the earlier you get to start learning about how do I integrate and deploy


00:37:02.520 --> 00:37:07.960
this? And how do I work with pipelines and why are all my tests failing, you know, and things like


00:37:07.960 --> 00:37:14.120
that. And I think having those skills going into other opportunities really makes employers excited,


00:37:14.120 --> 00:37:18.520
right? Because you're already experienced in things like that. And so they don't have to spend,


00:37:18.520 --> 00:37:22.200
you know, the first couple of weeks getting you used to their integration and deployment systems


00:37:22.200 --> 00:37:26.280
and contributing to the repository and pull requests and things like that. And even things


00:37:26.280 --> 00:37:31.000
like agile development strategies. So getting used to like, how do I plan out what I'm going to


00:37:31.000 --> 00:37:35.480
develop in the next two weeks? You know, obviously there are various different systems you can use


00:37:35.480 --> 00:37:40.920
for that. But I think just taking things one step further from, I know how to write the code to like,


00:37:40.920 --> 00:37:46.840
how do I write the code with a team and how do I, you know, make sure it's released consistently


00:37:46.840 --> 00:37:50.920
and reliably, et cetera, can be really beneficial. - You mentioned the team, circling back just


00:37:50.920 --> 00:37:55.880
really quickly, like both to the contributing to open source and the joining a club. I think when


00:37:55.880 --> 00:37:59.080
you, a lot of people first think about programming, they think about, you know, okay, well, I'm going


00:37:59.080 --> 00:38:04.600
to go into the basement and shut the blinds and not see anyone and just write code and become pale.


00:38:04.600 --> 00:38:09.320
And, you know, but a lot of software actually is a pretty social, pretty interactive experience.


00:38:09.320 --> 00:38:13.720
And I think you get both of those from open source and internships and the clubs as well.


00:38:13.720 --> 00:38:15.560
- Yep, definitely. - And it's more fun. Come on.


00:38:15.560 --> 00:38:17.560
- Certainly, yeah. - Speaking of fun,


00:38:17.560 --> 00:38:21.400
find an opportunity to teach code. - Yeah. So this one I think is a little


00:38:21.400 --> 00:38:27.160
bit harder to orchestrate, but obviously there are always people wanting to learn how to code and


00:38:27.160 --> 00:38:31.480
people of all ages wanting to learn how to code. So kind of my own experience was this,


00:38:31.480 --> 00:38:37.480
with this was in high school, my school was promoting this class for anyone of all ages.


00:38:37.480 --> 00:38:41.960
It was going to happen, you know, from 7 to 9 PM once a week, and we were going to teach


00:38:41.960 --> 00:38:46.680
Apple Swift. So the like app development programming language. And I had only, you know,


00:38:46.680 --> 00:38:50.200
learned it for a couple of weeks, but they were looking for volunteers to help teach. And,


00:38:50.200 --> 00:38:55.000
you know, it's similar to I think our viewer, Alyssa mentioned, she's a TA, right? And I think


00:38:55.000 --> 00:38:59.400
the more you teach something, the more you are able to, you know, convince yourself that you


00:38:59.400 --> 00:39:03.880
understand it, really grasp concepts. And so I think if you get an opportunity to teach,


00:39:03.880 --> 00:39:08.200
you know, even if it's just volunteering or if it's paid, it's really beneficial in helping you


00:39:08.200 --> 00:39:12.840
understand those concepts. And I think just sparking kind of a general love for the community,


00:39:12.840 --> 00:39:16.280
right? Like when you get to help others learn, that's really positive experience.


00:39:16.280 --> 00:39:21.560
- Yeah, it is pretty amazing. And it doesn't have to be a full on college course. It could be,


00:39:21.560 --> 00:39:26.200
you know, we talked about the meetups or clubs, like, "Hey, I'm going to volunteer to do a


00:39:26.200 --> 00:39:30.040
presentation at one of the local meetups." People are pretty supportive and it's pretty,


00:39:30.040 --> 00:39:33.480
pretty low key. I know some of the ones I've been to, they'll be like, "Well, we're going to have


00:39:33.480 --> 00:39:37.560
three presenters and they're each, you know, 20 minutes instead of one person who has to be up


00:39:37.560 --> 00:39:41.960
there in front for like a really long time and, you know, 20 minute presentation on something


00:39:41.960 --> 00:39:46.440
that you're kind of passionate about." It's pretty easy once you, if you're worried, you know, once


00:39:46.440 --> 00:39:50.200
you get over being nervous, it's pretty easy. - Definitely. And, you know, it's like, "Okay,


00:39:50.200 --> 00:39:53.880
what code did you write last week and what tool did you find really helpful?" Like,


00:39:53.880 --> 00:39:57.400
it's pretty easy to talk about that in front of other people who are also going to be


00:39:57.400 --> 00:39:59.560
really excited to learn about it. - Yeah, yeah, yeah. "I thought this


00:39:59.560 --> 00:40:03.160
would be easy. It was really hard. Here's what I did and like, here's how we made it, like,


00:40:03.160 --> 00:40:06.920
got through and what actually unlocked it." And like that kind of stuff is really fun to talk


00:40:06.920 --> 00:40:08.200
about and super helpful. - Yeah.


00:40:08.280 --> 00:40:13.080
- What are your other pieces of advice that they get kind of leans into the internship side of


00:40:13.080 --> 00:40:16.360
things or, you know, connect with nonprofits and see if you can help with any of their needs?


00:40:16.360 --> 00:40:19.640
- We've talked a lot about community on this podcast, right? I think the more you


00:40:19.640 --> 00:40:23.560
involve with open source projects and, you know, work at a company, you start to realize, "Okay,


00:40:23.560 --> 00:40:28.280
this like really is a welcoming and engaged community." And kind of taking that outside


00:40:28.280 --> 00:40:34.440
of the sphere of just computer science. Obviously, nonprofits really help to do great things for


00:40:34.440 --> 00:40:38.840
communities and often they have some pretty significant tech needs that are hard to meet.


00:40:38.840 --> 00:40:43.400
And so I think another really great opportunity for young people who aren't maybe necessarily


00:40:43.400 --> 00:40:48.120
ready to start like a full-time job or even part-time job is just, "Can I work for a couple


00:40:48.120 --> 00:40:52.440
of hours a week with this, you know, nonprofit to help them?" That might be, "Can I help them


00:40:52.440 --> 00:40:57.320
maintain their website?" Or, "Can I build them a spreadsheet that has a couple of automations


00:40:57.320 --> 00:41:01.640
that's really going to help them?" So like one example is that in Chapel Hill, where I'm from,


00:41:01.640 --> 00:41:06.520
we have this great nonprofit called Porch that helps collect food from neighbors' porches and


00:41:06.520 --> 00:41:11.560
then redistributes that to local families in need and food pantries. And you can imagine,


00:41:11.560 --> 00:41:15.720
once you start to hear about this organization and it spreads, there's a lot of people involved.


00:41:15.720 --> 00:41:20.920
And so I helped my first internship kind of build a tool for them just to like organize their


00:41:20.920 --> 00:41:24.760
routes for pickups and things like that. And so it doesn't even have to be as complicated as that,


00:41:24.760 --> 00:41:29.160
but just I think reaching out to nonprofits is a great way to not only feel like, "Great,


00:41:29.160 --> 00:41:32.840
I have a coding community," but also like, "I have a place in my broader community as a whole."


00:41:32.840 --> 00:41:39.000
Yeah. And also offer some nice ways to give back. If you're working on a project where you,


00:41:39.000 --> 00:41:41.960
you know, maybe you're enjoying writing the code, but you're not like, "Well,


00:41:41.960 --> 00:41:46.840
how much am I contributing? Like I'm trying to, you know, optimize the trading speed for this


00:41:46.840 --> 00:41:52.440
algorithm. Like that's cool and all, but I kind of want to just feel like I'm using some of my


00:41:52.440 --> 00:41:56.200
powers for good." You know, one of these things that comes to mind is just this thing called


00:41:56.200 --> 00:42:00.920
the humanitarian toolbox. And it's a whole bunch of different pieces of software to help like when


00:42:00.920 --> 00:42:06.920
there's earthquakes or other national tsunami type disasters and, you know, helping humanitarian


00:42:06.920 --> 00:42:10.440
organizations solve technology problems with open source, right? Things like that is just,


00:42:10.440 --> 00:42:15.080
that's pretty cool. Yeah. Yeah. Yeah. So people can, I mean, this is just one that I know of,


00:42:15.080 --> 00:42:19.320
you can search around and find, I'm sure there's many of these projects. And if there's not,


00:42:19.320 --> 00:42:22.440
you know, you could create one, like the project you just talked about, right?


00:42:22.440 --> 00:42:25.800
Yeah, definitely. It's exciting that the need is always there. And so if you just


00:42:25.800 --> 00:42:29.240
find a project that sparks interest in you, like go ahead and contribute.


00:42:29.240 --> 00:42:34.200
Yeah, absolutely. All right. What do we got next here? Sign up for a couple of newsletters.


00:42:34.200 --> 00:42:38.760
Yeah. So this is a pretty like easy and passive way to get better at things. But, you know,


00:42:38.760 --> 00:42:42.920
if you just sign up for a couple of newsletters, I know like RealPython has a great one that just


00:42:42.920 --> 00:42:47.480
sends out little tidbits and tricks and, you know, best practices. And then kind of a more


00:42:47.480 --> 00:42:53.240
career focused one is Ryan Peterman has a newsletter about just kind of advancing through


00:42:53.240 --> 00:42:58.040
a software development oriented career. You know, when you're sitting on the bus or ready to go to


00:42:58.040 --> 00:43:01.560
bed and just want to take a little read of something, it's nice to just spend, you know,


00:43:01.560 --> 00:43:06.120
two to five minutes reading little hints and tips and tricks. And this is a nice thing for people


00:43:06.120 --> 00:43:10.520
who are quite busy and still looking to improve, but don't have a ton of time to, you know,


00:43:10.520 --> 00:43:13.960
add an additional course or teach a class or go to a meetup, things like that.


00:43:13.960 --> 00:43:18.680
Yeah, absolutely. Another tip you have is take online courses, because they're pretty short,


00:43:18.680 --> 00:43:19.080
right?


00:43:19.080 --> 00:43:23.960
Yeah, kind of mentioned that already. But I honestly, another benefit that I found of that


00:43:23.960 --> 00:43:29.640
is just really helping me feel more comfortable in class. You know, if I started taking, I think,


00:43:29.640 --> 00:43:35.400
my first like machine learning course when I was in eighth or ninth grade, and obviously,


00:43:35.400 --> 00:43:39.080
I did not understand a lot of what was going on in the course. But at least I pulled, you know,


00:43:39.080 --> 00:43:43.240
maybe 20% out of the course and got to move forward with that. And so I think just the


00:43:43.240 --> 00:43:47.400
earlier you get to have exposure to things that you find cool, the easier it's going to be to


00:43:47.400 --> 00:43:48.280
learn down the line.


00:43:48.280 --> 00:43:51.960
Yeah, that's awesome. Another tip you have is learn more than one language,


00:43:51.960 --> 00:43:55.960
which you're kind of forced to do in computer science programs. But it's easy to just go like,


00:43:55.960 --> 00:44:00.040
well, I've chose which one I'm going to learn on my own. And then I just did that, right?


00:44:00.040 --> 00:44:03.880
Yeah, definitely. I think, you know, especially with Python, a lot of people who get started


00:44:03.880 --> 00:44:08.360
with maybe a more data science oriented trajectory are like, okay, this is all I need. I've got


00:44:08.360 --> 00:44:12.520
everything right here, you know, and I think it just makes you a better programmer to have


00:44:12.520 --> 00:44:17.480
exposure to different languages. And, you know, maybe you don't have a ton of time to study three


00:44:17.480 --> 00:44:22.440
at once, but like, go read, you know, some code from a different language. And I'm kind of


00:44:22.440 --> 00:44:27.560
experiencing that right now getting used to writing some code in Pydantic core, which is in Rust, and


00:44:27.560 --> 00:44:31.960
then being a little bit more familiar with the Pydantic Python wrapper. But it's really refreshing


00:44:31.960 --> 00:44:36.840
and great to learn about new ways to solve problems. And, you know, obviously Rust is


00:44:36.840 --> 00:44:39.320
quite impressive and fast. So that's always exciting, too.


00:44:39.320 --> 00:44:43.240
Yeah, you can tell that Python's getting older over 30 years now, because there's a lot of Rust


00:44:43.240 --> 00:44:43.560
in it.


00:44:43.560 --> 00:44:44.520
Yeah, exactly.


00:44:44.520 --> 00:44:48.840
No, it's, it really is impressive how much it's gone from, oh, we're just doing everything in


00:44:48.840 --> 00:44:53.640
C extensions to like, all the fancy shiny stuff is Rust internal somewhere.


00:44:53.640 --> 00:44:53.960
Yep.


00:44:53.960 --> 00:44:57.640
Right? You already talked about multiple tools that are in libraries that are that way.


00:44:57.640 --> 00:45:02.280
Right. And we use Py03, which is an awesome library that kind of helps to connect Python


00:45:02.280 --> 00:45:06.360
to Rust. And, you know, there are more and more open source contributions to projects like that,


00:45:06.360 --> 00:45:08.920
that help link languages, which is awesome.


00:45:08.920 --> 00:45:15.400
Yeah. So one sort of sub tip that you had in here is this, get 1% better every day. And you'd sort


00:45:15.400 --> 00:45:20.040
of group that into the newsletters. I think that can go kind of shared amongst many of your pieces


00:45:20.040 --> 00:45:20.840
of advice.


00:45:20.840 --> 00:45:24.680
Yeah, I think it's a great mindset to have in general. You know, as long as you're putting


00:45:24.680 --> 00:45:29.480
in relatively consistent work to learn and practice what you're learning, etc. I think


00:45:29.480 --> 00:45:33.080
you'll be quite surprised and impressed with yourself at how much better you're getting,


00:45:33.080 --> 00:45:36.760
how much more comfortable you feel with things. And I feel like when you're just starting out,


00:45:36.760 --> 00:45:41.240
and you've got this huge learning curve to work on, it's really great to, you know, just be


00:45:41.240 --> 00:45:46.280
consistent, like for five to 30 minutes a day, like work on this thing. And then even in two


00:45:46.280 --> 00:45:49.880
weeks, you're gonna be like, wow, I've learned so much, you know, and then you can imagine what


00:45:49.880 --> 00:45:50.680
you'll feel like in a year.


00:45:50.680 --> 00:45:57.080
Yeah, I think it's so easy to underestimate that how that compounds in your career. I remember


00:45:57.080 --> 00:46:02.200
when I first got my first real programming job, I was still in grad school, but working on it a


00:46:02.200 --> 00:46:07.560
lot. And you would get, you know, officially, you got an hour for lunch. But the way it really


00:46:07.560 --> 00:46:11.720
worked, we'd go grab some food, you know, eat it quick in the little courtyard and then go back to


00:46:11.720 --> 00:46:18.760
work. And just because where else you gonna go? You know, but what I started doing was I would


00:46:18.760 --> 00:46:23.800
get some new programming book on refactoring or design patterns, or I'm doing C++ at the time.


00:46:23.800 --> 00:46:28.120
So some C++ book. Now just say, look, I get an hour, I got 25 minutes before I go back to work,


00:46:28.120 --> 00:46:32.520
I'm gonna just sit here and read the book every day. And just one, I felt like I was supposed to


00:46:32.520 --> 00:46:37.400
have an hour from my job for lunch. And two, it was contributing back to my work anyway. But it was


00:46:37.400 --> 00:46:42.760
after doing that for a year or two, I went from being like a super newbie to giving conference


00:46:42.760 --> 00:46:46.520
talks to people like, well, how'd you learn all this stuff? I was like, well, lunch basically.


00:46:46.520 --> 00:46:47.640
You know?


00:46:47.640 --> 00:46:51.960
Totally. And I mean, kind of connecting back to this podcast over the summer, I started listening,


00:46:51.960 --> 00:46:55.960
you know, I was like, well, I have a 15 minute walk to work each way. I might as well learn


00:46:55.960 --> 00:46:59.960
something while I'm at it. And I'm a big fan of podcasts anyways, but you know, I had finished my


00:46:59.960 --> 00:47:03.160
New York Times Daily by then and I was like, well, I've got to listen to something else.


00:47:03.160 --> 00:47:06.520
So it's great to just, you know, we have so much downtime during our days when we could


00:47:06.520 --> 00:47:10.600
be listening to something, but listening to this podcast is another great way to just pick up


00:47:10.600 --> 00:47:14.040
tips and learn about what's going on in the Python community. And you know,


00:47:14.040 --> 00:47:16.360
how can I write my own code better? Things like that.


00:47:16.360 --> 00:47:21.000
Yeah. I really appreciate that. And thanks. I find that there's a lot of people who will write me.


00:47:21.000 --> 00:47:24.600
And when I first started this podcast, I thought, well, who's going to listen to such a show? Like


00:47:24.600 --> 00:47:28.520
must be the people like really, really into it. Right. And then I started getting emails from


00:47:28.520 --> 00:47:33.240
people who would say, Hey, I really enjoy your show. I'm starting to understand a lot of the


00:47:33.240 --> 00:47:36.760
things you're saying. I'm like, I've been listening for six weeks. I'm like, why you listen for six


00:47:36.760 --> 00:47:41.240
weeks and you'd like barely understood. Like, well, okay, thank you. But why do you do this?


00:47:41.240 --> 00:47:45.800
And what I realized is a lot of people who are new start to use it as a language immersion.


00:47:45.800 --> 00:47:49.720
You know, like if you wanted to learn Portuguese, you'd just go live in Brazil for six months and


00:47:49.720 --> 00:47:52.920
then you would know it. Right. And so they kind of like, well, I want to be in the Python space.


00:47:52.920 --> 00:47:57.160
So I'm just going to like immerse myself in that space until it starts to click.


00:47:57.160 --> 00:48:00.840
Yeah, it's a good way to do it. And like for the job that I had this previous summer,


00:48:00.840 --> 00:48:05.560
I was working in the Django framework. And, you know, obviously when you're on the job and writing


00:48:05.560 --> 00:48:09.240
code and you have a problem, it's pretty easy to just look something up and read through


00:48:09.240 --> 00:48:13.160
documentation, et cetera. But then I kind of started searching through your previous podcasts


00:48:13.160 --> 00:48:16.520
and just listening to episodes about Django because it was like, okay, what can I, you know,


00:48:16.520 --> 00:48:20.760
pick up that I don't necessarily need like right now to solve my problem, but can really help me


00:48:20.760 --> 00:48:24.280
down the line and just kind of in my day to day writing the code.


00:48:24.280 --> 00:48:27.960
Awesome. I think we might have touched on pretty much all of the tips. Yeah,


00:48:27.960 --> 00:48:34.280
I guess the last one is part time freelance work. So one angle was getting an internship and so on,


00:48:34.280 --> 00:48:38.840
but maybe you live in a place where it's hard. It's hard to find a remote internship or something


00:48:38.840 --> 00:48:42.760
like that. Right. You could do some lightweight consulting type of work.


00:48:42.760 --> 00:48:47.480
Yeah, exactly. I'm certainly more interested in backend or like full stack kind of thing,


00:48:47.480 --> 00:48:52.680
but there are a lot of people who are looking for, you know, website help and website development. So


00:48:52.680 --> 00:48:57.800
I've kind of reached out on platforms like Nextdoor, which is just like a neighborhood


00:48:57.800 --> 00:49:02.200
communication platform and, you know, through school email lists and things like that and said,


00:49:02.200 --> 00:49:06.840
hey, does anyone need help, you know, building a website? And honestly, I do most things through


00:49:06.840 --> 00:49:12.120
Wix. So it's not like it takes a ton of technical knowledge. Like I didn't need to study these


00:49:12.120 --> 00:49:16.760
things for years and years to be able to practice them. But there are a lot of people looking for


00:49:16.760 --> 00:49:21.000
just help with technical things. And if you have little bits of time here and there, but can't


00:49:21.000 --> 00:49:25.400
commit to a full internship or full time job or anything like that, it's a great way to just


00:49:25.400 --> 00:49:29.640
get started writing code. And people are always super grateful just to have the tech help.


00:49:29.640 --> 00:49:34.280
Absolutely. Yeah, it's a good way for you to get experience out there. All right. I'll throw one


00:49:34.280 --> 00:49:40.280
in one in here to maybe round close things out as volunteer at conferences. So we talked about


00:49:40.280 --> 00:49:45.240
going to conferences or going and joining meetups, but you could volunteer at a conference or at a


00:49:45.240 --> 00:49:50.280
meetup. And a lot of these conferences like PyCon, there's hundreds of many, many volunteers.


00:49:50.280 --> 00:49:54.840
I think it probably is over 100 volunteers to make that happen. And I think there might even


00:49:54.840 --> 00:49:59.560
be sometimes like travel grants, like if, hey, if I volunteer to basically work at the conference,


00:49:59.560 --> 00:50:04.680
will you get me there sort of thing. And much like working in open source, it really lets you


00:50:04.680 --> 00:50:09.560
make connections with people in the industry, right? With the speakers and other folks. Yeah.


00:50:09.560 --> 00:50:13.400
Yeah, definitely. I think that's a really great piece of advice. You know, I think a lot of these


00:50:13.400 --> 00:50:17.480
are very applicable to like, even if you don't have a ton of experience, you can get started


00:50:17.480 --> 00:50:21.240
with this, you know, and it can kind of be your on ramp into this community if that's what you're


00:50:21.240 --> 00:50:25.240
interested in. And I think that's a really great one, right? Because not only are you gonna get to


00:50:25.240 --> 00:50:29.720
be in this community, but also like no better place to learn about Python than PyCon, right? So


00:50:29.720 --> 00:50:34.440
it's nice to just be in that space and get to absorb that, all that information as well.


00:50:34.440 --> 00:50:38.200
Yeah. And people might not know, they hear about PyCon, they're like, okay, that's the one,


00:50:38.200 --> 00:50:42.120
that's the big one in the US and it moves around. And then there's EuroPython, which is


00:50:42.120 --> 00:50:48.440
in amazing places in Europe, but there's actually many, many miniature PyCons around, you know,


00:50:48.440 --> 00:50:55.000
there's like PyOhio and there's PyTennessee and PyTexas and PyCascades. And I was at PyBay in


00:50:55.000 --> 00:50:59.400
San Francisco a little while ago, there's a bunch of volunteers there. So it could be that there's


00:50:59.400 --> 00:51:02.840
one hour drive from where you are, you don't have to make it a big trip.


00:51:02.840 --> 00:51:07.560
Yep, definitely. And you know, more and more, there are also some like online opportunities,


00:51:07.560 --> 00:51:11.800
right? So if you really aren't close to any that are coming up soon, you can also consider that


00:51:11.800 --> 00:51:12.300
route.


00:51:12.300 --> 00:51:16.840
Yeah, absolutely. All right. Well, I think that pretty much wraps it up. Anything that we didn't


00:51:16.840 --> 00:51:21.560
cover that you think you want to throw out for people getting into programming in Python?


00:51:21.560 --> 00:51:25.880
No, I think we did a pretty comprehensive overview, but I think the exciting thing is just,


00:51:25.880 --> 00:51:30.440
if you want to learn more, there are a ton of avenues to do it and a really supportive community


00:51:30.440 --> 00:51:31.720
kind of waiting for you to help.


00:51:31.720 --> 00:51:35.880
Yeah. I think if you haven't experienced it before, I do think the, how supportive the


00:51:35.880 --> 00:51:39.160
community is and how welcoming they are is probably going to be a surprise. A lot of people


00:51:39.160 --> 00:51:42.920
like you think, oh, I don't know enough. They're going to call me and say, you don't know how to


00:51:42.920 --> 00:51:47.560
work with this project. Get out of here. Like, no, usually they're, everyone's super excited to


00:51:47.560 --> 00:51:52.120
whatever, have you speak at their event, volunteer, work on open source projects,


00:51:52.120 --> 00:51:54.200
you name it, right? That's been my experience anyway.


00:51:54.200 --> 00:51:55.160
Yeah, mine as well.


00:51:55.160 --> 00:51:59.720
Excellent. All right. Well, before we get out here, usually ask a question at the end about


00:51:59.720 --> 00:52:05.320
some PyPI project or a library that you've run across that are awesome. I mean, we can go and


00:52:05.320 --> 00:52:09.160
throw out Pydantic and Pydantic Core for everyone out there. Cause that's amazing. Right. But


00:52:09.160 --> 00:52:12.200
anything else that you're like, wow, this is really awesome. People should know about.


00:52:12.200 --> 00:52:17.320
Yeah. I guess I mentioned it a little bit earlier in the podcast, but the company Astral has been


00:52:17.320 --> 00:52:23.240
working on the rough project. So they originally had a linter and the code for that is written in


00:52:23.240 --> 00:52:27.240
Rust. So it's quite fast as we discussed before, but they just came out with their


00:52:27.240 --> 00:52:33.720
rough format support and lots of major projects have switched over to that. So FastAPI,


00:52:33.720 --> 00:52:38.680
Pydantic, et cetera. And I think it's really great to see people still working super hard on


00:52:38.680 --> 00:52:43.560
high performance formatting and linting tools. And it's just really quite satisfying to see


00:52:43.560 --> 00:52:47.880
things run so fast and keep things so clean. So I guess give a shout out to that project.


00:52:47.880 --> 00:52:49.000
It's quite helpful.


00:52:49.000 --> 00:52:53.560
Yeah. Charlie Marsh and team over there are doing excellent work and it's really great. I think


00:52:53.560 --> 00:52:59.400
I like the way that it works and obviously black is kind of the de facto things that people are


00:52:59.400 --> 00:53:03.080
choosing. So I like the ways in which it's the same as black. I like the ways in which it's


00:53:03.080 --> 00:53:07.080
different and configurable as well. So I can definitely second that one. That's a really good


00:53:07.080 --> 00:53:07.320
one.


00:53:07.320 --> 00:53:11.560
Yeah. The number of configuration options that they offer are really great and it's quite


00:53:11.560 --> 00:53:17.000
impressive that they have the 99.9% compatibility with black. That makes it super easy to adopt


00:53:17.000 --> 00:53:21.880
given the already existing standard, but also nice that they have really well-documented


00:53:21.880 --> 00:53:23.400
differences and things like that.


00:53:23.400 --> 00:53:27.560
Yeah, for sure. All right, Sydney, thank you so much for being on the show and I can tell that


00:53:27.560 --> 00:53:32.840
you're going to be super successful. You already are super successful and you're months away


00:53:33.160 --> 00:53:37.880
a good number of months, but months away from graduating and really diving headfirst into this.


00:53:37.880 --> 00:53:40.600
So you must be pretty excited and congrats.


00:53:40.600 --> 00:53:44.120
Yeah. Thank you. It was so wonderful to chat with you on the podcast and hopefully I'll see


00:53:44.120 --> 00:53:45.720
you at PyCon this next year.


00:53:45.720 --> 00:53:47.240
Yeah. You as well. Hope so. Bye.


00:53:48.200 --> 00:53:53.320
This has been another episode of Talk Python to Me. Thank you to our sponsors. Be sure to


00:53:53.320 --> 00:53:58.120
check out what they're offering. It really helps support the show. Want to level up your Python?


00:53:58.120 --> 00:54:02.840
We have one of the largest catalogs of Python video courses over at Talk Python. Our content


00:54:02.840 --> 00:54:08.120
ranges from true beginners to deeply advanced topics like memory and async. And best of all,


00:54:08.120 --> 00:54:12.520
there's not a subscription in sight. Check it out for yourself at training.talkpython.fm.


00:54:13.080 --> 00:54:17.720
Be sure to subscribe to the show. Open your favorite podcast app and search for Python.


00:54:17.720 --> 00:54:21.960
We should be right at the top. You can also find the iTunes feed at /itunes,


00:54:21.960 --> 00:54:28.120
the Google Play feed at /play, and the direct RSS feed at /rss on talkpython.fm.


00:54:28.120 --> 00:54:32.760
We're live streaming most of our recordings these days. If you want to be part of the show and have


00:54:32.760 --> 00:54:37.400
your comments featured on the air, be sure to subscribe to our YouTube channel at talkpython.fm/youtube.


00:54:39.720 --> 00:54:43.560
This is your host, Michael Kennedy. Thanks so much for listening. I really appreciate it.


00:54:43.560 --> 00:54:45.960
Now get out there and write some Python code.


00:54:46.280 --> 00:54:48.280
[MUSIC]


00:54:48.280 --> 00:55:05.880
[END]


00:55:05.880 --> 00:55:15.880
[BLANK_AUDIO]

