WEBVTT

00:00:00.000 --> 00:00:02.760
We all know that tools like ChatGPT

00:00:02.760 --> 00:00:07.120
have really empowered developers to tackle bigger problems.

00:00:07.120 --> 00:00:09.840
Are you using Tailwind CSS and need a login page?

00:00:09.840 --> 00:00:13.200
Try asking chat, what is the HTML for a login page

00:00:13.200 --> 00:00:16.800
with the login, username, password, and a button

00:00:16.800 --> 00:00:19.360
in its own section in the center of a page?

00:00:19.360 --> 00:00:23.040
It will literally give you the first pass version of it.

00:00:23.040 --> 00:00:24.800
But how far can we push this?

00:00:24.800 --> 00:00:28.960
Fred Toubiran may have taken it farther than most.

00:00:28.960 --> 00:00:33.280
He built a functioning SaaS product with paying customers

00:00:33.280 --> 00:00:36.000
by using only ChatGPT and Python.

00:00:36.000 --> 00:00:38.880
It's fascinating to hear his story and see what he's built.

00:00:38.880 --> 00:00:41.980
This is "Talk Python to Me" episode 459,

00:00:41.980 --> 00:00:45.640
recorded February 19th, 2024.

00:00:45.640 --> 00:00:48.040
- Are you ready for your host, Dave?

00:00:48.040 --> 00:00:49.480
- You're listening to Michael Kennedy

00:00:49.480 --> 00:00:51.440
on "Talk Python to Me."

00:00:51.440 --> 00:00:52.760
Live from Portland, Oregon,

00:00:52.760 --> 00:00:54.920
and this segment was made with Python.

00:00:58.160 --> 00:01:01.520
Welcome to "Talk Python to Me," a weekly podcast on Python.

00:01:01.520 --> 00:01:03.320
This is your host, Michael Kennedy.

00:01:03.320 --> 00:01:05.680
Follow me on Mastodon, where I'm @mkennedy,

00:01:05.680 --> 00:01:08.400
and follow the podcast using @talkpython,

00:01:08.400 --> 00:01:10.960
both on fosstodon.org.

00:01:10.960 --> 00:01:13.080
Keep up with the show and listen to over seven years

00:01:13.080 --> 00:01:16.440
of past episodes at talkpython.fm.

00:01:16.440 --> 00:01:19.920
We've started streaming most of our episodes live on YouTube.

00:01:19.920 --> 00:01:23.560
Subscribe to our YouTube channel over at talkpython.fm/youtube

00:01:23.560 --> 00:01:25.760
to get notified about upcoming shows

00:01:25.760 --> 00:01:27.380
and be part of that episode.

00:01:28.300 --> 00:01:30.260
This episode is sponsored by Mailtrap,

00:01:30.260 --> 00:01:33.340
an email delivery platform that developers love.

00:01:33.340 --> 00:01:36.940
Try for free at mailtrap.io.

00:01:36.940 --> 00:01:40.740
And it's brought to you by us over at Talk Python Training.

00:01:40.740 --> 00:01:43.940
Did you know that we have over 250 hours of Python courses?

00:01:43.940 --> 00:01:44.860
Yeah, that's right.

00:01:44.860 --> 00:01:48.340
Check them out at talkpython.fm/courses.

00:01:48.340 --> 00:01:51.900
- Brad, welcome to "Talk Python to Me."

00:01:51.900 --> 00:01:52.860
- So great to be here.

00:01:52.860 --> 00:01:55.180
Thank you so much for the invitation.

00:01:55.180 --> 00:01:56.020
Nice to be here.

00:01:56.020 --> 00:01:57.460
- Yeah. - Yeah, it's lovely

00:01:57.460 --> 00:01:58.300
to have you.

00:01:58.300 --> 00:02:01.700
We're gonna have a lot of fun talking about this app

00:02:01.700 --> 00:02:06.380
that you've built using a highly powered by AI

00:02:06.380 --> 00:02:07.540
and in different ways.

00:02:07.540 --> 00:02:11.780
It's both powered by AI, but also largely built with AI.

00:02:11.780 --> 00:02:14.300
And I think it's gonna give people an interesting look

00:02:14.300 --> 00:02:17.060
into what is possible these days.

00:02:17.060 --> 00:02:18.780
- What is possible and the journey

00:02:18.780 --> 00:02:21.780
of a middle-aged coder also maybe.

00:02:21.780 --> 00:02:24.340
- That's really an interesting thing to discuss.

00:02:24.340 --> 00:02:26.060
And maybe we could just start a little bit

00:02:26.060 --> 00:02:27.140
with the introduction about yourself

00:02:27.140 --> 00:02:28.860
and then talk a bit about that.

00:02:28.860 --> 00:02:33.700
So before we dive into talking about how you use ChatGPT

00:02:33.700 --> 00:02:37.980
to largely build this app that is a SaaS product service

00:02:37.980 --> 00:02:40.660
on the internet, people pay, subscribe to,

00:02:40.660 --> 00:02:43.540
which is the dream of many people, it's awesome.

00:02:43.540 --> 00:02:46.100
With AI, just tell people a bit about yourself

00:02:46.100 --> 00:02:48.620
and then we'll, I wanna talk about this journey.

00:02:48.620 --> 00:02:53.620
- It's a long story because I'm turning 50 in June, 2024.

00:02:54.220 --> 00:02:57.740
If you listen to this before June, 2024, I will be 49,

00:02:57.740 --> 00:02:59.620
after I will be 50.

00:02:59.620 --> 00:03:01.980
So yes, that will be-

00:03:01.980 --> 00:03:03.420
- You're a spring chicken.

00:03:03.420 --> 00:03:05.380
I'm older than you, Fred.

00:03:05.380 --> 00:03:06.580
- Oh, you're older than me.

00:03:06.580 --> 00:03:07.980
Okay, cool.

00:03:07.980 --> 00:03:10.620
I found someone older than me to talk to.

00:03:10.620 --> 00:03:11.580
Oh, that's fine.

00:03:11.580 --> 00:03:13.620
- You can still write code into your 50s.

00:03:13.620 --> 00:03:15.220
Let me tell you, the keyboard still works.

00:03:15.220 --> 00:03:16.060
It's amazing.

00:03:16.060 --> 00:03:17.780
- And I started when I was 48,

00:03:17.780 --> 00:03:20.100
but maybe we'll get back to this later.

00:03:20.100 --> 00:03:23.820
So originally my professional journey started

00:03:23.820 --> 00:03:27.060
as an interpreter, Russian, English to French.

00:03:27.060 --> 00:03:31.300
So I graduated as an interpreter, so in languages.

00:03:31.300 --> 00:03:34.500
And then I started being involved in music.

00:03:34.500 --> 00:03:36.140
I was head of sponsorship

00:03:36.140 --> 00:03:38.220
for a big music festival in Belgium.

00:03:38.220 --> 00:03:42.260
I had rock venues, live music venues for a few years.

00:03:42.260 --> 00:03:45.020
And then I started being involved in tech

00:03:45.020 --> 00:03:48.100
as a head of product, head of paid acquisition

00:03:48.100 --> 00:03:49.220
for a few startups.

00:03:49.220 --> 00:03:50.460
I had my own startups.

00:03:50.460 --> 00:03:53.420
I exited one startup in the FinTech space

00:03:53.420 --> 00:03:55.500
in the early 2000s.

00:03:55.500 --> 00:03:57.860
I had a circus for two years.

00:03:57.860 --> 00:03:59.060
That's quite- - A circus?

00:03:59.060 --> 00:04:00.900
- That's quite an interesting story.

00:04:00.900 --> 00:04:03.740
Yes, family circus with four big tents,

00:04:03.740 --> 00:04:05.020
eight tons of equipment.

00:04:05.020 --> 00:04:07.140
So that was quite a story.

00:04:07.140 --> 00:04:08.540
- Was this like Cirque du Soleil

00:04:08.540 --> 00:04:11.340
or was it with animals or what kind of-

00:04:11.340 --> 00:04:13.780
- It was more like, I would say like Cirque du Soleil,

00:04:13.780 --> 00:04:16.700
but at a smaller, smaller scale, of course.

00:04:16.700 --> 00:04:17.540
- Okay, amazing.

00:04:17.540 --> 00:04:20.620
- But four tents and circus artists

00:04:20.620 --> 00:04:23.060
and actors and musicians.

00:04:23.060 --> 00:04:26.060
And that was, yes, an original show, an original story.

00:04:26.060 --> 00:04:28.580
I also produced rock bands.

00:04:28.580 --> 00:04:30.860
Maybe I can give a shout out to one of the bands

00:04:30.860 --> 00:04:34.220
that I love, that I contributed to, The Boxer Rebellion.

00:04:34.220 --> 00:04:36.260
Maybe you heard about them, The Boxer Rebellion?

00:04:36.260 --> 00:04:37.660
- Yeah. - It's a British band

00:04:37.660 --> 00:04:40.660
based here in London, but with a singer

00:04:40.660 --> 00:04:44.500
from Nashville, Tennessee, Nathan Nicholson.

00:04:44.500 --> 00:04:46.980
So I was involved in music, in tech,

00:04:46.980 --> 00:04:48.460
I mean, in all of those things.

00:04:48.460 --> 00:04:51.140
And I think that the project that we're going to talk about

00:04:51.140 --> 00:04:54.700
is kind of a good mix between music, tech,

00:04:54.700 --> 00:04:56.500
and all my passions.

00:04:56.500 --> 00:04:58.860
I was also a radio DJ for you, so that's why.

00:04:58.860 --> 00:05:00.420
- That's the audio side, right?

00:05:00.420 --> 00:05:02.260
That kind of brings you some together in the music,

00:05:02.260 --> 00:05:03.180
I suppose, as well.

00:05:03.180 --> 00:05:04.340
- Exactly. - Amazing.

00:05:04.340 --> 00:05:05.900
You know, listening to you tell the story,

00:05:05.900 --> 00:05:09.700
first of all, what a diverse set of experiences.

00:05:09.700 --> 00:05:11.020
That must've been really fun.

00:05:11.020 --> 00:05:13.020
- It's not a career, that's the problem.

00:05:13.020 --> 00:05:15.340
Unemployable. (laughs)

00:05:15.340 --> 00:05:18.620
- Yeah, that's, but in terms of thinking about products

00:05:18.620 --> 00:05:22.620
and coding, I know when I experience different areas,

00:05:22.620 --> 00:05:24.620
I always see like, oh, this could be way better,

00:05:24.620 --> 00:05:26.900
and that could be way better, and why is that so hard?

00:05:26.900 --> 00:05:29.500
Surely we could create some software to fix these things.

00:05:29.500 --> 00:05:32.300
You must've had a lot of ideas about programs

00:05:32.300 --> 00:05:35.700
you would like to see and stuff you'd like to work on.

00:05:35.700 --> 00:05:38.260
- And multiple times, the solution for me

00:05:38.260 --> 00:05:40.180
was to hire people to do it.

00:05:40.180 --> 00:05:41.940
I had my own startups in the past,

00:05:41.940 --> 00:05:44.620
and I always had a team of, let's say,

00:05:44.620 --> 00:05:46.860
two to five developers working for me

00:05:46.860 --> 00:05:48.420
when we were doing that.

00:05:48.420 --> 00:05:51.100
So I kind of understood all the structure,

00:05:51.100 --> 00:05:52.700
the architecture of the apps,

00:05:52.700 --> 00:05:57.220
but I'd never really coded myself.

00:05:57.220 --> 00:05:59.580
So I was always relying on other people.

00:05:59.580 --> 00:06:01.820
The difference today is that I spent

00:06:01.820 --> 00:06:04.740
most of my days coding, which is quite different.

00:06:04.740 --> 00:06:08.460
- Yeah, and you said you started coding when you were 48.

00:06:08.460 --> 00:06:09.900
- Yes.

00:06:09.900 --> 00:06:11.780
- Roughly, almost two years ago.

00:06:11.780 --> 00:06:12.620
- Yes.

00:06:12.620 --> 00:06:13.460
- That's awesome.

00:06:13.460 --> 00:06:14.820
You know, I do hear from a lot of people,

00:06:14.820 --> 00:06:17.140
or see comments like, oh, I think I'm too old

00:06:17.140 --> 00:06:20.180
to learn this, or, oh, you have to have done this

00:06:20.180 --> 00:06:23.380
when you were a kid, or maybe gotten a degree in college,

00:06:23.380 --> 00:06:25.060
otherwise you're doomed.

00:06:25.060 --> 00:06:27.460
You surely have an alternative viewpoint on that,

00:06:27.460 --> 00:06:28.420
given your success.

00:06:28.420 --> 00:06:32.260
- I thought it would be like that also for me,

00:06:32.260 --> 00:06:34.860
because I would say I'm quite a perfectionist,

00:06:34.860 --> 00:06:38.180
so if I learn something, I want to achieve something

00:06:38.180 --> 00:06:39.820
with what I learn.

00:06:39.820 --> 00:06:42.580
And the problem, the issue with code for me

00:06:42.580 --> 00:06:46.580
for a long time had been that I could go through

00:06:46.580 --> 00:06:49.660
the basic tutorials, the first lessons,

00:06:49.660 --> 00:06:53.900
watching some videos or reading some tutorials.

00:06:53.900 --> 00:06:56.100
It was difficult for me to really achieve

00:06:56.100 --> 00:06:59.300
something meaningful, something that I could really share,

00:06:59.300 --> 00:07:02.100
that could become a product, because you always end up

00:07:02.100 --> 00:07:06.140
doing the same little exercises and little tutorials,

00:07:06.140 --> 00:07:08.020
and that doesn't end up anywhere.

00:07:08.020 --> 00:07:10.340
- You learned how to do a loop, but then that doesn't

00:07:10.340 --> 00:07:12.340
really help you get any closer to an app, right?

00:07:12.340 --> 00:07:15.820
- How to do a little to-do list or a little calculator,

00:07:15.820 --> 00:07:19.620
or something very simple, nothing that would be worth

00:07:19.620 --> 00:07:22.260
sharing as a product, and especially as a paid product.

00:07:22.260 --> 00:07:26.020
So I always thought, okay, if I want to build a SaaS,

00:07:26.020 --> 00:07:29.860
the only solution for me is to rely on a freelancer

00:07:29.860 --> 00:07:33.420
or on an agency or on a team of people.

00:07:33.420 --> 00:07:36.220
I was doing it until I discovered--

00:07:36.220 --> 00:07:39.460
- That's a big risk, and it's also not that easy

00:07:39.460 --> 00:07:42.180
to hire a team to build your product,

00:07:42.180 --> 00:07:44.140
when you're still trying to figure out what a product is

00:07:44.140 --> 00:07:45.140
and all these things, right?

00:07:45.140 --> 00:07:49.100
- Even if you hire non-expensive developers,

00:07:49.100 --> 00:07:52.540
it has still a cost, and if you want to,

00:07:52.540 --> 00:07:55.540
you know, just, if you don't want to take too much risk,

00:07:55.540 --> 00:07:58.660
and if you want to test your product to see if you have

00:07:58.660 --> 00:08:00.860
product market fits, I mean, you don't want to spend

00:08:00.860 --> 00:08:03.860
5,000, 10,000, 15,000 on a product.

00:08:03.860 --> 00:08:07.740
It's difficult, and the alternative that people are

00:08:07.740 --> 00:08:10.740
most of the time advocating these days, it's no code.

00:08:10.740 --> 00:08:15.260
So it's building stuff with, let's say, Bubble,

00:08:15.260 --> 00:08:16.700
which is pretty popular.

00:08:16.700 --> 00:08:20.180
- Got Retool, they've been a sponsor of the show before.

00:08:20.180 --> 00:08:22.980
- Retool, obviously, that's pretty nice,

00:08:22.980 --> 00:08:24.660
mostly for internal apps.

00:08:24.660 --> 00:08:27.980
And also, you can just connect stuff through Zapier,

00:08:27.980 --> 00:08:30.540
through Make, formerly IntegraMAT.

00:08:30.540 --> 00:08:34.020
You can achieve something, but you don't have the control

00:08:34.020 --> 00:08:37.300
on the UI, you don't really have the control exactly

00:08:37.300 --> 00:08:39.740
on what's happening behind the scenes,

00:08:39.740 --> 00:08:42.020
and you don't have the flexibility that you have

00:08:42.020 --> 00:08:44.260
if you really code yourself.

00:08:44.260 --> 00:08:46.540
So if you can really get your hands dirty

00:08:46.540 --> 00:08:47.860
and code on your own.

00:08:47.860 --> 00:08:50.380
So I use also to be a strong advocate of no code.

00:08:50.380 --> 00:08:54.220
So I was using, I'm still using firstly Zapier,

00:08:54.220 --> 00:08:56.580
and then later on Make.

00:08:56.580 --> 00:09:01.580
But once I discovered Python in August, September 2022,

00:09:01.580 --> 00:09:05.860
then everything changed for me,

00:09:05.860 --> 00:09:09.300
because then I could really start doing my own stuff,

00:09:09.300 --> 00:09:11.860
and I started with the backend stuff,

00:09:11.860 --> 00:09:14.620
with the backend scripts,

00:09:14.620 --> 00:09:18.580
for let's say to create competitive intelligence scripts,

00:09:18.580 --> 00:09:19.460
things like that.

00:09:19.460 --> 00:09:21.580
And I slowly moved into frontend,

00:09:21.580 --> 00:09:23.620
but first for a few months,

00:09:23.620 --> 00:09:27.220
it was mostly local scripts on my computer.

00:09:27.220 --> 00:09:28.100
- That's really interesting.

00:09:28.100 --> 00:09:31.620
The low code, no code stuff is super powerful.

00:09:31.620 --> 00:09:35.300
I think it does make it possible for people to build apps.

00:09:35.300 --> 00:09:38.780
I have a friend who built a platform a little bit on top

00:09:38.780 --> 00:09:41.060
of something that's kind of a low code thing.

00:09:41.060 --> 00:09:43.820
And it's, what they're doing is really impressive.

00:09:43.820 --> 00:09:45.620
And they've got lots of customers

00:09:45.620 --> 00:09:46.700
and it's going really well.

00:09:46.700 --> 00:09:48.100
It's a vibrant business.

00:09:48.100 --> 00:09:51.580
It's always you're beholden to whatever that platform does.

00:09:51.580 --> 00:09:54.220
If the platform has downtime, you have downtime.

00:09:54.220 --> 00:09:57.340
If they're changing their feature set in a way

00:09:57.340 --> 00:09:59.700
that doesn't quite line up with what you're trying to do,

00:09:59.700 --> 00:10:02.100
well, that's too bad because, you know,

00:10:02.100 --> 00:10:04.620
that they've changed their direction or whatever.

00:10:04.620 --> 00:10:06.140
And it's really powerful,

00:10:06.140 --> 00:10:08.180
but it's also a little bit of a risk, right?

00:10:08.180 --> 00:10:09.700
To be built on top of that.

00:10:09.700 --> 00:10:10.900
- A risk, yes.

00:10:10.900 --> 00:10:13.300
But for me, it was even more, I would say,

00:10:13.300 --> 00:10:16.380
the arbitrage was even more about flexibility.

00:10:16.380 --> 00:10:20.420
So when you code something on your own with Python,

00:10:20.420 --> 00:10:22.740
JavaScript, as I'm doing now,

00:10:22.740 --> 00:10:26.100
it's faster in many cases than trying to figure out

00:10:26.100 --> 00:10:29.900
how to connect, let's say, Airtable with something else.

00:10:29.900 --> 00:10:31.580
Then you've got to think about

00:10:31.580 --> 00:10:34.180
how the data is structured in Airtable,

00:10:34.180 --> 00:10:36.980
how the data has to be structured on the other side,

00:10:36.980 --> 00:10:39.660
and then how to connect them together.

00:10:39.660 --> 00:10:44.660
Sometimes it's easier if you just have a SQLite database

00:10:44.660 --> 00:10:48.940
or MySQL database, and then if you do your own stuff

00:10:48.940 --> 00:10:53.940
on your own without trying to connect existing SAS together.

00:10:53.940 --> 00:10:57.900
It was more about flexibility for me.

00:10:57.900 --> 00:11:00.380
The main reason why I switched almost completely

00:11:00.380 --> 00:11:02.580
from no code to coding.

00:11:02.580 --> 00:11:03.420
- That's really interesting.

00:11:03.420 --> 00:11:06.940
I guess one more that would be worth considering is price.

00:11:06.940 --> 00:11:09.140
Some of these low-code, no-code platforms

00:11:09.140 --> 00:11:11.900
are really powerful, but when you start to look at price

00:11:11.900 --> 00:11:14.420
for a decent number of users using your app,

00:11:14.420 --> 00:11:16.820
a lot of them are built for internal use cases.

00:11:16.820 --> 00:11:18.820
They're not really built for having a bunch

00:11:18.820 --> 00:11:21.780
of multi-tenant style users and so on,

00:11:21.780 --> 00:11:24.460
but also they can just get real expensive real quick.

00:11:24.460 --> 00:11:27.020
- Yes, because they are based usually on the amount

00:11:27.020 --> 00:11:32.020
of transactions or scenarios or zaps that can run.

00:11:32.020 --> 00:11:36.220
So if you want to transfer one piece of data

00:11:36.220 --> 00:11:39.540
from one software to another one, it's one transaction.

00:11:39.540 --> 00:11:42.500
If you have, let's say, 10,000 transactions per month

00:11:42.500 --> 00:11:44.300
for a certain price, then yeah,

00:11:44.300 --> 00:11:46.820
you can run out of transactions pretty quickly.

00:11:46.820 --> 00:11:51.820
And very quickly, you end up paying 25, 30, $40

00:11:51.820 --> 00:11:56.780
for a pretty low amount of transactions,

00:11:56.780 --> 00:12:00.020
API codes basically, between the different SAS.

00:12:00.020 --> 00:12:02.340
- And if you glue them together,

00:12:02.340 --> 00:12:04.980
one tool connects to another, which connects to another,

00:12:04.980 --> 00:12:07.220
then you've got to pay for kind of the traffic

00:12:07.220 --> 00:12:08.580
and the activity in all three.

00:12:08.580 --> 00:12:10.620
It's not just like, well, I'm talking to my database.

00:12:10.620 --> 00:12:12.820
I'm now talking to some other service

00:12:12.820 --> 00:12:14.780
that's got something going on.

00:12:14.780 --> 00:12:18.220
- And the fact is also that there are a few tools

00:12:18.220 --> 00:12:21.180
that enable you to create a UI user interface

00:12:21.180 --> 00:12:23.860
for your product, but you're limited to the building blocks

00:12:23.860 --> 00:12:25.940
usually that they offer, even if you can tweak them

00:12:25.940 --> 00:12:27.180
with some code.

00:12:27.180 --> 00:12:29.580
And it's a bit the same, I would say it's a bit also

00:12:29.580 --> 00:12:32.940
the same issue that I've experienced on WordPress,

00:12:32.940 --> 00:12:33.780
let's say.

00:12:33.780 --> 00:12:36.820
The problem is that if you use something like Bubble

00:12:36.820 --> 00:12:38.860
and you want to build something with it,

00:12:38.860 --> 00:12:42.620
you bring to your app or the mothership,

00:12:42.620 --> 00:12:45.940
the core of the big app of Bubble as a whole,

00:12:45.940 --> 00:12:47.620
when you want to build something on top

00:12:47.620 --> 00:12:49.140
of a platform like that.

00:12:49.140 --> 00:12:52.060
It's a lot of things that you don't really need

00:12:52.060 --> 00:12:54.620
for your specific apps, but it has to be there

00:12:54.620 --> 00:12:57.020
because the whole engine has to run.

00:12:57.020 --> 00:13:00.220
That's usually what you also experience with WordPress,

00:13:00.220 --> 00:13:04.180
for instance, when you have a site on WordPress,

00:13:04.180 --> 00:13:06.340
maybe sometimes or even most of the time,

00:13:06.340 --> 00:13:07.980
you don't need that big engine.

00:13:07.980 --> 00:13:11.660
You could work with a static website with a few HTML,

00:13:11.660 --> 00:13:14.700
CSS, JavaScript pages, that would be much lighter.

00:13:14.700 --> 00:13:17.260
There would be less code to activate

00:13:17.260 --> 00:13:19.260
to have your website up and running.

00:13:19.260 --> 00:13:23.220
So in terms of performance, if you can code your own stuff,

00:13:23.220 --> 00:13:27.220
I think it's also a good reason to choose coding

00:13:27.220 --> 00:13:29.140
versus no code, if you can do it.

00:13:29.140 --> 00:13:29.980
- Totally agree.

00:13:29.980 --> 00:13:33.540
Price, performance, control, all those things.

00:13:33.540 --> 00:13:37.820
That said, you do have to understand more about the world.

00:13:37.820 --> 00:13:40.020
Like one thing we were coordinating around

00:13:40.020 --> 00:13:43.740
is just like understanding web app architecture.

00:13:43.740 --> 00:13:45.180
I don't know how you feel about it,

00:13:45.180 --> 00:13:48.460
but I feel like a lot of the guidance that is out there

00:13:48.460 --> 00:13:50.380
is too intense.

00:13:50.380 --> 00:13:52.100
There's too many moving parts.

00:13:52.100 --> 00:13:54.300
Everyone thinks you need to have some kind

00:13:54.300 --> 00:13:57.380
of background worker service like celery,

00:13:57.380 --> 00:13:59.220
and you need a caching layer,

00:13:59.220 --> 00:14:01.020
and you need this, and you need that.

00:14:01.020 --> 00:14:03.820
And it just starts to be like, whoa,

00:14:03.820 --> 00:14:05.740
this is like running Netflix.

00:14:05.740 --> 00:14:06.580
You know what I mean?

00:14:06.580 --> 00:14:09.860
Whereas a lot of times what you need is a backend,

00:14:09.860 --> 00:14:12.420
a front end, and some kind of data store, and that's it.

00:14:12.420 --> 00:14:14.660
And that data store, you mentioned it before,

00:14:14.660 --> 00:14:16.940
the data store can be in the early days,

00:14:16.940 --> 00:14:19.980
could be SQLite, which doesn't require another server

00:14:19.980 --> 00:14:23.180
or another thing to maintain and connect and secure.

00:14:23.180 --> 00:14:25.820
And it can just be a file that you back up.

00:14:25.820 --> 00:14:26.660
- Exactly.

00:14:26.660 --> 00:14:28.020
And you're proving out the idea, right?

00:14:28.020 --> 00:14:30.060
So maybe you're coming from a place

00:14:30.060 --> 00:14:33.300
where you weren't a DevOps expert,

00:14:33.300 --> 00:14:35.420
you know, like how'd this transition go for you?

00:14:35.420 --> 00:14:39.060
- When I started developing an app,

00:14:39.060 --> 00:14:42.220
for some reason I came across Flask

00:14:42.220 --> 00:14:44.140
as a solution for Python.

00:14:44.140 --> 00:14:47.820
So I started developing the app on Flask.

00:14:47.820 --> 00:14:52.460
And what I like about Flask is that if you compare it,

00:14:52.460 --> 00:14:54.140
let's say you use Flask,

00:14:54.140 --> 00:14:57.260
and then for the pages you use HTML, CSS,

00:14:57.260 --> 00:14:58.780
and Vanilla JavaScript.

00:14:58.780 --> 00:15:01.620
What I like is that you can deploy an app

00:15:01.620 --> 00:15:03.260
which comes from a single folder

00:15:03.260 --> 00:15:04.900
and you've got everything there,

00:15:04.900 --> 00:15:07.300
your main Flask file,

00:15:07.300 --> 00:15:11.060
and then all the, let's say the sub files in Python

00:15:11.060 --> 00:15:13.540
with all the business logic that you can isolate

00:15:13.540 --> 00:15:15.900
in one file or another.

00:15:15.900 --> 00:15:17.140
It's one project.

00:15:17.140 --> 00:15:19.060
And then you deploy the project to GitHub,

00:15:19.060 --> 00:15:21.900
and then let's say you connect GitHub to Railway.

00:15:21.900 --> 00:15:24.700
I'm using Railway for my deployment.

00:15:24.700 --> 00:15:27.020
So you connect GitHub to Railway.

00:15:27.020 --> 00:15:31.420
And then once you update your code in PyCharm

00:15:31.420 --> 00:15:33.660
or in Visual Studio,

00:15:33.660 --> 00:15:36.740
then you have the automatic deployment to Railway.

00:15:36.740 --> 00:15:38.020
But it's one project.

00:15:38.020 --> 00:15:40.820
If you want to decouple completely

00:15:40.820 --> 00:15:42.340
the backend from the front end,

00:15:42.340 --> 00:15:45.060
let's say you work with something like Next.js,

00:15:45.060 --> 00:15:45.900
for instance,

00:15:45.900 --> 00:15:48.820
and then you want to have a backend in something else,

00:15:48.820 --> 00:15:51.260
then you've got to have multiple instances

00:15:51.260 --> 00:15:52.340
and connect them together.

00:15:52.340 --> 00:15:54.980
It becomes more complicated.

00:15:54.980 --> 00:15:57.100
But if you want to create something simple,

00:15:57.100 --> 00:16:01.380
you can keep it simple with one single Flask web app.

00:16:01.380 --> 00:16:03.700
And that's what I've been doing so far.

00:16:03.700 --> 00:16:07.180
Most of the Django maker that I built,

00:16:07.180 --> 00:16:10.060
that I've been building since September 23,

00:16:10.060 --> 00:16:11.460
is a Flask web app.

00:16:11.460 --> 00:16:14.020
So it's one project, one big project.

00:16:14.020 --> 00:16:15.060
It's one project.

00:16:15.060 --> 00:16:17.580
It's interesting that you mentioned, Celery,

00:16:17.580 --> 00:16:18.420
a few moments ago,

00:16:18.420 --> 00:16:21.260
because I'm about to ship a new app,

00:16:21.260 --> 00:16:23.980
which is coming in the next two weeks or three weeks,

00:16:23.980 --> 00:16:24.820
I think.

00:16:24.820 --> 00:16:25.860
And that's the first time

00:16:25.860 --> 00:16:30.220
after almost 18 months of development

00:16:30.220 --> 00:16:32.980
that I've considered using something like that

00:16:32.980 --> 00:16:35.540
because I needed it for performance reasons

00:16:35.540 --> 00:16:37.420
to process something.

00:16:37.420 --> 00:16:39.380
- Something you want to start off in the background

00:16:39.380 --> 00:16:42.340
and get back and just let it be done later, right?

00:16:42.340 --> 00:16:43.180
Yeah.

00:16:43.180 --> 00:16:44.220
- And it was not that easy.

00:16:44.220 --> 00:16:48.140
We had a discussion with someone who is amazing

00:16:48.140 --> 00:16:52.020
on the Discord of Railway two, three days ago,

00:16:52.020 --> 00:16:55.740
because if you're deploying things on Railway,

00:16:55.740 --> 00:16:57.420
you would usually use,

00:16:57.420 --> 00:17:01.220
and that's what they advise you to do as on Heroku,

00:17:01.220 --> 00:17:02.060
a proc file.

00:17:02.060 --> 00:17:05.100
And the proc file, you've got the start commands

00:17:05.100 --> 00:17:07.500
that will start your project.

00:17:07.500 --> 00:17:11.220
But on Heroku, which is a competitor of Railway,

00:17:11.220 --> 00:17:13.820
you can start both the web app

00:17:13.820 --> 00:17:17.060
and the worker in the same file.

00:17:17.060 --> 00:17:18.900
But you can't do that on Railway.

00:17:18.900 --> 00:17:21.300
You've got theoretically to have two different projects,

00:17:21.300 --> 00:17:23.100
which kind of defeats the purpose.

00:17:23.100 --> 00:17:24.980
- You kind of deploy them both, right?

00:17:24.980 --> 00:17:27.540
But then you get to more coordination.

00:17:27.540 --> 00:17:29.300
- Yeah, but fortunately,

00:17:29.300 --> 00:17:31.060
and there is a discussion on the Discord

00:17:31.060 --> 00:17:33.420
between me and one of the guys there,

00:17:33.420 --> 00:17:37.420
they had a way to create a custom JSON for me,

00:17:37.420 --> 00:17:40.380
which managed to start both the web app

00:17:40.380 --> 00:17:44.260
and the worker in the same deployment.

00:17:44.260 --> 00:17:46.940
But I had to fight, to be honest with you,

00:17:46.940 --> 00:17:49.780
for like four or five hours to find a solution.

00:17:49.780 --> 00:17:51.580
Because sometimes the problem,

00:17:51.580 --> 00:17:53.660
and that's the issue that I've seen a lot,

00:17:53.660 --> 00:17:55.780
is that traditional developers,

00:17:55.780 --> 00:17:57.220
like professional developers,

00:17:57.220 --> 00:17:59.820
not people like me, not random guys like me,

00:17:59.820 --> 00:18:02.140
usually they assume that the people

00:18:02.140 --> 00:18:04.620
that they're supposed to explain things to

00:18:04.620 --> 00:18:07.860
know much more than what they do.

00:18:07.860 --> 00:18:11.060
And so they just write a few instructions,

00:18:11.060 --> 00:18:16.300
like cryptic instructions that nobody really understands.

00:18:16.300 --> 00:18:18.660
And they would assume that everyone reading

00:18:18.660 --> 00:18:20.860
those instructions would understand

00:18:20.860 --> 00:18:22.580
what they have to do to, let's say,

00:18:22.580 --> 00:18:25.020
use this worker service, for instance.

00:18:25.020 --> 00:18:26.260
But that's not the case.

00:18:26.260 --> 00:18:27.300
- I totally agree.

00:18:27.300 --> 00:18:30.620
This portion of "Talk Python to Me"

00:18:30.620 --> 00:18:32.220
is brought to you by Mailtrap,

00:18:32.220 --> 00:18:36.140
an email delivery platform that developers love.

00:18:36.140 --> 00:18:39.780
An email sending solution with industry-best analytics,

00:18:39.780 --> 00:18:44.580
SMTP, and email API SDKs for major programming languages,

00:18:44.580 --> 00:18:47.420
and 24/7 human support.

00:18:47.420 --> 00:18:50.140
Try for free at mailtrap.io.

00:18:50.140 --> 00:18:53.300
You know, it's kind of the curse of knowledge.

00:18:53.300 --> 00:18:55.820
Like once you know all of these things,

00:18:55.820 --> 00:18:57.460
it's really hard to remember,

00:18:57.460 --> 00:18:58.940
oh yeah, so then you just,

00:18:58.940 --> 00:19:00.500
oh, just run that in Docker,

00:19:00.500 --> 00:19:02.740
and then link it and set up a network over there.

00:19:02.740 --> 00:19:03.860
You're like, wait a minute.

00:19:03.860 --> 00:19:05.540
- Yeah, I'll do it. - I don't know how to do that.

00:19:05.540 --> 00:19:07.060
I'm just trying to run my Python app.

00:19:07.060 --> 00:19:09.140
Like you're bringing a whole new thing in

00:19:09.140 --> 00:19:11.100
that you think makes it sound easy,

00:19:11.100 --> 00:19:12.940
and it makes it sound real hard to me.

00:19:12.940 --> 00:19:14.220
I totally agree this is a problem.

00:19:14.220 --> 00:19:15.500
- So many moving pieces.

00:19:15.500 --> 00:19:19.420
When you start coding, I mean, obviously you know that

00:19:19.420 --> 00:19:22.980
because you've been in this game for much longer than me,

00:19:22.980 --> 00:19:24.580
but once you start coding,

00:19:24.580 --> 00:19:26.940
there are so many little things that you have to know

00:19:26.940 --> 00:19:28.500
to make this thing work.

00:19:28.500 --> 00:19:32.620
So it starts with how to just configure GitHub

00:19:32.620 --> 00:19:34.460
and connect it to your--

00:19:34.460 --> 00:19:35.580
- How do you use Git?

00:19:35.580 --> 00:19:36.940
If you have a Git conflict,

00:19:36.940 --> 00:19:38.300
you might be like, well, this is done.

00:19:38.300 --> 00:19:39.580
I can't do anything else anymore.

00:19:39.580 --> 00:19:41.140
It's broken. - Yeah.

00:19:41.140 --> 00:19:43.580
- I mean, it's really overwhelming when you're new, right?

00:19:43.580 --> 00:19:44.420
- Yeah, it's a lot.

00:19:44.420 --> 00:19:47.540
And that's where AI today helps you

00:19:47.540 --> 00:19:52.020
because in most cases, if you know how to talk with the AI,

00:19:52.020 --> 00:19:55.820
you will get answers that are much easier to understand

00:19:55.820 --> 00:19:58.220
than what you would have on Stack Overflow, for instance.

00:19:58.220 --> 00:19:59.060
- I agree.

00:19:59.060 --> 00:20:00.700
It's very interesting how helpful it is.

00:20:00.700 --> 00:20:02.340
I think it's a good time to about jump into that.

00:20:02.340 --> 00:20:04.820
But before we do, tell people about Railway a bit.

00:20:04.820 --> 00:20:05.660
How does this work?

00:20:05.660 --> 00:20:07.420
I haven't used Railways before.

00:20:07.420 --> 00:20:11.300
- It's a platform where you can deploy your apps, basically.

00:20:11.300 --> 00:20:16.300
It connects to your GitHub account.

00:20:16.300 --> 00:20:18.820
It's not only, I mean, you have on Railway

00:20:18.820 --> 00:20:22.420
not only a possibility to deploy your Flask app

00:20:22.420 --> 00:20:25.300
or other types of apps also,

00:20:25.300 --> 00:20:29.060
but they also offer all the database aspect.

00:20:29.060 --> 00:20:33.660
So you can spin a Redis database.

00:20:33.660 --> 00:20:35.580
You can have a MySQL database.

00:20:35.580 --> 00:20:37.180
I think they also have Mongo.

00:20:37.180 --> 00:20:40.940
I mean, they have most of the formats that you can expect.

00:20:40.940 --> 00:20:43.020
And the great thing is that everything

00:20:43.020 --> 00:20:45.060
is on the same platform.

00:20:45.060 --> 00:20:47.060
Let's say that I've got another project

00:20:47.060 --> 00:20:50.340
I'm involved with a developer, with a real developer.

00:20:50.340 --> 00:20:52.940
Hi to Alex, if he listens to this podcast,

00:20:52.940 --> 00:20:54.820
a professional developer.

00:20:54.820 --> 00:20:59.140
For that project, for instance, we have an app on Heroku.

00:20:59.140 --> 00:21:02.980
We have a database on MongoDB Atlas,

00:21:02.980 --> 00:21:07.980
and we have the files uploaded to S3, to Amazon S3

00:21:10.340 --> 00:21:11.900
for the file storage.

00:21:11.900 --> 00:21:14.220
On Railway, you can, at least it's what I do,

00:21:14.220 --> 00:21:17.340
you can have at the same time, the deployment of the app,

00:21:17.340 --> 00:21:19.580
so which replaces Heroku,

00:21:19.580 --> 00:21:22.540
and you can have the database also together.

00:21:22.540 --> 00:21:24.340
And the cool thing is that they are,

00:21:24.340 --> 00:21:26.900
I would say even physically at the same location.

00:21:26.900 --> 00:21:31.380
So in terms of performance, it's pretty easy to handle.

00:21:31.380 --> 00:21:32.820
And it's very user-friendly.

00:21:32.820 --> 00:21:35.140
I mean, very, very easy to use.

00:21:35.140 --> 00:21:39.700
From what I saw, even easier to understand than Heroku.

00:21:39.700 --> 00:21:42.820
And I tried also some things like Vercel

00:21:42.820 --> 00:21:46.420
or I use for some project also,

00:21:46.420 --> 00:21:48.740
but that's more for static website, Netlify.

00:21:48.740 --> 00:21:50.140
But for this type-

00:21:50.140 --> 00:21:51.980
- Netlify is fantastic for static, but yeah.

00:21:51.980 --> 00:21:53.700
- For static, Netlify is just amazing.

00:21:53.700 --> 00:21:56.740
And just the one where you can just drag and drop a project,

00:21:56.740 --> 00:21:59.100
for instance, for a static website, so easy.

00:21:59.100 --> 00:22:03.020
But for a more multi-tenant dynamic web app,

00:22:03.020 --> 00:22:06.620
like the Jingle Maker, Railway was really cool.

00:22:06.620 --> 00:22:08.780
And as you can see from the presentation,

00:22:08.780 --> 00:22:10.020
it's very user-friendly.

00:22:10.020 --> 00:22:11.460
- It definitely is.

00:22:11.460 --> 00:22:14.140
And the pricing is actually really decent.

00:22:14.140 --> 00:22:17.340
They have a free trial and then $5 a month.

00:22:17.340 --> 00:22:18.900
But that gets you eight gigs of RAM

00:22:18.900 --> 00:22:20.900
and eight CPUs per service.

00:22:20.900 --> 00:22:22.220
That is really good.

00:22:22.220 --> 00:22:24.900
- I started it on the OBI plan.

00:22:24.900 --> 00:22:28.420
And I think that today, just to give you an idea,

00:22:28.420 --> 00:22:33.420
with roughly 500 users coming to the app per day,

00:22:33.420 --> 00:22:37.860
and a lot of them using the product,

00:22:37.860 --> 00:22:41.540
I pay for that roughly $15 a month.

00:22:41.540 --> 00:22:42.380
- Incredible.

00:22:42.380 --> 00:22:46.660
- For both the app deployment and the database,

00:22:46.660 --> 00:22:49.380
which is in MySQL for the Jingle Maker.

00:22:49.380 --> 00:22:51.020
- That's pretty impressive.

00:22:51.020 --> 00:22:52.460
Good one to know about, this is cool.

00:22:52.460 --> 00:22:53.300
- Yes, nice one.

00:22:53.300 --> 00:22:54.980
- They have good Python support?

00:22:54.980 --> 00:22:56.060
- Yes, yes, very good.

00:22:56.060 --> 00:22:59.580
And they have, as I said, like most people do today,

00:22:59.580 --> 00:23:03.540
a Discord server monitored also by volunteers.

00:23:03.540 --> 00:23:05.620
And there was a guy the other day,

00:23:05.620 --> 00:23:07.060
I didn't even know he was not part

00:23:07.060 --> 00:23:08.340
of the official team of Railway,

00:23:08.340 --> 00:23:09.420
and it really helped me.

00:23:09.420 --> 00:23:12.100
He wrote some code for me to make this thing work

00:23:12.100 --> 00:23:13.580
with Celery.

00:23:13.580 --> 00:23:15.780
So it was really, really amazing.

00:23:15.780 --> 00:23:18.540
And it was on a Sunday in the evening.

00:23:18.540 --> 00:23:19.740
So really nice.

00:23:19.740 --> 00:23:20.700
- Yeah, that's amazing.

00:23:20.700 --> 00:23:21.940
One thing I just wanna give a shout out

00:23:21.940 --> 00:23:23.100
to that I came across recently,

00:23:23.100 --> 00:23:25.180
and that's interesting is Coolify.

00:23:25.180 --> 00:23:26.020
- Coolify.

00:23:26.020 --> 00:23:30.580
- Which is, it's self-hosted Heroku Netlify Vercel

00:23:30.580 --> 00:23:33.500
alternative, and you just get pushed to it.

00:23:33.500 --> 00:23:35.820
I don't know if it's better than this though,

00:23:35.820 --> 00:23:38.740
because you gotta have a decent server to run it on,

00:23:38.740 --> 00:23:41.060
and you gotta run the Docker stuff and whatnot

00:23:41.060 --> 00:23:42.180
to sort of do it.

00:23:42.180 --> 00:23:44.580
But yeah, anyway, speaking of interesting deployments.

00:23:44.580 --> 00:23:46.020
- Yeah, you're gonna manage also.

00:23:46.020 --> 00:23:49.100
Because the other day, I think it was 10 days ago,

00:23:49.100 --> 00:23:52.180
there was a DDOS attack, I think, against Railway

00:23:52.180 --> 00:23:56.620
for the European part of their network.

00:23:56.620 --> 00:23:58.860
But they were very quick jumping on it

00:23:58.860 --> 00:24:00.860
and managing all of that

00:24:00.860 --> 00:24:03.500
and doing all the mitigation against it.

00:24:03.500 --> 00:24:05.300
If you run your own service,

00:24:05.300 --> 00:24:07.780
then you've got to take care of all of that

00:24:07.780 --> 00:24:09.860
on your own security and all of that.

00:24:09.860 --> 00:24:12.700
- There's benefits, but there's also drawbacks there.

00:24:12.700 --> 00:24:14.540
All right, let's talk about,

00:24:14.540 --> 00:24:17.580
I think the right way to start talking about this,

00:24:17.580 --> 00:24:20.260
how you're using AI and the journey you went through.

00:24:20.260 --> 00:24:22.700
I mean, we've talked a lot about foundations already,

00:24:22.700 --> 00:24:24.260
but let's talk about your app.

00:24:24.260 --> 00:24:27.300
You mentioned a couple of times AI Jingle Maker.

00:24:27.300 --> 00:24:28.300
Tell people what it does.

00:24:28.300 --> 00:24:31.700
- It's a web app that you can find on AIJingleMaker.com.

00:24:31.700 --> 00:24:34.140
And if you enter the app,

00:24:34.140 --> 00:24:38.540
you can create your own sweepers, radio jingles,

00:24:38.540 --> 00:24:41.300
podcast intros, audio promos,

00:24:41.300 --> 00:24:44.980
as if you were playing with Lego bricks, I would say.

00:24:44.980 --> 00:24:48.580
It's not the usual DOE experience.

00:24:48.580 --> 00:24:52.580
If you'll be using things like GarageBand or FL Studio

00:24:52.580 --> 00:24:56.900
or Pro Tools to edit your audio,

00:24:56.900 --> 00:25:00.740
you can imagine those waves that you've got to move around

00:25:00.740 --> 00:25:03.540
to create your jingles or your sweepers.

00:25:03.540 --> 00:25:04.980
If you're using, for instance,

00:25:04.980 --> 00:25:08.620
the open source Audacity software also on your computer,

00:25:08.620 --> 00:25:09.780
you can do that.

00:25:09.780 --> 00:25:13.580
But still, you've got to know how to move these things around

00:25:13.580 --> 00:25:17.700
and how to play with the volume, the fade in, the fade out,

00:25:17.700 --> 00:25:21.660
the reverb, the chorus, the flanger, I mean, all the effects.

00:25:21.660 --> 00:25:24.620
And I mean, it's not that easy for many people.

00:25:24.620 --> 00:25:27.820
And so I thought that I could build something

00:25:27.820 --> 00:25:31.260
that made it as easy as pressing on a few buttons.

00:25:31.260 --> 00:25:34.460
That's the idea of the product.

00:25:34.460 --> 00:25:38.260
So the way you use it when you enter the product,

00:25:38.260 --> 00:25:41.020
you've got four different parts.

00:25:41.020 --> 00:25:44.340
You've got the intro, the background, the outro,

00:25:44.340 --> 00:25:47.460
and the voiceover, which is on top of the background.

00:25:47.460 --> 00:25:49.100
And the voiceover, you've got,

00:25:49.100 --> 00:25:51.140
now you've got three different options.

00:25:51.140 --> 00:25:53.820
You've got the possibility to record your own voice.

00:25:53.820 --> 00:25:58.380
So I rebuilt a voice recorder, an online voice recorder,

00:25:58.380 --> 00:26:00.540
where you can quickly record your voice,

00:26:00.540 --> 00:26:02.660
add a few effects, and then, boom,

00:26:02.660 --> 00:26:04.580
use that as your voiceover.

00:26:04.580 --> 00:26:07.420
You can also upload an existing recording

00:26:07.420 --> 00:26:08.420
that you have on your computer.

00:26:08.420 --> 00:26:10.340
So if you've got something that you recorded

00:26:10.340 --> 00:26:12.740
with FL Studio or something else,

00:26:12.740 --> 00:26:15.620
you can upload it and use it as a voiceover.

00:26:15.620 --> 00:26:17.020
Or you can use AI.

00:26:17.020 --> 00:26:21.300
So I'm connected to a bunch of text-to-speech API.

00:26:21.300 --> 00:26:23.700
So I didn't develop the models myself.

00:26:23.700 --> 00:26:27.580
I'm not someone smart enough to develop a foundational model,

00:26:27.580 --> 00:26:29.420
but I'm connected to the APIs,

00:26:29.420 --> 00:26:32.260
and you can pick one of the voices.

00:26:32.260 --> 00:26:35.740
You can write your text, generate the voiceover,

00:26:35.740 --> 00:26:38.780
and once you have the voiceover, you just select it.

00:26:38.780 --> 00:26:40.300
And when you have the voiceover,

00:26:40.300 --> 00:26:41.660
you choose a background behind it.

00:26:41.660 --> 00:26:44.980
So let's say groovy music, house music,

00:26:44.980 --> 00:26:47.260
rock music, romantic music, whatever.

00:26:47.260 --> 00:26:51.660
You've got some pre-made sounds in the app.

00:26:51.660 --> 00:26:53.940
You choose an intro, an outro,

00:26:53.940 --> 00:26:55.700
and then you press on generate jingle.

00:26:55.700 --> 00:26:57.540
And in five seconds, you've got the jingle.

00:26:57.540 --> 00:26:59.940
That's basically the idea.

00:26:59.940 --> 00:27:02.180
- I'll put in the jingle so people know

00:27:02.180 --> 00:27:04.180
exactly what this sounds like.

00:27:04.180 --> 00:27:05.340
I'll put it in right now.

00:27:05.340 --> 00:27:06.180
(electronic music)

00:27:06.180 --> 00:27:07.420
- Party time!

00:27:07.420 --> 00:27:08.980
This is Martin Superstar,

00:27:08.980 --> 00:27:11.980
your number one favorite DJ in New York City.

00:27:11.980 --> 00:27:16.460
- It's really cool, and it's something

00:27:16.460 --> 00:27:19.740
that I've seen people hire voiceover actors

00:27:19.740 --> 00:27:22.380
on like Fiverr and stuff like that.

00:27:22.380 --> 00:27:25.140
They'll maybe pay 30 bucks to have somebody

00:27:25.140 --> 00:27:27.940
do a couple of trials and throw some music on top of,

00:27:27.940 --> 00:27:29.220
or something like that, right?

00:27:29.220 --> 00:27:31.220
- And I'm a voiceover artist on Fiverr.

00:27:31.220 --> 00:27:32.820
I'm doing that also.

00:27:32.820 --> 00:27:34.860
So I know exactly what it is.

00:27:34.860 --> 00:27:36.700
- Let me see if I can automate my job away.

00:27:36.700 --> 00:27:39.100
- It was not really the idea of automating

00:27:39.100 --> 00:27:40.100
completely a job away.

00:27:40.100 --> 00:27:43.300
It was more like the, how can you create something

00:27:43.300 --> 00:27:47.300
that's self-service and that can meet the needs of people,

00:27:47.300 --> 00:27:50.020
as you said, who don't want to spend 50 bucks

00:27:50.020 --> 00:27:51.940
or 100 bucks for something,

00:27:51.940 --> 00:27:55.820
but who want to have an easy way to create

00:27:55.820 --> 00:27:58.780
basic sweepers, jingles, or some other things.

00:27:58.780 --> 00:28:03.780
And the first target was mostly indie radio stations

00:28:03.780 --> 00:28:06.340
or small podcasts.

00:28:06.340 --> 00:28:09.820
But then I saw many brands coming,

00:28:09.820 --> 00:28:12.100
like I wouldn't say, like not the big brands,

00:28:12.100 --> 00:28:15.060
but small brands coming, like apparel brands

00:28:15.060 --> 00:28:19.100
or coffee shops, or I had the other day,

00:28:19.100 --> 00:28:23.740
a bar in Ibiza signing up and paying for credits

00:28:23.740 --> 00:28:27.540
to generate a promo for the bar in Ibiza.

00:28:27.540 --> 00:28:31.620
So yeah, it's not only radio stations and podcasts.

00:28:31.620 --> 00:28:35.420
It's also anyone who wants to create a promo

00:28:35.420 --> 00:28:36.260
for their business.

00:28:36.260 --> 00:28:39.300
So that's also one of the services.

00:28:39.300 --> 00:28:42.740
And when I started, it was only short sweepers,

00:28:42.740 --> 00:28:45.580
jingles, radio station IDs, stuff like that.

00:28:45.580 --> 00:28:48.740
But then I added something which is called the promo maker,

00:28:48.740 --> 00:28:51.100
which you have in the jingle maker,

00:28:51.100 --> 00:28:52.340
where you can create something

00:28:52.340 --> 00:28:54.380
which is up to 30 seconds long.

00:28:54.380 --> 00:28:55.820
So more like a radio ad.

00:28:55.820 --> 00:28:58.740
That's an, and there you can also use AI.

00:28:58.740 --> 00:29:00.820
It's connected to open AI, to be honest,

00:29:00.820 --> 00:29:04.340
but you can also use AI to generate the text of your promo.

00:29:04.340 --> 00:29:06.700
So just put the name of your business,

00:29:06.700 --> 00:29:08.900
what you're selling, your service, your product.

00:29:08.900 --> 00:29:10.860
Then it will suggest the text.

00:29:10.860 --> 00:29:14.620
Then you choose the voice, generate the AI voice,

00:29:14.620 --> 00:29:16.580
and then you add the sounds and then it's finished.

00:29:16.580 --> 00:29:19.580
So let's say in 20 seconds, you've got a note you add.

00:29:19.580 --> 00:29:22.220
So that's the promise or the promo maker.

00:29:22.220 --> 00:29:24.220
- It's a cool app and it's really impressive

00:29:24.220 --> 00:29:27.100
to look at this and think that you built this

00:29:27.100 --> 00:29:29.620
with less than a year of Python

00:29:29.620 --> 00:29:31.900
or really any coding experience, right?

00:29:31.900 --> 00:29:32.980
Roughly that amount?

00:29:32.980 --> 00:29:34.940
- To put things really in perspective

00:29:34.940 --> 00:29:37.900
so that people know what they can expect

00:29:37.900 --> 00:29:41.140
if they start their coding journey.

00:29:41.140 --> 00:29:45.220
So I started coding in Python in September,

00:29:45.220 --> 00:29:48.380
September, October, 2022.

00:29:48.380 --> 00:29:49.620
For a few months, as I said,

00:29:49.620 --> 00:29:53.180
I was mostly coding scripts on my computer

00:29:53.180 --> 00:29:54.900
that helped me in my daily business

00:29:54.900 --> 00:29:56.700
because I didn't tell you in the beginning,

00:29:56.700 --> 00:29:59.300
but most of my activity, it's online marketing.

00:29:59.300 --> 00:30:02.380
It's working for startups and bigger companies also.

00:30:02.380 --> 00:30:05.220
So I need scripts, you know, to,

00:30:05.220 --> 00:30:07.620
for competitive intelligence, for SEO,

00:30:07.620 --> 00:30:10.100
for even content production, this type of thing.

00:30:10.100 --> 00:30:14.060
So I created a lot of scripts locally on my computer

00:30:14.060 --> 00:30:17.500
before considering the front end part.

00:30:17.500 --> 00:30:19.860
Then that's when I discovered Flask.

00:30:19.860 --> 00:30:23.460
That was just before the summer of 2023.

00:30:23.460 --> 00:30:27.020
And yes, the first version of the Jingle Maker

00:30:27.020 --> 00:30:29.740
that I launched, it was just on the home page.

00:30:29.740 --> 00:30:32.740
You couldn't basically tweak anything.

00:30:32.740 --> 00:30:35.300
There were just four different jingles

00:30:35.300 --> 00:30:37.500
and just put the name of your radio station.

00:30:37.500 --> 00:30:40.020
You press on generate and it generated one thing,

00:30:40.020 --> 00:30:41.300
the same for everyone.

00:30:41.300 --> 00:30:43.140
And it started getting some traction

00:30:43.140 --> 00:30:46.620
between May, 2023 and August.

00:30:46.620 --> 00:30:49.220
And then I said, okay, I'm gonna really dive

00:30:49.220 --> 00:30:53.220
into this project and develop something more sophisticated.

00:30:53.220 --> 00:30:58.220
I started working on that on a Monday in September.

00:30:58.220 --> 00:31:00.900
It was released on the Friday, the V2.

00:31:00.900 --> 00:31:05.100
- And I gotta tell you, your website now looks really nice.

00:31:05.100 --> 00:31:08.060
You've done a lot of good design work on it as well

00:31:08.060 --> 00:31:09.300
in the last couple of months.

00:31:09.300 --> 00:31:11.820
- Yeah, it has evolved because maybe you saw it

00:31:11.820 --> 00:31:15.100
for the first time when we decided to do this podcast.

00:31:15.100 --> 00:31:17.060
It was a white page.

00:31:17.060 --> 00:31:19.700
The logo was the same, but it was different.

00:31:19.700 --> 00:31:22.420
Originally, it was only in material design.

00:31:22.420 --> 00:31:27.420
I was using material design via the CDN from Google.

00:31:27.420 --> 00:31:30.420
But then I wanted to use Tailwind.

00:31:30.420 --> 00:31:33.380
The new version that you see is using Tailwind.

00:31:33.380 --> 00:31:37.620
So people might recognize the Tailwind vibe.

00:31:37.620 --> 00:31:40.660
And I worked quite a lot on this thing that, okay,

00:31:40.660 --> 00:31:42.980
we said it's audio, so people don't see it.

00:31:42.980 --> 00:31:44.900
But if you go on the website, you will see it.

00:31:44.900 --> 00:31:48.780
There is this rotating list of things

00:31:48.780 --> 00:31:51.980
that you can create with the product.

00:31:51.980 --> 00:31:54.020
It was inspired by some code that I found,

00:31:54.020 --> 00:31:55.900
but I had to retweak it for, you know,

00:31:55.900 --> 00:31:58.340
make it responsive and all of that.

00:31:58.340 --> 00:32:01.980
And you know, also a big shout out to my son, who is 18,

00:32:01.980 --> 00:32:03.780
you know, is learning Python a lot.

00:32:03.780 --> 00:32:06.340
He coded a few things recently.

00:32:06.340 --> 00:32:09.500
He's coding something to play darts at the moment,

00:32:09.500 --> 00:32:11.780
like to calculate the scores in darts.

00:32:11.780 --> 00:32:14.620
And two months ago, he said to me that,

00:32:14.620 --> 00:32:18.180
"Your site is nice, but it looks ugly.

00:32:18.180 --> 00:32:21.340
So could you make something that looks better?"

00:32:21.340 --> 00:32:25.180
I said, "Yeah, yeah, but you know, I kind of like it."

00:32:25.180 --> 00:32:27.460
I said, "No, no, no, no, no, no, no, that.

00:32:27.460 --> 00:32:29.300
It's not the way it should be.

00:32:29.300 --> 00:32:30.620
So do something better.

00:32:30.620 --> 00:32:31.460
I know you can do it."

00:32:31.460 --> 00:32:34.460
So that's why also we've got something

00:32:34.460 --> 00:32:37.940
which looks better today, thanks to my son, Maxim.

00:32:37.940 --> 00:32:40.300
- It's a huge improvement from where it started.

00:32:40.300 --> 00:32:41.620
So nice work on that.

00:32:41.620 --> 00:32:43.980
All right, let's talk about some of the techniques

00:32:43.980 --> 00:32:46.420
that you used here to, first of all,

00:32:46.420 --> 00:32:49.220
what LLM did you use to go on this journey?

00:32:49.220 --> 00:32:52.460
- When I started, I wasn't even aware of GitHub Copilot.

00:32:52.460 --> 00:32:55.580
So I started only with the ChatGPT.

00:32:55.580 --> 00:32:59.300
I was an early premium user of ChatGPT.

00:32:59.300 --> 00:33:01.900
So I started paying the 20 bucks very, very early

00:33:01.900 --> 00:33:03.660
for GPT+.

00:33:03.660 --> 00:33:05.580
So I started using ChatGPT.

00:33:05.580 --> 00:33:10.580
So basically switching between the ChatGPT UI and the IDE.

00:33:10.580 --> 00:33:14.060
I started using PyCharm.

00:33:14.060 --> 00:33:15.500
So that's the first one I used.

00:33:15.500 --> 00:33:19.300
So I was creating some code in ChatGPT

00:33:19.300 --> 00:33:23.060
and then jumping to PyCharm, test the code.

00:33:23.060 --> 00:33:25.420
And then if there was a bug, coming back to ChatGPT.

00:33:25.420 --> 00:33:26.740
So this back and forth journey.

00:33:26.740 --> 00:33:28.220
- You asked it at the beginning.

00:33:28.220 --> 00:33:29.540
How do I make a Flask app?

00:33:29.540 --> 00:33:31.620
Or what did you ask it in the beginning?

00:33:31.620 --> 00:33:33.460
Like, how do I make a Flask app?

00:33:33.460 --> 00:33:36.380
How do I make a Flask app that does audio?

00:33:36.380 --> 00:33:37.780
Like, what did you?

00:33:37.780 --> 00:33:40.020
- I knew that I wanted to use Flask.

00:33:40.020 --> 00:33:42.220
So the first thing that you would ask

00:33:42.220 --> 00:33:46.180
is to ask a ChatGPT for a boilerplate of a Flask web app.

00:33:46.180 --> 00:33:48.980
And it will give you pretty quickly

00:33:48.980 --> 00:33:51.020
the basic building blocks.

00:33:51.020 --> 00:33:53.460
I don't know if it would give you straight away

00:33:53.460 --> 00:33:56.020
the architecture with a template

00:33:56.020 --> 00:33:57.980
inside of the templates folder,

00:33:57.980 --> 00:34:00.820
but no, it gives you here.

00:34:00.820 --> 00:34:01.660
- Hello world.

00:34:01.660 --> 00:34:03.140
- Yeah, bring on hello world on the page.

00:34:03.140 --> 00:34:06.820
But then if you know that you need HTML,

00:34:06.820 --> 00:34:09.620
then you will ask a ChatGPT to tweak it

00:34:09.620 --> 00:34:14.460
to render index.html from the templates folder.

00:34:14.460 --> 00:34:17.140
And there you see, there it starts.

00:34:17.140 --> 00:34:20.060
And it gives you some boilerplate for the HTML

00:34:20.060 --> 00:34:21.980
that you put in the templates folder.

00:34:21.980 --> 00:34:25.420
And then you learn that you need,

00:34:25.420 --> 00:34:29.460
ideally to have some JavaScript in a JavaScript file

00:34:29.460 --> 00:34:32.020
and that you need some CSS in a CSS file.

00:34:32.020 --> 00:34:35.900
And that those two files will be in the static folder

00:34:35.900 --> 00:34:37.460
of a Flask web app.

00:34:37.460 --> 00:34:39.780
So now I've got, let's say my routine,

00:34:39.780 --> 00:34:41.580
I've got all of that ready.

00:34:41.580 --> 00:34:44.260
And if I start a new app,

00:34:44.260 --> 00:34:46.860
I don't even need, obviously, a ChatGPT.

00:34:46.860 --> 00:34:48.180
I just create my structure.

00:34:48.180 --> 00:34:53.180
I put index.html, script.js, styles.css.

00:34:53.420 --> 00:34:57.460
But then what you can also ask ChatGPT to do,

00:34:57.460 --> 00:35:00.500
for instance, is if you've got your HTML page,

00:35:00.500 --> 00:35:03.500
you can say, "Restyle this HTML page

00:35:03.500 --> 00:35:06.300
"with Tailwind CSS using the CDN," for instance,

00:35:06.300 --> 00:35:08.780
and it will give you a full restyling.

00:35:08.780 --> 00:35:10.180
And then you can ask it,

00:35:10.180 --> 00:35:13.420
"Okay, I want on this page four buttons,

00:35:13.420 --> 00:35:16.660
"and those four buttons should do X, Y, Z."

00:35:16.660 --> 00:35:21.500
And then you start moving into the JavaScript part of it

00:35:21.500 --> 00:35:24.740
for the interactions on the page.

00:35:24.740 --> 00:35:26.700
And the interesting thing maybe,

00:35:26.700 --> 00:35:30.620
which would explain also why I haven't really started

00:35:30.620 --> 00:35:34.100
using Next.js or Vue or things like that,

00:35:34.100 --> 00:35:36.540
is that by default, for some reason,

00:35:36.540 --> 00:35:38.860
you've got to ask OpenAI why,

00:35:38.860 --> 00:35:41.580
maybe because of some legacy importance

00:35:41.580 --> 00:35:42.900
of vanilla JavaScript.

00:35:42.900 --> 00:35:47.900
But if you ask ChatGPT to start creating some interactions

00:35:47.900 --> 00:35:50.860
on an HTML page, it won't just tell you,

00:35:50.860 --> 00:35:53.660
"Okay, you know, these days people use React

00:35:53.660 --> 00:35:55.780
"or Next.js or something like that,

00:35:55.780 --> 00:35:58.660
"so maybe you could, or you should consider that."

00:35:58.660 --> 00:36:01.100
It will go deep into vanilla JavaScript.

00:36:01.100 --> 00:36:05.780
And after developing the Jingle Maker for a few months,

00:36:05.780 --> 00:36:07.900
I showed it to my friend Alex,

00:36:07.900 --> 00:36:10.740
who is this developer I was talking about earlier,

00:36:10.740 --> 00:36:12.220
who has graduated, I would say,

00:36:12.220 --> 00:36:14.380
from vanilla JavaScript to React,

00:36:14.380 --> 00:36:15.900
and he looked at my code and said,

00:36:15.900 --> 00:36:17.820
"Man, that's crazy.

00:36:17.820 --> 00:36:19.780
"It's all vanilla JavaScript.

00:36:19.780 --> 00:36:21.940
"There's not a single line of React.

00:36:21.940 --> 00:36:23.900
"So everything in your app,

00:36:23.900 --> 00:36:26.380
"it's lines and lines and lines of JavaScript."

00:36:26.380 --> 00:36:29.060
- That's a benefit and a drawback.

00:36:29.060 --> 00:36:32.340
- He said that he would not even be able to write it

00:36:32.340 --> 00:36:34.940
this way from scratch today.

00:36:34.940 --> 00:36:37.620
That's not something that he would really consider doing

00:36:37.620 --> 00:36:39.540
because it's more verbose,

00:36:39.540 --> 00:36:41.260
there's more stuff to write

00:36:41.260 --> 00:36:43.260
to achieve what you want to achieve.

00:36:43.260 --> 00:36:46.860
But the thing is that with ChatGPT or today

00:36:46.860 --> 00:36:50.940
with a GitHub copilot embedded in the IDE,

00:36:50.940 --> 00:36:52.940
even if it's longer, that's not a problem

00:36:52.940 --> 00:36:55.500
because you don't write a single line of code.

00:36:55.500 --> 00:36:57.380
I think it's important to point that out

00:36:57.380 --> 00:36:59.940
is that in the Jingle Maker,

00:36:59.940 --> 00:37:03.780
there is not one single line of code that I wrote, not one.

00:37:03.780 --> 00:37:04.740
- That's insane.

00:37:04.740 --> 00:37:08.020
- There's not a single line of code that I typed

00:37:08.020 --> 00:37:11.820
from the first curly bracket to the last curly bracket.

00:37:11.820 --> 00:37:12.660
Nothing.

00:37:12.660 --> 00:37:14.380
Everything is written like that.

00:37:14.380 --> 00:37:15.540
Yesterday, for instance,

00:37:15.540 --> 00:37:18.220
I was working on something completely different now

00:37:18.220 --> 00:37:20.140
for a friend who is also a client

00:37:20.140 --> 00:37:22.820
who are working on a Gmail add-on.

00:37:22.820 --> 00:37:24.740
So I don't know if you're familiar with that,

00:37:24.740 --> 00:37:28.420
but you're using Apps Script from Google

00:37:28.420 --> 00:37:32.020
and then create a manifest and blah, blah.

00:37:32.020 --> 00:37:35.700
And I didn't know anything about Gmail add-ons

00:37:35.700 --> 00:37:37.860
until yesterday in the morning.

00:37:37.860 --> 00:37:40.620
And after now five hours of work,

00:37:40.620 --> 00:37:43.820
we've got a fully working product in Gmail.

00:37:43.820 --> 00:37:44.660
- That's amazing.

00:37:44.660 --> 00:37:46.420
- That's crazy, 2024.

00:37:46.420 --> 00:37:47.860
And it's only the beginning.

00:37:47.860 --> 00:37:51.980
I really see that evolving super fast.

00:37:51.980 --> 00:37:54.700
I think that now the most important thing

00:37:54.700 --> 00:37:56.660
is to be able to talk to the machine,

00:37:56.660 --> 00:37:58.860
to explain the structure,

00:37:58.860 --> 00:38:01.380
the architecture of what you expect,

00:38:01.380 --> 00:38:03.020
and to be clear in your head

00:38:03.020 --> 00:38:07.060
about the code has to be developed

00:38:07.060 --> 00:38:08.820
for the pages to interact,

00:38:08.820 --> 00:38:10.980
for the elements to interact together.

00:38:10.980 --> 00:38:12.900
And if it's clear in your head,

00:38:12.900 --> 00:38:15.860
and if you can explain it clearly to the LLM,

00:38:15.860 --> 00:38:17.060
it's just magic.

00:38:17.060 --> 00:38:17.900
- It is like magic.

00:38:17.900 --> 00:38:18.740
- Yeah. - Yeah.

00:38:18.740 --> 00:38:19.580
It's pretty wild.

00:38:19.580 --> 00:38:22.900
If you're a regular listener of the podcast,

00:38:22.900 --> 00:38:26.060
you surely heard about Talk Python's online courses,

00:38:26.060 --> 00:38:28.460
but have you had a chance to try them out?

00:38:28.460 --> 00:38:29.940
No matter the level you're looking for,

00:38:29.940 --> 00:38:31.460
we have a course for you.

00:38:31.460 --> 00:38:32.940
Our Python for Absolute Beginners

00:38:32.940 --> 00:38:34.740
is like an introduction to Python,

00:38:34.740 --> 00:38:36.500
plus that first year computer science course

00:38:36.500 --> 00:38:37.740
that you never took.

00:38:37.740 --> 00:38:39.540
Our data-driven web app courses

00:38:39.540 --> 00:38:42.780
build a full pypi.org clone

00:38:42.780 --> 00:38:44.740
along with you right on the screen.

00:38:44.740 --> 00:38:47.820
And we even have a few courses to dip your toe in with.

00:38:47.820 --> 00:38:50.500
See what we have to offer at training.talkpython.fm,

00:38:50.500 --> 00:38:52.820
or just click the link in your podcast player.

00:38:52.820 --> 00:38:55.740
So you can see on the side here,

00:38:55.740 --> 00:38:58.220
I have these really weird recent chats I had,

00:38:58.220 --> 00:39:00.420
like a skilled baker Q&A

00:39:00.420 --> 00:39:03.300
and survive a plane crash in the wilderness.

00:39:03.300 --> 00:39:04.820
And so these things are actually related.

00:39:04.820 --> 00:39:06.180
And what I was trying to do

00:39:06.220 --> 00:39:10.940
was I was trying to understand how much prompt engineering

00:39:10.940 --> 00:39:14.340
and sort of setting the stage for the questions matters.

00:39:14.340 --> 00:39:16.500
So like this one, I said,

00:39:16.500 --> 00:39:18.380
you are a very skilled baker.

00:39:18.380 --> 00:39:20.060
You have run a successful restaurant

00:39:20.060 --> 00:39:21.260
in the city for five years.

00:39:21.260 --> 00:39:23.180
Now I will ask you questions.

00:39:23.180 --> 00:39:25.300
As opposed to this one,

00:39:25.300 --> 00:39:27.300
you are a very skilled outdoorsman

00:39:27.300 --> 00:39:29.460
and you've been on multiple reality shows.

00:39:29.460 --> 00:39:30.540
Now I'll ask you some questions.

00:39:30.540 --> 00:39:32.180
And they were both the same question.

00:39:32.180 --> 00:39:34.620
If I'm in a plane crash and I need to survive,

00:39:34.620 --> 00:39:37.420
what do I, I wanted to see how much like the baker

00:39:37.420 --> 00:39:39.980
would focus on food and stuff

00:39:39.980 --> 00:39:41.900
versus the survivalist on others.

00:39:41.900 --> 00:39:43.100
And I feel like, you know,

00:39:43.100 --> 00:39:46.380
that's a real clear way to understand this kind of stuff

00:39:46.380 --> 00:39:48.380
in just a real general way.

00:39:48.380 --> 00:39:52.580
But I think there must be a code aspect of that as well.

00:39:52.580 --> 00:39:55.300
Like rather than just tell me how to do this in Python,

00:39:55.300 --> 00:39:58.540
like you have written this app in Python

00:39:58.540 --> 00:40:00.180
or you're an expert on FastAPI.

00:40:00.180 --> 00:40:01.500
Now I want to talk to you.

00:40:01.500 --> 00:40:03.260
You may get different results,

00:40:03.260 --> 00:40:04.820
maybe better, maybe worse, I don't know.

00:40:04.820 --> 00:40:07.060
But did you try any of this techniques

00:40:07.060 --> 00:40:08.740
or was it just straight down the middle?

00:40:08.740 --> 00:40:10.420
Tell me how to do this with Tailwind.

00:40:10.420 --> 00:40:11.580
- To be fair with you,

00:40:11.580 --> 00:40:14.580
because I was a total newbie in the beginning,

00:40:14.580 --> 00:40:18.300
I was making sure to ask the AI to explain to me

00:40:18.300 --> 00:40:22.020
almost as if I were a five-year-old, you know?

00:40:22.020 --> 00:40:22.940
- Yeah.

00:40:22.940 --> 00:40:25.100
- Because I could have told the AI,

00:40:25.100 --> 00:40:28.820
you're an expert Python developer

00:40:28.820 --> 00:40:31.180
and then just give me the code.

00:40:31.180 --> 00:40:33.580
But then I don't have all the explanations

00:40:33.580 --> 00:40:37.740
because then it behaves like an expert Python developer.

00:40:37.740 --> 00:40:40.980
And there are many shortcuts that it will take

00:40:40.980 --> 00:40:43.060
and not really give you all the details,

00:40:43.060 --> 00:40:44.220
documenting all the code.

00:40:44.220 --> 00:40:48.380
So I'm still more like in a,

00:40:48.380 --> 00:40:50.780
explain to me in layman's terms, you know?

00:40:50.780 --> 00:40:51.620
- Yeah.

00:40:51.620 --> 00:40:52.460
- How to do this.

00:40:52.460 --> 00:40:54.460
Because then also I understand the code.

00:40:54.460 --> 00:40:57.180
So it's easier for me to debug it.

00:40:57.180 --> 00:40:59.860
I usually take the analogy that when you said

00:40:59.860 --> 00:41:02.820
that sometimes you think it might be too late

00:41:02.820 --> 00:41:05.580
to learn to code or to learn to do something.

00:41:05.580 --> 00:41:07.420
Let's say that you want to learn to play music,

00:41:07.420 --> 00:41:08.580
to play the piano.

00:41:08.580 --> 00:41:10.980
At a certain age, it becomes very difficult

00:41:10.980 --> 00:41:13.460
because you don't have the reflex, the muscles,

00:41:13.460 --> 00:41:16.180
agility that you can have when you are a young kid

00:41:16.180 --> 00:41:18.060
to learn how to play the piano.

00:41:18.060 --> 00:41:21.500
But still you could understand what's on the score

00:41:21.500 --> 00:41:23.500
written on the page from the music.

00:41:23.500 --> 00:41:26.700
So in coding for me, it's kind of the same.

00:41:26.700 --> 00:41:28.220
I would, to be honest with you,

00:41:28.220 --> 00:41:30.940
I would not be able to write most of the code

00:41:30.940 --> 00:41:34.940
that is in my app myself, but I can read the score

00:41:34.940 --> 00:41:37.060
and I can see the connections

00:41:37.060 --> 00:41:40.220
between the different building blocks in the code.

00:41:40.220 --> 00:41:43.340
So I can understand if there's a problem,

00:41:43.340 --> 00:41:44.860
you know, a syntax issue,

00:41:44.860 --> 00:41:47.260
because there's some, you know, closing brackets

00:41:47.260 --> 00:41:48.780
that are not properly closed.

00:41:48.780 --> 00:41:50.100
I can see it.

00:41:50.100 --> 00:41:53.620
I wouldn't be able to write the code properly

00:41:53.620 --> 00:41:55.380
in the first place myself.

00:41:55.380 --> 00:41:57.220
You could argue it's a problem,

00:41:57.220 --> 00:42:01.420
but I say, you know, for me, the output is what matters.

00:42:01.420 --> 00:42:04.620
It's the final product, which is what matters.

00:42:04.620 --> 00:42:07.180
So as long as I understand what's on the screen,

00:42:07.180 --> 00:42:08.020
for me, it's okay.

00:42:08.020 --> 00:42:08.940
- Yeah, well, let's loop it back

00:42:08.940 --> 00:42:11.860
to the original way we started this.

00:42:11.860 --> 00:42:14.340
One way you could do this is you could hire people

00:42:14.340 --> 00:42:16.660
to build this for you, and then they give you the code

00:42:16.660 --> 00:42:17.700
and you're in the same position.

00:42:17.700 --> 00:42:19.340
Like here's a huge pile of code

00:42:19.340 --> 00:42:20.820
and you probably understand it.

00:42:20.820 --> 00:42:22.980
I'm sure you understand it less well

00:42:22.980 --> 00:42:25.980
than if you went through step by step and built,

00:42:25.980 --> 00:42:26.940
100% sure.

00:42:26.940 --> 00:42:29.300
- I was in that position a few times

00:42:29.300 --> 00:42:31.820
where I was involved in some projects

00:42:31.820 --> 00:42:35.780
and I was not involved in the actual coding of the project.

00:42:35.780 --> 00:42:39.060
And then I inherited the project.

00:42:39.060 --> 00:42:41.540
I mean, I had the code base, but I could, I mean,

00:42:41.540 --> 00:42:42.940
I could just put it on a shelf

00:42:42.940 --> 00:42:46.460
because I would not be able to do anything with that.

00:42:46.460 --> 00:42:49.820
Whereas now I understand every single section

00:42:49.820 --> 00:42:51.660
of what's written in the app.

00:42:51.660 --> 00:42:55.660
So at the moment I'm repurposing some of the payment logic

00:42:55.660 --> 00:42:57.740
because I will switch from Stripe to Paddle

00:42:57.740 --> 00:42:59.540
in the IJINGL maker.

00:42:59.540 --> 00:43:02.980
And yeah, so I've got to rebuild the payment models.

00:43:02.980 --> 00:43:06.940
I've got to rebuild the Flask route for the API endpoints

00:43:06.940 --> 00:43:09.180
for the payment confirmations and all of that.

00:43:09.180 --> 00:43:12.540
So I know where they are and I know what they do.

00:43:12.540 --> 00:43:14.940
So I know how to tweak them

00:43:14.940 --> 00:43:17.420
and I can highlight exactly what I want.

00:43:17.420 --> 00:43:21.140
And then now I'm using, I would say 75% of the time

00:43:21.140 --> 00:43:24.420
I'm using GitHub Copilot straight in the IDE directly

00:43:24.420 --> 00:43:25.940
because it's in context then.

00:43:25.940 --> 00:43:30.460
You highlight the code and then if the suggestion is nice

00:43:30.460 --> 00:43:33.900
you just insert it to replace the code.

00:43:33.900 --> 00:43:36.940
So yeah, once you've got something that you understand

00:43:36.940 --> 00:43:39.500
it goes faster and faster.

00:43:39.500 --> 00:43:41.380
- Yeah, and you're still early in this project, right?

00:43:41.380 --> 00:43:42.780
This is- - Yeah, super early.

00:43:42.780 --> 00:43:44.420
- Five, six months or something.

00:43:44.420 --> 00:43:45.260
- Like a baby.

00:43:45.260 --> 00:43:47.300
- Yes, I imagine as you do more of this

00:43:47.300 --> 00:43:49.220
you might not choose to write a lot of code

00:43:49.220 --> 00:43:51.900
but I bet you'll start to be able to write code

00:43:51.900 --> 00:43:53.660
kind of like language immersion.

00:43:53.660 --> 00:43:55.340
You know, if you move to Brazil

00:43:55.340 --> 00:43:57.180
you would start to learn Portuguese.

00:43:57.180 --> 00:43:58.020
- Yes.

00:43:58.020 --> 00:44:00.140
- Eventually just 'cause you're in that environment

00:44:00.140 --> 00:44:00.980
so much, you know?

00:44:00.980 --> 00:44:04.380
- But sometimes really, you know, with the suggestions

00:44:04.380 --> 00:44:09.380
it's, you wouldn't see why you would write the code.

00:44:09.380 --> 00:44:12.260
For instance, I had earlier today

00:44:12.260 --> 00:44:15.580
I was creating a scraper to check the technology used

00:44:15.580 --> 00:44:18.100
by different websites by looking in the source code

00:44:18.100 --> 00:44:21.460
for let's say WP for WordPress,

00:44:21.460 --> 00:44:23.580
Odoo for Odoo, Squarespace, Weebly,

00:44:23.580 --> 00:44:24.940
you know, this kind of thing.

00:44:24.940 --> 00:44:28.500
We just wrote together with the AI the first part

00:44:28.500 --> 00:44:30.780
and then we had to replicate the code

00:44:30.780 --> 00:44:35.300
in beautiful soup for the scraper for each of them.

00:44:35.300 --> 00:44:37.100
There's absolutely no reason

00:44:37.100 --> 00:44:39.420
why I would write each iteration.

00:44:39.420 --> 00:44:42.460
And once you write two of them,

00:44:42.460 --> 00:44:46.460
then you with Copilot, you just go with your tab

00:44:46.460 --> 00:44:50.700
to the next section and we understand that what you expect

00:44:50.700 --> 00:44:53.460
because you've got like three or four different technologies

00:44:53.460 --> 00:44:55.260
that you want to track in your code

00:44:55.260 --> 00:44:56.500
that you declared before,

00:44:56.500 --> 00:44:59.340
they would have to write a block of six lines.

00:44:59.340 --> 00:45:01.180
Boom, that's the block of six lines.

00:45:01.180 --> 00:45:03.020
There's no reason in the world

00:45:03.020 --> 00:45:05.620
why I would write those six lines, you know?

00:45:05.620 --> 00:45:06.460
- Amazing.

00:45:06.460 --> 00:45:07.380
- That's crazy, that's crazy.

00:45:07.380 --> 00:45:09.380
- One more prompt in engineering thing

00:45:09.380 --> 00:45:11.180
and you talked about it and I think it is a problem.

00:45:11.180 --> 00:45:14.780
So I asked basically what's the boiler plate

00:45:14.780 --> 00:45:16.660
and it said, boom, here's the boiler plate

00:45:16.660 --> 00:45:18.220
for Flask and ChatGPT.

00:45:18.220 --> 00:45:19.940
Then I said, well, how do I use a template?

00:45:19.940 --> 00:45:22.180
And it said, boom, here's the two pieces of code.

00:45:22.180 --> 00:45:25.140
And you said, sometimes this can be really challenging.

00:45:25.140 --> 00:45:26.900
You said one of the techniques used

00:45:26.900 --> 00:45:28.940
was to explain to me like a five-year-old.

00:45:28.940 --> 00:45:31.380
Another thing that works really well is I just said,

00:45:31.380 --> 00:45:34.460
tell me this again, let's think step by step.

00:45:34.460 --> 00:45:37.220
And it gave me a 10 step process.

00:45:37.220 --> 00:45:40.340
Start one, install Flask, create a project directory,

00:45:40.340 --> 00:45:42.900
create the project script, import Flask.

00:45:42.900 --> 00:45:45.060
And it was really much more like

00:45:45.060 --> 00:45:47.100
this is what each step you need to do.

00:45:47.100 --> 00:45:49.100
And things like that are really neat.

00:45:49.100 --> 00:45:50.300
When you really start learning,

00:45:50.300 --> 00:45:52.380
it's nice to do it step by step

00:45:52.380 --> 00:45:54.980
because some people they don't understand

00:45:54.980 --> 00:45:56.780
and that's quite normal.

00:45:56.780 --> 00:46:01.020
I would say that you've got to install those libraries

00:46:01.020 --> 00:46:04.940
before using them, simple things like that.

00:46:04.940 --> 00:46:08.100
So in the beginning, it's nice to go step by step.

00:46:08.100 --> 00:46:08.940
- It's really powerful.

00:46:08.940 --> 00:46:11.540
And it's something people can check out.

00:46:11.540 --> 00:46:15.300
There's a cool video, that's your channel, this one.

00:46:15.300 --> 00:46:16.140
- Yeah.

00:46:16.140 --> 00:46:18.340
- Prompt Engineering 101 by Patrick LeVere.

00:46:18.340 --> 00:46:20.420
And yeah, it's like a 14 minute video,

00:46:20.420 --> 00:46:22.500
talks to you, has a bunch of advice

00:46:22.500 --> 00:46:24.300
from places like Anthropic and others.

00:46:24.300 --> 00:46:27.700
And like, here is how you go and some things you can try.

00:46:27.700 --> 00:46:29.300
- It's also evolving.

00:46:29.300 --> 00:46:32.580
Thanks also to the longer context windows

00:46:32.580 --> 00:46:34.780
that we have today in DLLM.

00:46:34.780 --> 00:46:39.780
Because when I started doing that in 2022,

00:46:39.780 --> 00:46:43.700
the context window was maximum 4,000 tokens

00:46:43.700 --> 00:46:44.700
or something like that.

00:46:44.700 --> 00:46:47.820
So you had to really go by short section.

00:46:47.820 --> 00:46:51.540
It was very difficult to debug long pieces of code,

00:46:51.540 --> 00:46:52.900
long sections of code.

00:46:52.900 --> 00:46:57.900
Now the token window is 128,000 on OpenAI

00:46:57.900 --> 00:47:01.060
and even longer on Cloud or other LLMs.

00:47:01.060 --> 00:47:05.580
Today it's possible to basically throw at some point

00:47:05.580 --> 00:47:10.580
750 lines of code in a 1,000 lines of code in DLLM

00:47:10.580 --> 00:47:14.300
and get some refactoring, debugging.

00:47:14.300 --> 00:47:15.940
That's also really amazing.

00:47:15.940 --> 00:47:19.220
When you need, let's say, you know that you created

00:47:19.220 --> 00:47:21.820
something cool in one app, some business logic,

00:47:21.820 --> 00:47:24.020
something interesting, but you know that you want

00:47:24.020 --> 00:47:26.300
to just repurpose it in a small way,

00:47:26.300 --> 00:47:27.980
like make little tweaks.

00:47:27.980 --> 00:47:31.060
You just throw all the code into DLLM

00:47:31.060 --> 00:47:33.460
and you just explain the little changes that you want

00:47:33.460 --> 00:47:37.300
and it will give you the adapted code fully functional

00:47:37.300 --> 00:47:40.220
in one go, one shot, which is also impressive.

00:47:40.220 --> 00:47:41.580
- That is super impressive.

00:47:41.580 --> 00:47:43.820
So it sounds like you use Google Copilot a lot.

00:47:43.820 --> 00:47:45.900
Have you looked at GPT Engineer?

00:47:45.900 --> 00:47:46.740
- Nope.

00:47:46.740 --> 00:47:48.700
- So I haven't really either, but it basically,

00:47:48.700 --> 00:47:52.100
it's supposed to be kind of an iterative thing that goes,

00:47:52.100 --> 00:47:55.260
it will generate all the multiple files for you

00:47:55.260 --> 00:47:59.300
and then like try to understand how all those pieces

00:47:59.300 --> 00:48:00.660
fit together and work.

00:48:00.660 --> 00:48:01.500
And so-

00:48:01.500 --> 00:48:03.900
- More like an agent logic.

00:48:03.900 --> 00:48:05.780
- Yeah, exactly, exactly.

00:48:05.780 --> 00:48:07.060
So, but pretty.

00:48:07.060 --> 00:48:10.180
- I started working with the GPTs from OpenAI,

00:48:10.180 --> 00:48:11.380
from ChatGPT.

00:48:11.380 --> 00:48:13.260
I created a few of them.

00:48:13.260 --> 00:48:15.300
It was a funny one, for instance,

00:48:15.300 --> 00:48:18.420
I'm working for an accounting firm for some marketing

00:48:18.420 --> 00:48:23.260
and the boss of the company sent me a document

00:48:23.260 --> 00:48:27.540
of 350 pages explaining the accounting module on Odu,

00:48:27.540 --> 00:48:30.340
which is a ERP system two weeks ago.

00:48:30.340 --> 00:48:32.140
And he said, "Oh, you should read that

00:48:32.140 --> 00:48:33.860
"to be able to understand it

00:48:33.860 --> 00:48:35.860
"and answer questions about the module."

00:48:35.860 --> 00:48:38.580
And I just threw it into ChatGPT,

00:48:38.580 --> 00:48:41.380
uploaded the PDF and I created a custom GPT.

00:48:41.380 --> 00:48:43.860
So now I can ask the custom GPT questions

00:48:43.860 --> 00:48:46.060
about the accounting module.

00:48:46.060 --> 00:48:46.900
So-

00:48:46.900 --> 00:48:47.740
- Oh, that's insane.

00:48:47.740 --> 00:48:49.260
- Instead of reading the...

00:48:49.260 --> 00:48:52.700
And also another nice use case that I have,

00:48:52.700 --> 00:48:54.100
it's nothing about coding,

00:48:54.100 --> 00:48:57.020
but sometimes you're just on YouTube

00:48:57.020 --> 00:48:58.780
and someone tells you,

00:48:58.780 --> 00:49:01.580
this is the five big important things

00:49:01.580 --> 00:49:03.460
you have to know in 2024,

00:49:03.460 --> 00:49:05.340
which would change your life forever.

00:49:05.340 --> 00:49:08.660
So I'm tempted, maybe I will watch this video

00:49:08.660 --> 00:49:10.500
because it might be interesting.

00:49:10.500 --> 00:49:13.060
But I'm gonna say, no, it's probably not that interesting.

00:49:13.060 --> 00:49:14.380
It's probably a lot of fluff.

00:49:14.380 --> 00:49:19.340
So now usually what I do is that I've got a website called,

00:49:19.340 --> 00:49:20.780
I don't remember the name, sorry,

00:49:20.780 --> 00:49:24.500
but one of the websites where you can get the transcript

00:49:24.500 --> 00:49:26.300
of a video.

00:49:26.300 --> 00:49:29.580
So I go get the transcript, throw it into ChatGPT.

00:49:29.580 --> 00:49:32.740
And then I ask, what are the five important things

00:49:32.740 --> 00:49:36.220
I should know that would change my life forever in 24?

00:49:36.220 --> 00:49:37.700
And then I've got them in five seconds.

00:49:37.700 --> 00:49:40.460
I don't need to watch a 35 minutes video.

00:49:40.460 --> 00:49:42.660
- And then maybe you decide to watch it later.

00:49:42.660 --> 00:49:43.500
- Maybe, maybe.

00:49:43.500 --> 00:49:44.780
- You can filter it, right?

00:49:44.780 --> 00:49:46.020
Yeah, awesome.

00:49:46.020 --> 00:49:47.820
What an interesting story, Fred.

00:49:47.820 --> 00:49:49.140
I think maybe we should wrap it up,

00:49:49.140 --> 00:49:52.340
but people can check out AIjinglemaker.com.

00:49:52.340 --> 00:49:53.780
I'll put that in the show notes.

00:49:53.780 --> 00:49:57.020
There's two other things from you that are noteworthy.

00:49:57.020 --> 00:49:59.900
One is you have your AI Coding Club newsletter.

00:49:59.900 --> 00:50:00.860
Do you wanna tell people about that?

00:50:00.860 --> 00:50:02.540
- Yeah, that's a newsletter I started,

00:50:02.540 --> 00:50:04.900
which is connected to some of the videos

00:50:04.900 --> 00:50:06.660
I posted on YouTube,

00:50:06.660 --> 00:50:09.860
where I would explain to people how to use AI

00:50:09.860 --> 00:50:11.420
for coding purposes.

00:50:11.420 --> 00:50:13.700
I will start sending the newsletters soon, actually.

00:50:13.700 --> 00:50:15.660
I started registering people,

00:50:15.660 --> 00:50:17.940
but I haven't sent the first edition yet,

00:50:17.940 --> 00:50:20.020
but I will start very soon.

00:50:20.020 --> 00:50:23.340
I've got also a new app, as I said, coming up,

00:50:23.340 --> 00:50:24.460
probably within two weeks.

00:50:24.460 --> 00:50:26.820
It will be called the AI Showmaker.

00:50:26.820 --> 00:50:28.580
It's a way to create a podcast

00:50:28.580 --> 00:50:31.060
or a radio show with building blocks.

00:50:31.060 --> 00:50:33.780
So it's the same concept as the Jinglemaker,

00:50:33.780 --> 00:50:35.500
but for longer form.

00:50:35.500 --> 00:50:36.700
- That sounds really interesting.

00:50:36.700 --> 00:50:37.540
All right, cool.

00:50:37.540 --> 00:50:38.380
People can check it out here.

00:50:38.380 --> 00:50:40.460
And by the way, I've been thinking a lot

00:50:40.460 --> 00:50:42.900
about email and newsletters and stuff.

00:50:42.900 --> 00:50:46.460
I was doing a bunch with MailChimp for many, many years,

00:50:46.460 --> 00:50:49.660
and it's just got to be super, super expensive,

00:50:49.660 --> 00:50:50.900
and I got frustrated with them.

00:50:50.900 --> 00:50:54.540
So did a bunch of research on different platforms,

00:50:54.540 --> 00:50:56.420
looked at buttondown.email,

00:50:56.420 --> 00:50:58.940
and actually chose ListMonk,

00:50:58.940 --> 00:51:01.740
which is self-hosted and Docker style thing.

00:51:01.740 --> 00:51:05.260
But one of the ones that I came across at the end is Beehive,

00:51:05.260 --> 00:51:06.340
which looks pretty interesting.

00:51:06.340 --> 00:51:07.300
Are you happy with Beehive?

00:51:07.300 --> 00:51:08.980
- It's more competing with Substack.

00:51:08.980 --> 00:51:11.420
I think it was co-created by one of the guys

00:51:11.420 --> 00:51:15.300
who co-founded Morning Brew, the newsletter Morning Brew.

00:51:15.300 --> 00:51:17.540
So he knows what he's talking about.

00:51:17.540 --> 00:51:20.260
And it's really, also really well coded,

00:51:20.260 --> 00:51:22.100
really well executed.

00:51:22.100 --> 00:51:24.100
It's a pleasure to use.

00:51:24.100 --> 00:51:29.100
And you can use it for free for up to 2,500 subscribers.

00:51:29.100 --> 00:51:30.820
Yeah, that's it.

00:51:30.820 --> 00:51:31.860
So yeah, it's a good one.

00:51:31.860 --> 00:51:34.620
- The pricing is way, way better than things

00:51:34.620 --> 00:51:36.500
like MailChimp and stuff.

00:51:36.500 --> 00:51:37.620
So it's nice.

00:51:37.620 --> 00:51:41.540
Also cheaper than Substack.

00:51:41.540 --> 00:51:46.300
So I don't know which cut they take from the subscription

00:51:46.300 --> 00:51:47.740
if you run a premium newsletter,

00:51:47.740 --> 00:51:49.420
but it's much cheaper than Substack.

00:51:49.420 --> 00:51:53.980
I think Substack takes 10% from like Patreon

00:51:53.980 --> 00:51:55.100
and other platform like that.

00:51:55.100 --> 00:51:55.940
- Nice.

00:51:55.940 --> 00:52:00.060
All right, and then one other thing is your, call me Fred.

00:52:00.060 --> 00:52:01.060
- YouTube channel, yeah.

00:52:01.060 --> 00:52:03.420
I've got some videos there.

00:52:03.420 --> 00:52:05.420
Some of the videos are explaining how to use

00:52:05.420 --> 00:52:07.180
the Jingle Maker, the recent ones,

00:52:07.180 --> 00:52:10.860
but also some of them are about this journey

00:52:10.860 --> 00:52:14.180
of how to code with AI.

00:52:14.180 --> 00:52:16.100
There are some concrete examples also,

00:52:16.100 --> 00:52:20.780
like I coded recently a Chrome extension,

00:52:20.780 --> 00:52:23.220
a bookmarking Chrome extension, all the code.

00:52:23.220 --> 00:52:27.740
The explanations is on YouTube and the code on GitHub.

00:52:27.740 --> 00:52:29.860
So I've got different projects like that.

00:52:29.860 --> 00:52:33.380
And yeah, I'm usually documenting what I do on YouTube.

00:52:33.380 --> 00:52:34.220
- Yeah, nice.

00:52:34.220 --> 00:52:35.220
So people can check that out.

00:52:35.220 --> 00:52:36.060
All right.

00:52:36.060 --> 00:52:38.260
Well, I think that about does it

00:52:38.260 --> 00:52:40.260
for the time that we got together,

00:52:40.260 --> 00:52:42.020
but thanks for coming on and sharing your story.

00:52:42.020 --> 00:52:43.420
I think it'll inspire a lot of folks.

00:52:43.420 --> 00:52:44.260
- Thank you.

00:52:44.260 --> 00:52:45.780
I hope that everything was clear,

00:52:45.780 --> 00:52:49.540
that I wasn't cursed to be too cryptic,

00:52:49.540 --> 00:52:51.380
like the developers I was talking about,

00:52:51.380 --> 00:52:55.780
but yeah, so it's really exciting.

00:52:55.780 --> 00:52:59.140
It's rejuvenating, as you could say.

00:52:59.140 --> 00:53:01.420
- It's opening up a whole world of possibilities, right?

00:53:01.420 --> 00:53:04.620
- I wish I would have started earlier, to be honest,

00:53:04.620 --> 00:53:06.860
because when I see my son, he's 18,

00:53:06.860 --> 00:53:11.860
and what he already does today with Python,

00:53:11.860 --> 00:53:13.820
that's quite amazing.

00:53:13.820 --> 00:53:15.020
So when you're 18,

00:53:15.020 --> 00:53:19.180
imagine where you will be when you will be 48 or 49.

00:53:19.180 --> 00:53:21.540
It will be like really good.

00:53:21.540 --> 00:53:23.740
So yeah, that's the beauty.

00:53:23.740 --> 00:53:24.580
That's the beauty of it.

00:53:24.580 --> 00:53:26.700
So don't wait too long if you're young,

00:53:26.700 --> 00:53:28.100
if you're listening to the podcast,

00:53:28.100 --> 00:53:30.060
start today or yesterday even.

00:53:30.060 --> 00:53:30.900
- Yeah. - It's amazing.

00:53:30.900 --> 00:53:31.740
- Awesome.

00:53:31.740 --> 00:53:32.580
Well, totally agree.

00:53:32.580 --> 00:53:34.260
Thanks so much for being here.

00:53:34.260 --> 00:53:35.460
And see you later.

00:53:35.460 --> 00:53:36.460
- Thank you so much.

00:53:36.460 --> 00:53:37.900
Bye-bye. - Bye.

00:53:37.900 --> 00:53:41.180
This has been another episode of "Talk Python to Me."

00:53:41.180 --> 00:53:42.620
Thank you to our sponsors.

00:53:42.620 --> 00:53:43.980
Be sure to check out what they're offering.

00:53:43.980 --> 00:53:45.620
It really helps support the show.

00:53:45.620 --> 00:53:51.300
Mailtrap, an email delivery platform that developers love.

00:53:51.300 --> 00:53:54.380
Try for free at mailtrap.io.

00:53:54.380 --> 00:53:57.140
Want to level up your Python?

00:53:57.140 --> 00:53:58.900
We have one of the largest catalogs

00:53:58.900 --> 00:54:01.260
of Python video courses over at Talk Python.

00:54:01.260 --> 00:54:03.300
Our content ranges from true beginners

00:54:03.300 --> 00:54:06.260
to deeply advanced topics like memory and async.

00:54:06.260 --> 00:54:08.940
And best of all, there's not a subscription in sight.

00:54:08.940 --> 00:54:12.140
Check it out for yourself at training.talkpython.fm.

00:54:12.140 --> 00:54:13.740
Be sure to subscribe to the show.

00:54:13.740 --> 00:54:16.740
Open your favorite podcast app and search for Python.

00:54:16.740 --> 00:54:18.100
We should be right at the top.

00:54:18.100 --> 00:54:20.980
You can also find the iTunes feed at /itunes,

00:54:20.980 --> 00:54:23.180
the Google Play feed at /play,

00:54:23.180 --> 00:54:27.620
and the direct RSS feed at /rss on talkpython.fm.

00:54:27.620 --> 00:54:30.220
We're live streaming most of our recordings these days.

00:54:30.220 --> 00:54:31.380
If you want to be part of the show

00:54:31.380 --> 00:54:33.660
and have your comments featured on the air,

00:54:33.660 --> 00:54:35.500
be sure to subscribe to our YouTube channel

00:54:35.500 --> 00:54:38.740
at talkpython.fm/youtube.

00:54:38.740 --> 00:54:40.140
This is your host, Michael Kennedy.

00:54:40.140 --> 00:54:41.300
Thanks so much for listening.

00:54:41.300 --> 00:54:42.540
I really appreciate it.

00:54:42.540 --> 00:54:45.060
Now get out there and write some Python code.

00:54:45.060 --> 00:54:47.640
(upbeat music)

00:55:03.120 --> 00:55:06.140
For more information drop us a line at www.freebiblecommentary.org

