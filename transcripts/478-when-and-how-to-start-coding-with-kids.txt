00:00:00 Do you have kids?

00:00:01 Maybe you have nieces or nephews?

00:00:03 Or do you work in a school environment?

00:00:04 Maybe it's just friends who know your programmer and ask about how they should go about introducing

00:00:08 programming concepts to their kids.

00:00:11 Annalena Popquez is back on the show to share her research on when and how to teach kids

00:00:16 programming.

00:00:18 We spend the second half of this episode talking about concrete apps and toys you might consider

00:00:23 for each age group.

00:00:25 Plus, some of these are fun for adults too.

00:00:27 This is Talk Python to Me, episode 478, recorded August 8th, 2024.

00:00:34 Are you ready for your host, please?

00:00:37 You're listening to Michael Kennedy on Talk Python to Me.

00:00:40 Live from Portland, Oregon, and this segment was made with Python.

00:00:44 Welcome to Talk Python to Me, a weekly podcast on Python.

00:00:51 This is your host, Michael Kennedy.

00:00:53 Follow me on Mastodon, where I'm @mkennedy, and follow the podcast using @talkpython,

00:00:58 both accounts over at fosstodon.org.

00:01:01 And keep up with the show and listen to over nine years of episodes at talkpython.fm.

00:01:06 If you want to be part of our live episodes, you can find the live streams over on YouTube.

00:01:11 Subscribe to our YouTube channel over at talkpython.fm/youtube and get notified about upcoming shows.

00:01:17 This episode is brought to you by WorkOS.

00:01:20 If you're building a B2B SaaS app, at some point, your customers will start asking for

00:01:24 enterprise features like SAML authentication, SCIM provisioning, audit logs, and fine-grained

00:01:29 authorization.

00:01:30 WorkOS helps ship enterprise features on day one without slowing down your core product

00:01:36 development.

00:01:37 Find out more at talkpython.fm/workos.

00:01:41 And it's brought to you by us over at Talk Python Training.

00:01:44 Did you know that we have over 270 hours of Python courses?

00:01:48 Yeah, that's right.

00:01:49 Check them out at talkpython.fm/courses.

00:01:54 Anna Lena, welcome back to Talk Python to me.

00:01:56 It's awesome to have you here.

00:01:57 Yeah, thanks for having me again.

00:01:58 Yeah, it's always fun to have you on.

00:02:00 You've got interesting and playful topics.

00:02:03 I think the very first time that you were on the show, I can't remember how many years

00:02:07 ago, but it's been a little while, was to talk about learning Python through Harry Potter.

00:02:12 Is that right?

00:02:13 In the magical universe.

00:02:14 Yeah.

00:02:15 I still love that project a lot.

00:02:16 People can find that on GitHub and they obviously can find that episode on talkpython.fm.

00:02:21 But we're back for, I would say, another playful episode in a sense, right?

00:02:26 Continuing the theme, I'm going to talk about when should you teach kids to program and

00:02:32 maybe even more importantly, what are some age appropriate resources that spans a good

00:02:37 chunk of what a kid's life is?

00:02:39 You know, like a kid, not a kid at 18, I don't know, but lower than that, a lot of resources.

00:02:44 Exactly.

00:02:45 So that's going to be a lot of fun.

00:02:46 It has been a while since you've been on the show though.

00:02:48 So just a quick introduction about who you are and what you do for everyone listening.

00:02:53 Yeah, actually not much has changed since the last episode.

00:02:55 I think that was on Python packaging.

00:02:58 I'm still a senior machine learning engineer at a German company called Innovex, where

00:03:02 I jump from project to project.

00:03:04 I'm currently working at the speech recognition team at Bubble still.

00:03:08 Was that last time as well?

00:03:10 I'm not sure.

00:03:11 I think so.

00:03:12 I believe so.

00:03:13 Yes.

00:03:14 Yeah.

00:03:15 So that's a really interesting topic.

00:03:16 And yeah, I love Python.

00:03:17 We have talked about different topics over the years and this time it's on children and

00:03:23 talk I prepared for PyData and the PyCon here in Germany.

00:03:27 And I was really, it was lots of fun to learn about it.

00:03:30 Yeah.

00:03:31 It looks like you did a lot of research.

00:03:32 I did.

00:03:33 I think it's probably worth pointing out that we both are parents.

00:03:37 And so we have some interest in this topics, you know, close to home as well.

00:03:42 My kids are getting a little bit older for any of this kind of guidance, but still, you

00:03:47 know, a lot of things I thought about as they were growing up and some of these things we're

00:03:51 going to talk about I've actually used, you know, before I saw them on your list as well,

00:03:55 which is cool, but yeah, it's a personal topic, I suppose.

00:03:58 Yeah, absolutely.

00:03:59 For me, it's also personal because I did not have any coding opportunities growing up myself.

00:04:03 I really want this to be different for children growing up now and my own kids.

00:04:08 That's also a reason why I wanted to do the research so that it would be just different.

00:04:13 Let me know what you think.

00:04:14 I feel like there are social stigmas, like this person should be a coder and that person

00:04:19 shouldn't be a coder.

00:04:20 They should go do something else.

00:04:22 And that may or may not be around gender, but often it is, unfortunately.

00:04:27 But when you're six years old, you don't care.

00:04:29 You like games.

00:04:30 You want to play a game.

00:04:31 You want to explore.

00:04:32 Things are interesting.

00:04:33 Right.

00:04:34 And that also has a big opportunity to short circuit these unnecessary influences, I guess,

00:04:40 depending on different cultures.

00:04:42 And also just having it in your environment.

00:04:44 If there's like a person in your family or your friend circle or even at school and you

00:04:49 have some opportunity to learn about it, it helps a lot.

00:04:52 For me, it just wasn't a topic ever.

00:04:56 And I still remember my parents when I told them that I was switched to computer science

00:04:59 in my graduate degree.

00:05:00 They were like, "Are you sure you want to do that?

00:05:03 Isn't that like very nerdy, techie stuff?" And I'm so happy I did the switch, even though it was quite hard in the beginning.

00:05:11 But it's an amazing topic and there's so much cool stuff to do.

00:05:14 It's just not only the nerdy stuff.

00:05:16 It's always got something new.

00:05:18 That's both the benefit and the curse of it.

00:05:20 What you've learned is powerful and helpful, but there's more to learn.

00:05:23 Yeah, always.

00:05:24 But that makes, like, keeps it interesting.

00:05:26 Right.

00:05:27 You never get bored.

00:05:28 Exactly.

00:05:29 Especially in JavaScript.

00:05:30 Okay.

00:05:31 So I feel like as your parents had that thought, you know, probably one thing they may have

00:05:35 thought, I don't know, obviously I don't know them, but a lot of people would think is that's

00:05:40 a very antisocial sort of thing, right?

00:05:42 Like, "Oh, you're going into programming.

00:05:44 That means you're going to sit behind a computer screen completely alone and not talk to people."

00:05:48 And I think that's one of the misconceptions of programming.

00:05:51 Yeah, absolutely.

00:05:52 Even now when I'm working remotely, most of the time I have so many meetings and collaborations

00:05:58 with other developers and I don't ever feel not part of my team, even if I don't see them

00:06:03 because we interact so much.

00:06:05 Sometimes they sit on a completely different continent and it still feels very close and

00:06:10 we do love and we don't only pair code, but we like, yeah, you get to know them well.

00:06:16 And it's lots of fun, interesting people that are not the stereotype of coders at all.

00:06:23 Yeah, absolutely.

00:06:24 I bring that up because I think some people listening might be attracted to the show who

00:06:27 don't necessarily work as programmers themselves.

00:06:30 I can recommend it a lot.

00:06:32 I think it's a lot of fun.

00:06:34 Absolutely.

00:06:35 All right.

00:06:36 Well, we talked about some of the reasons that we're interested in this, obviously,

00:06:40 but why?

00:06:41 I mean, as people who like programming, we may want to communicate or share that thing

00:06:47 we like with other kids, with our kids and so on.

00:06:50 But I think programming also can stand in for a lot of more traditional things such

00:06:55 as geometry and so on.

00:06:57 I think what I like most about it is that you can really make things.

00:07:01 You can see them come alive and it can be a game, it can be something more math related,

00:07:07 it could be music, websites.

00:07:09 You can just create anything that you're interested in and even have so much fun seeing it come

00:07:15 to life.

00:07:16 So it's not just learning a skill, maybe for a job or your life at home or your hobbies,

00:07:22 but it's more of like being able to create anything that you're interested in.

00:07:26 And then, of course, you have the obvious advantages like the career opportunities and

00:07:31 lots of skills that are taught by learning how to code that you do not think about in

00:07:36 the beginning, I guess.

00:07:37 Yeah, absolutely.

00:07:38 The realism or I've created something I can see even though it's still digital and virtual

00:07:43 and you can't actually touch it usually unless it's like robotic or something.

00:07:46 But that's so much more realistic and interactive than things like, oh, you're going to learn

00:07:51 these axioms and then we're going to teach you how to prove stuff about angles and triangles

00:07:58 with these axioms.

00:07:59 It's going to teach you logical thinking.

00:08:01 So sit down for the year and we're going to talk about small angles, big angles, diagonal,

00:08:07 cross connected, all that kind of stuff, right?

00:08:10 Which is a little bit useful, but being able to work with computers is way more.

00:08:13 And I think it teaches these problem solving and computational thinking skills at least

00:08:18 as well.

00:08:19 Yeah, absolutely.

00:08:20 And especially what you said, like problem solving, logical thinking that kids, like

00:08:24 not only adults, but kids especially, they understand that you might have a complex problem

00:08:29 you want to solve, but you can break it down into simpler steps, like what an algorithm

00:08:33 is actually doing, giving you a step by step path to reaching a goal.

00:08:38 You can teach that not only by coding also, of course, by just playing and seeing you

00:08:43 want to build this huge Lego piece, but you start building it with little pieces and put

00:08:49 it all together.

00:08:50 And that's also what you have in coding.

00:08:51 You want to reach a goal, you want to program a game or maybe create an animation and you

00:08:57 understand how to break it down.

00:08:59 It helps us or also kids to make more structured decisions.

00:09:02 I think that's a very valuable skill to learn, not only for coding, but for everyday life,

00:09:06 I guess.

00:09:07 Being able to break problems down and solve them.

00:09:09 It helps.

00:09:10 That's like adulthood right there.

00:09:11 What I also find really helpful is one of the skills I looked at specifically is perseverance.

00:09:17 Also for kids, they get frustrated so easily and give up and say like, "This is not working.

00:09:22 I don't like this.

00:09:23 I hate this." And start throwing their toys around.

00:09:26 At least we are at this stage.

00:09:28 Your kids are probably not doing that anymore.

00:09:31 But yeah, I think with coding, when you encourage them to keep going, even or especially when

00:09:37 they fail, that they understand that failure isn't something bad, but rather it keeps you

00:09:41 improving.

00:09:42 It keeps you going and that you can learn to see challenges or problems at something

00:09:49 positive and something you can grow with.

00:09:51 I think that's really, really great about coding because you will have that a lot when

00:09:56 you learn how to code.

00:09:57 Yeah, I absolutely agree with you.

00:09:59 In the problem, this perseverance skill is incredibly important.

00:10:03 I agree.

00:10:04 It manifests itself a little bit differently as they get older.

00:10:06 Instead of going, "I dislike this.

00:10:09 These are those toys.

00:10:10 Crap.

00:10:11 I'm not good at this thing," or whatever, it's more, "I can't do this.

00:10:14 I'm not good at this." And a really important skill, I think, is not, "I can't do this.

00:10:20 I need to work at being good at this." And that perseverance that you learn.

00:10:25 Honestly, I think one of the very most important skills that people can have as a programmer

00:10:30 or in software development in general is perseverance.

00:10:33 Like, "Doesn't work.

00:10:34 I read the docs.

00:10:35 Still doesn't work.

00:10:36 I read Stack Overflow.

00:10:38 People were mean.

00:10:39 Still didn't help me.

00:10:40 I worked my way.

00:10:41 And now it works." And it's such a cool feeling to work through those things.

00:10:45 But until you learn the perseverance, you just think, "Well, I wasn't good at math.

00:10:49 I must not be good at programming.

00:10:50 I'm out." Yeah.

00:10:52 I think that keeps a lot of children to learn or to like learning things that are hard.

00:10:57 Lots of kids struggle with math and STEM classes.

00:11:01 But I think it's often because they feel like, "I don't understand this."

00:11:05 Might also not be explained in the best way, but they just shut down and say, "Okay, I'm

00:11:09 just not going to try." And if you understand, and maybe also I know that there's this huge psychological research

00:11:16 on growth mindset that you understand that you shouldn't praise just an outcome, but

00:11:23 rather the effort that kids try to do something.

00:11:27 They try to improve and put in the work that's just so much more important than reaching

00:11:32 the goal in the end.

00:11:34 We can really help our kids to become more robust and more joyful about learning by teaching

00:11:40 these principles, for example, through learning how to code.

00:11:46 This portion of Talk.byton Mini is brought to you by WorkOS.

00:11:49 If you're building a B2B SaaS app, at some point your customers will start asking for

00:11:53 enterprise features like SAML authentication, SCIM provisioning, audit logs, and fine-grained

00:11:59 authorization.

00:12:00 That's where WorkOS comes in with easy-to-use APIs that'll help you ship enterprise features

00:12:05 on day one without slowing down your core product development.

00:12:09 Today, some of the fastest-growing startups in the world are powered by WorkOS, including

00:12:14 ones you probably know like Perplexity, Vercel, and Webflow.

00:12:17 WorkOS also provides a generous free tier of up to 1 million monthly active users for

00:12:22 AuthKit, making it the perfect authentication layer for growing companies.

00:12:27 It comes standard with useful features like RBAC, MFA, and bot protection.

00:12:33 If you're currently looking to build SSO for your first enterprise customer, you should

00:12:36 consider using WorkOS.

00:12:39 Integrate in minutes and start shipping enterprise plans today.

00:12:42 Just visit Talkbyton.fm/WorkOS.

00:12:46 The link is in your podcast player show notes.

00:12:48 Thank you to WorkOS for supporting the show.

00:12:51 Now you did give this topic as a talk at PyData.

00:12:55 Was that PyData Berlin?

00:12:57 Or was it?

00:12:58 I gave it once at PyData London and at PyCon Berlin and at EuroPython.

00:13:03 Okay.

00:13:04 Yeah.

00:13:04 So the reason I was going to bring that up is you had some really cool pictures.

00:13:09 Yeah, I know.

00:13:10 You'd come up with like a little persistent kid working away there and stuff like that,

00:13:15 right?

00:13:16 Oh, I loved them.

00:13:16 I loved creating them.

00:13:17 I used Delhi 3 to create them.

00:13:20 And I spent so much time just playing around with the model and providing it prompts to

00:13:24 see which images I liked best.

00:13:26 Of course, there were the obvious problems with some of them that the kids had six fingers

00:13:30 and so on, but still, it was amazing to create these images.

00:13:35 And I love that like the perseverance one.

00:13:37 And we can link the article to my blog later where you can see the image.

00:13:41 It's just everyone laughs when they see the picture.

00:13:44 Yeah, the pictures are great.

00:13:45 The pictures are great.

00:13:46 All right, let's talk for a minute about brain development and maybe the different stages

00:13:51 that kids go through because there's four or five stages, which then you might map over

00:13:57 to the different types of resources that we're going to talk about.

00:13:59 Yeah, I think that's a really important topic to consider.

00:14:01 If you want to understand when your child is able to do certain things, then you need

00:14:06 to be able to understand how their brain develops because our brain matures over time.

00:14:11 It's not fully mature at birth, but quite the opposite.

00:14:15 And some regions of the brain take more time to develop and some like vision and hearing

00:14:20 are quite well developed already at birth.

00:14:22 So at certain ages, it does make sense to start coding, for example, from zero to four.

00:14:30 And there is not much there for them to really have the cognitive abilities to understand

00:14:36 computational principles or really sit down and concentrate and focus.

00:14:40 Yeah, for example, at birth, you have quite a lot of neurons already, but just 25% of

00:14:45 the adult size brain.

00:14:47 And when you reach the age of four, you already have 80%.

00:14:49 So it has grown a lot through the first four years.

00:14:53 And you do have a lot of influence as a parent or caregiver, friend, whatever.

00:14:58 Mostly the primitive areas of the brain develop first, like hearing, vision, emotional regulation

00:15:04 starts developing, but really cognitive and executive functions like planning and so on

00:15:10 come later.

00:15:10 So I guess zero to four years would be, or birth would be the first stage.

00:15:15 And then zero to four years where you have lots of things happening and you can influence

00:15:20 that by positive influences from like responsive caregiving, that you have diverse learning

00:15:27 experiences and playing with a child.

00:15:29 And then at four years, it starts getting interesting.

00:15:32 And that's also where you can start doing things with your kid.

00:15:38 Like, do you want to rather talk about the development first and then about...

00:15:42 Maybe we should talk about the resources that go with each stage.

00:15:44 What do you think?

00:15:45 Yeah.

00:15:45 Yeah, let's do that.

00:15:46 So yeah, I do too.

00:15:47 Since we already reached age four now.

00:15:49 Oh yeah, nice.

00:15:50 Yeah.

00:15:50 So at age four, you can teach basic algorithmic thinking.

00:15:54 And you can ask questions like, what would you do to guide a lost puppy home?

00:15:58 Just making them start to think about how to break down problems into smaller steps.

00:16:03 But also they have the motor skills at that age and the perceptual abilities to interact

00:16:09 with simple toys that teach the basics of coding.

00:16:12 And you open the BeeBot, which is a tiny floor robot, or I guess it's not so tiny.

00:16:17 It's a bee and it has four directions to go front, back, right, left.

00:16:22 I think it can remember up to 130 commands and you can press go and program the way it's

00:16:28 supposed to crawl or walk, however you want to phrase it.

00:16:32 Yeah.

00:16:32 So one thing you might do with this thing is...

00:16:35 So this is a little robot that has wheels.

00:16:37 It looks like a bee.

00:16:39 What you do is you push the buttons like forward, forward, right, forward, left, forward, forward.

00:16:43 And you might put out something on the ground, like a little...

00:16:47 Can you make your bee go around this thing and then through this little gate or whatever?

00:16:53 Right?

00:16:53 Those kinds of challenges.

00:16:55 I think even when you purchase them, you can purchase rucks that have certain paths on

00:17:00 them and so on.

00:17:01 I guess it's a very...

00:17:02 Right.

00:17:02 You can spend a lot of money on these kinds of toys.

00:17:06 But maybe as a side note, if you start looking, you will find tons of robots in different

00:17:11 price ranges.

00:17:12 So I guess we will only mention examples, but if you start looking, you will definitely

00:17:18 find lots of different options.

00:17:20 Yeah.

00:17:20 Absolutely.

00:17:21 Would you say that this RoboTurtles game falls into the same category or is that a little

00:17:26 bit older?

00:17:27 Oh, I'm not sure from the top of my head if it's older.

00:17:29 What I like about it is that it's a board game.

00:17:32 So I'm always asked about screen-free offers.

00:17:34 So something that you can play without sitting in front of the laptop because screen time

00:17:39 is just a general huge discussion point.

00:17:42 I would have to look up.

00:17:43 So if I...

00:17:44 Yeah.

00:17:45 Looking at the box here, it says ages four and up.

00:17:47 So probably.

00:17:48 Oh, nice.

00:17:48 That's really cool.

00:17:49 Yeah.

00:17:49 Yeah.

00:17:50 So this one is...

00:17:51 I think it's almost exactly the same problem.

00:17:53 There is a little bit more to it because there's a couple of challenges in the board game.

00:17:58 So I think we actually have this board game from when my daughter was young.

00:18:01 And you have a little turtle, which is a card and a board, and you can put stuff on the

00:18:05 board like little rocks.

00:18:07 It can't go through.

00:18:08 Maybe there's like an ice wall and it has ability to melt the ice, but it has to do

00:18:13 that before it can move forward.

00:18:14 You get a bunch of cards and you put them in a stack and then you play them out to see

00:18:19 if your turtle wins the game or something like that.

00:18:22 So this is another pretty good option at that age, especially if you want something not

00:18:26 electronic.

00:18:26 What I also like about it is that it becomes a family activity that you learn.

00:18:30 That's just in general a very good thing if you want to teach your kids how to code, that

00:18:35 you make learning a fun activity and playing games, being with them, showing interest and

00:18:40 yeah, having fun doing it as part of gaming or what you do at home, playing board games.

00:18:46 That's just a very easy way then to get started and to get them interested.

00:18:50 I should point out like the actual Robot Turtles website has a bad SSL certificate right now.

00:18:56 So I'm sure you can find it on like Amazon and other places, but it's...

00:19:00 Yeah, I'm sure.

00:19:01 Okay.

00:19:01 So what else?

00:19:02 Another one you talked about is cubelets, but this feels like this might be a little

00:19:06 bit older.

00:19:07 Cubelets, it's, well, you can start early with them, but you can also use them at a

00:19:12 later stage because you can program them using visual coding languages or one of them may

00:19:17 code, but you can start quite early.

00:19:20 These like cubelets are small physical blocks.

00:19:23 As you can see there that you just plug together and some of them move, some have cameras or

00:19:28 sensors, and you can build lots of cool, unique robots with them.

00:19:32 And if you start looking at demos on YouTube, it's really amazing how cool they can look,

00:19:38 the end robot.

00:19:39 I think one disadvantage of this is that it's quite expensive.

00:19:42 So one of these blocks is about 50 euros or maybe $45, $50.

00:19:48 So if you want to build big robots and have lots of options, then you need to invest quite

00:19:53 a bit of money.

00:19:54 Yeah.

00:19:54 I like that the website says free shipping on orders over 50.

00:19:57 It's like, okay, pretty much anything.

00:20:00 Yeah, I guess.

00:20:02 But I still, I love it because it makes you like be creative, especially having this aspect

00:20:09 that you can program them later on using Mako.

00:20:11 That's one of the visual programming language.

00:20:13 I think that's the run for Microsoft.

00:20:15 You can keep using them over a long period of time.

00:20:18 Yeah.

00:20:19 For maybe a mental model for people who haven't seen these in action, because even looking

00:20:23 at the website, you'd have no idea.

00:20:25 What do I do with these things again?

00:20:26 Why are they here?

00:20:27 I feel like they should have people to animation or something, but there's these cubes as the

00:20:31 name would imply, but they're almost like Lego blocks that each block is programmable.

00:20:37 And then you combine them into a thing that does stuff.

00:20:40 Right.

00:20:40 I think you explained it well.

00:20:42 Yeah.

00:20:42 Thanks.

00:20:43 So I think that that's pretty interesting, but this is probably in the next stage, right?

00:20:47 The next stage would be maybe six to nine.

00:20:50 What do you think?

00:20:50 Yeah, exactly.

00:20:51 I think the next stage regarding development would be around six to nine.

00:20:55 Of course, you also always have to mention it's this is now for normally developing children.

00:21:01 It's just an average, every child is different.

00:21:03 So if you observe your child, you know, which skills develop at what point and what might

00:21:08 be easier for them, what is harder.

00:21:10 So this is not like hard ranges, but yeah, if you start with about six years of age,

00:21:15 you can start using visual programming tools because kids become used to using technology.

00:21:21 They have a better hand-eye coordination.

00:21:23 And also one very important part of the brain, the prefrontal cortex, it's like the CEO of

00:21:28 our brain, has a big growth spurt between five and eight.

00:21:32 And this improves working memory, planning, attention, and all kinds of mechanisms that

00:21:38 you need to start really sitting down and code.

00:21:41 And you already opened Scratch Junior.

00:21:44 Yeah, and Scratch Junior is, I think Scratch is quite popular, one of the most popular

00:21:50 visual coding languages.

00:21:51 And Scratch Junior is just a simplified version of it for very young children starting at

00:21:56 five to seven is recommended on their website.

00:21:59 So it has no text, but rather actions like movement.

00:22:04 In visual programming in general, you have puzzle pieces to represent concepts like loops

00:22:10 usually, or I don't know, variables, logical expressions, and you can plug them together.

00:22:15 So you don't have to worry about syntax or using the command line.

00:22:19 You just create these programs by putting together puzzle pieces.

00:22:23 And that happens on a visual interface.

00:22:27 So that's what visual programming is about.

00:22:29 And Scratch Junior is just a very simple version.

00:22:32 I think it's just a free app.

00:22:34 You can play on tablet and create little programs where the characters move around and do

00:22:40 things.

00:22:40 Kind of like the Bee, but you look a little closer to real programming, but then you see

00:22:46 the output, right?

00:22:46 Yeah.

00:22:46 And you start really using, I guess, these plug-in principles that you have the blocks

00:22:52 that you put together.

00:22:53 So when you go on to, for example, Scratch or another of the visual programming languages,

00:22:58 you're already, you have knowledge about how it works in general, I guess.

00:23:01 As I look at this website, I was thinking, you know, when I think about coding, I think

00:23:05 about computers, Mac, Windows, whatever with apps, but obviously young kids are way more

00:23:13 in tune with touch devices like iPads and Android tablets and stuff, right?

00:23:17 It's amazing how quickly they adapt and learn it.

00:23:20 I think it's quite, sometimes I'm blown away by how young children can already understand

00:23:25 how to swipe and select stuff on a touch screen.

00:23:28 I think actually it probably lowers the age by quite a bit that kids are able to do this

00:23:34 kind of stuff because these touch interfaces exist in decent ways.

00:23:37 Yeah, absolutely.

00:23:38 Just learning how to type is actually one of the main reasons why you can only start

00:23:43 with textual programming later because typing is hard.

00:23:47 You need to learn how to do it.

00:23:49 Just touching and dragging and dropping is much easier.

00:23:51 When my older kids were very young, we wanted to have them work with things like this and

00:23:57 just learn how these computers, and they, this predated the iPhone.

00:24:00 Like it didn't exist.

00:24:01 There was no meaningful touch screens that really you would want to use.

00:24:05 And so we got like, kind of like you get a typing program to learn to touch type.

00:24:10 We got a mousing program and there was like a little airplane and they had to like chase

00:24:14 the airplane around with the mouse to learn how the eye hand coordination of mouse and

00:24:18 then like screen, right?

00:24:19 When you're three or four years old, like that's not natural, right?

00:24:22 But touching, oh, they already be all over that.

00:24:25 I think sometimes it's even too intuitive for them that it starts having, like having

00:24:30 a very huge influence on them way too early.

00:24:34 But I guess that's a different discussion.

00:24:36 Yeah, that's a different problem.

00:24:37 That sends you back to a robot turtle board game.

00:24:40 Yeah, exactly.

00:24:41 This portion of Talk Python to Me is brought to you by us.

00:24:46 I mentioned at the top of the show that we have a wide range of courses focusing on core

00:24:50 topics, such as getting started with Python and advanced ones like APIs, async programming

00:24:56 and deep diving into Python's memory management and more.

00:25:00 But did you know that we have a set of world class apps that you can use in addition to

00:25:04 our web platform for taking our courses?

00:25:06 If you're using a tablet or even a phone, apps are clearly the best option.

00:25:11 But there are other reasons to check them out as well at talkpython.fm/apps.

00:25:15 Our mobile apps offer offline playback, which allows you to download portions or even complete

00:25:21 courses.

00:25:22 We hear from users who learn on the way to work on the subway where connectivity is tricky,

00:25:28 as well as to those who have secure environments that don't allow them to connect personal

00:25:31 devices or which have limited connectivity.

00:25:34 And even though I've done a ton of work to make our video delivery excellent, no matter

00:25:39 your location in the world, there are still places with very slow internet.

00:25:43 Downloading a course and then watching it without pauses is a really great use case

00:25:47 as well.

00:25:48 The app is 100% free and it includes eight free courses that are a single tap away.

00:25:53 So give it a try at talkpython.fm/apps.

00:25:57 Now back to the show.

00:25:58 A little bit later, we could do...

00:26:01 Once you start doing this, some kind of programming language, then that opens up a bunch of resources,

00:26:07 right?

00:26:07 So obviously Scratch is sort of the way more full featured version of Scratch and Junior.

00:26:13 That's pretty neat.

00:26:14 Yeah, I think Scratch is amazing because it...

00:26:16 I think for kids, it's great.

00:26:18 I know lots of adults that still use it for some projects where you really want to make

00:26:22 it come alive because Scratch is focused on having really cool, interactive, fun projects.

00:26:30 They have sounds, music, you can add graphics and it just offers a lot of functionality

00:26:37 to create your project, share them with friends.

00:26:39 And there is a ton of resources on learning Scratch.

00:26:43 And as you can see here, make music, create a story, create a character.

00:26:48 I guess your possibilities are endless.

00:26:51 Yeah, it looks really...

00:26:52 Actually, I didn't realize all the stuff they got going here.

00:26:54 They have a bunch of tutorials, free coding community.

00:26:57 It's super cool.

00:26:58 Then I guess while we're talking on these visual programming languages, we could talk

00:27:01 about Blockly, right?

00:27:03 Yeah, when I knew Blockly existed, it was also free.

00:27:07 Like Scratch is also free.

00:27:09 I guess that's important to mention.

00:27:10 And Blockly is actually at the basis of most of the other visual languages.

00:27:15 For example, it is actually like block-based languages like Scratch and MakeCode are based

00:27:20 on Blockly.

00:27:21 Blockly is developed by Google.

00:27:23 And with Blockly, I think it's for a bit older kids because it's more low level.

00:27:29 If you can say that, it offers you more flexibility.

00:27:32 You see the code next to the blocks.

00:27:34 You see it in an editor, how it actually looks like.

00:27:37 And you could copy paste the code into a normal editor and run it.

00:27:42 It's more low level, but also somewhat more sophisticated, the editor that you have it

00:27:48 more, it looks more like coding to me than Scratch.

00:27:51 Maybe the way to think about it, you say it's more low level.

00:27:54 I would say each block almost corresponds to a single symbol of code, almost, right?

00:28:01 Like you have a set variable too, then you put another block on, which is the value.

00:28:06 And then, you know, you've got your visual editor, but then side by side, you have your

00:28:10 JavaScript or I imagine you could probably see Python or other languages if you, there's

00:28:14 a dropdown for choosing the output language.

00:28:16 Yeah, you can use JavaScript, Python, PHP, Lua or Dart.

00:28:19 Yeah.

00:28:20 So that's kind of getting a little farther up there.

00:28:22 And maybe we could talk a bit about the hardware side, because that's one way that it actually

00:28:27 can be something you can touch and feel.

00:28:30 And as you interact with these ideas, right?

00:28:31 I know that that's nothing I ever used, but my brother started using it.

00:28:35 Like I know that he bought a Raspberry Pi.

00:28:38 You open up the micro bit, which is like a smaller programmable device.

00:28:42 And the Raspberry Pi would be like full-fledged computer in a tiny device.

00:28:46 But yeah, you can learn a lot about hardware and also coding by having such devices.

00:28:52 And the micro bit has displays, buttons, sensors, and you can program it using make code, one

00:28:57 of the other visual programming languages.

00:28:59 And I think it's quite cheap compared to other devices.

00:29:02 Like a Raspberry Pi is, I think it's not expensive for having all these abilities or these capabilities,

00:29:09 but the micro bit is, I guess, more affordable for lots of people.

00:29:14 Oh yeah, nice.

00:29:14 There you can see how it works.

00:29:16 And you know what's really interesting is if you go to makecode.microbit.org,

00:29:21 even if you don't have one of these devices, it comes with a little emulator and then it has

00:29:26 a virtual micro bit that you can write code against.

00:29:30 And it gives you an option as well to choose Python or Blockly or some other way of working

00:29:37 with it, which is pretty cool.

00:29:38 Exactly.

00:29:38 That's also why it's recommended for children, like officially it's recommended for children

00:29:43 at the age of eight or older.

00:29:45 And Blockly, I think is even recommended for kids starting at 10, whereas Scratch is for

00:29:50 even younger children, right?

00:29:51 They say you can get started at eight and they say what I think, which is funny, they say it's

00:29:56 up to 16, which doesn't make sense to me.

00:29:58 Why would there be an upper limit?

00:30:00 But yeah, anyway, you can still use it.

00:30:03 You're 17, you have to do C++ now.

00:30:05 Yes, exactly.

00:30:06 What is great about visual programming is that you can always come back to it.

00:30:09 It's not that you progress from these robots to visual programming to textual programming,

00:30:14 but you can use visual programming for doing, I don't know, digital stories and you can still

00:30:20 do textual programming at work.

00:30:22 It's just having all these options now is really nice.

00:30:25 Yeah, absolutely.

00:30:26 Let's see.

00:30:26 We also have Zoomie.

00:30:28 Zoomie is pretty cool.

00:30:29 Let's come back to Zoomie.

00:30:30 I do want to talk about something that's like a little bit more real similar to the micro

00:30:33 bit first is many of the things over at Adafruit.

00:30:37 Are you a fan of Adafruit?

00:30:38 I don't know Adafruit.

00:30:39 Tell me about it.

00:30:40 So this is a company that creates a whole bunch of small devices like the BBC micro bit that

00:30:47 runs CircuitPython.

00:30:49 There's just tons and tons of things you can buy.

00:30:53 You can buy little sensors and you can buy little displays or whatever it is that you're

00:30:58 looking for.

00:30:58 There's just many, many little ways to make these projects a little bit more than a micro

00:31:03 bit.

00:31:03 So for example, you could get one of these ESP32 devices, but it has like a little tiny

00:31:09 display on it that you can output your text to and it costs $19.

00:31:14 Which is pretty ridiculous.

00:31:17 And they often come with tutorials on how to do it.

00:31:19 So if you're into this kind of stuff, this is like a perfect place to go.

00:31:24 Also, there's just so much opportunity to learn even for like being the parent.

00:31:29 I would learn so much from doing this.

00:31:31 It would be so valuable to me to learn more about the hardware side of things, especially

00:31:37 because I would never sit down and buy myself a Raspberry Pi.

00:31:41 I don't know why, but I wouldn't do it.

00:31:42 Just don't find the time.

00:31:44 But if I can do it.

00:31:45 You already have a computer and all that.

00:31:46 Yeah.

00:31:47 And if I can do it together with my children, I think that's just amazing.

00:31:50 It's really cool.

00:31:51 And this is just a general thing about learning with kids.

00:31:54 If you learn together with them, they can also be the expert sometimes, which is amazing

00:31:59 for kids.

00:32:00 If they can explain something to you that they understand better, it gives them so much

00:32:05 joy and helps them develop this passion and love for learning.

00:32:09 I think that's a great thing about learning how to code.

00:32:12 That doesn't matter if you are the best coder, but you can just use it as a way to improve

00:32:18 yourself.

00:32:18 Yeah.

00:32:19 And once they get that mastery, they're like, "Oh, now I've gone beyond them."

00:32:22 It's probably a really good feeling.

00:32:24 If my kids want to learn how to code early, like much earlier than myself, they will become

00:32:30 so much better than me so quickly.

00:32:33 Yeah, for sure.

00:32:34 I have one of these little devices here.

00:32:36 You put it in your hand.

00:32:37 It's like certainly smaller than the palm of my hand.

00:32:39 And this thing manages the DNS and ad blocking on my network.

00:32:43 It was like 20 bucks or something.

00:32:45 Yeah.

00:32:45 There's sort of less playful, more interesting.

00:32:49 Also just utilitarian things you can do with these little things.

00:32:52 Yeah, absolutely.

00:32:53 All right.

00:32:53 Back to Zoomy, which is in the same age category, I would say.

00:32:57 This is like around 10 years or so.

00:32:58 Yeah.

00:32:58 But it's more robot-like, right?

00:33:00 Yeah, exactly.

00:33:01 It's a self-driving car kit.

00:33:03 It's a small car and it has so many capabilities.

00:33:07 You can program it using Python and Blockly.

00:33:10 You can even teach it about driving certain ways by providing your own data sets.

00:33:16 So there is a lot of machine learning.

00:33:18 Even you can teach it.

00:33:19 It offers so many opportunities or ways to create projects.

00:33:25 At my company, we have done quite a few workshops with kids with Zoomy and they love doing it.

00:33:30 And adults love doing it too.

00:33:32 Nice.

00:33:32 It's like a self-driving car kit.

00:33:35 So if you wanted to try to, instead of maybe teaching it, you go forward three steps, you

00:33:39 turn right, you go forward two steps, you turn left, you teach it.

00:33:42 If you see a turn left sign, you turn left or something like that, right?

00:33:46 Exactly.

00:33:46 Yeah.

00:33:47 It can really understand or analyze its environment.

00:33:50 Yeah, that's pretty awesome.

00:33:51 Okay.

00:33:51 And you do events with these?

00:33:53 Yes.

00:33:54 That's also maybe advice for people that want to get started.

00:33:57 It's always useful to check out local events that happen at companies that are close to

00:34:02 where you live or universities.

00:34:04 They do offer a lot of free, often offer free workshops for kids where you can sign them

00:34:09 up to learn about robotics or coding.

00:34:12 And it can be like an easy way to get them started if you find it hard to do it yourself.

00:34:18 Yeah.

00:34:18 I think a lot, at least in the US, there's quite a few programs for like summer teen

00:34:24 programs that do either 3D printing or coding with Lego robots or whatever.

00:34:31 So there's a lot of summer camps and that type of thing.

00:34:33 Yeah.

00:34:34 I guess that's very big in the US and Germany.

00:34:37 I think not so much.

00:34:38 Maybe it's growing, but yeah, you can definitely spend a lot of time doing it.

00:34:43 I know that like we at our company, we sometimes offer day workshops where you can just start

00:34:50 getting to know about a topic or just play around with things, becoming kids interested

00:34:56 in the topic in the first place.

00:34:57 Yeah.

00:34:57 That's really neat.

00:34:58 Last in the category of hardware here, you already mentioned it though, is Raspberry

00:35:03 Pi, which I guess is a little closer to just a real computer, right?

00:35:07 Yeah.

00:35:07 It's a really powerful device.

00:35:09 So it's basically a very small and cheap computer that runs Linux, but you can use it to learn

00:35:16 coding, but you can also build hardware projects with it, do home automation, learn about the

00:35:21 Internet of Things.

00:35:22 But it's recommended for kids starting at 11 years, so quite a bit older because you

00:35:27 need programming.

00:35:28 This maybe also shifts over to the next age range, namely when your kids have typing skills

00:35:34 and also a more well-developed cognitive abilities and the prefrontal cortex, which I talked

00:35:41 about the CEO of the brain, the development starts to mature and stabilize.

00:35:46 So planning, organizing, thinking abstractly, all these skills become more fully developed

00:35:51 and you of course need the typing skills to get started with textual coding.

00:35:55 So at the age nine plus, most of the time you can get started with these things.

00:36:01 For example, with like programming Raspberry Pi or just more traditional textual programming

00:36:07 languages.

00:36:08 The typing skills is pretty interesting, I think.

00:36:11 One that you talked about before, but I think is also super interesting as a gateway to

00:36:17 this.

00:36:18 This is the best one that I know, maybe people know of others as well, is Code Combat.

00:36:22 You did a podcast episode on that years ago, right?

00:36:26 This is one of the ones, like my daughter and I both subscribed to this for a while

00:36:30 when she was younger.

00:36:31 We'd go through and we did, I can't remember, I think she did 30 or 40 code challenges

00:36:36 through there or something like that, which was pretty awesome.

00:36:39 And I also had the guys on the show.

00:36:40 Yeah, it's been a little while.

00:36:41 Yeah, it has been, but it's still, I think it's an amazing resource.

00:36:45 So Code Combat is about learning how to code through gaming.

00:36:48 So you play a game from beginning to end.

00:36:50 And while you play the game, you learn to code in Python or JavaScript.

00:36:55 I think there are several languages, but you really do textual programming.

00:36:59 And if your kid likes gaming or this is something that makes it easier for them to get started

00:37:04 with coding, it's an amazing resource, even though you have to pay for it because you're

00:37:08 really guided through the course.

00:37:09 You can have lessons.

00:37:10 You can even have, I think, teacher lessons once or twice a week, dependent on your subscription

00:37:17 plan.

00:37:17 Yeah, I think there might be a free tier if you tell it you're a student, but you can

00:37:21 only do certain challenges.

00:37:23 Like, for example, see this, there's like a locks here and it says, I think, yeah, I

00:37:28 have to subscribe to this if I want to do all, if I want to solve all the puzzles, but

00:37:32 there's some of them that you can do for free, I believe.

00:37:34 I don't feel like we had to pay at the beginning, but they could have changed the model.

00:37:38 I also played around with it.

00:37:39 At least in the beginning, you can try it out for free.

00:37:42 What I really like about this, you know, so if you click on, if you go to this, you click

00:37:46 on one of the things it says for this challenge, you're going to learn arguments and syntax.

00:37:50 Or if you come over here and you click on this one, you'll say you'll learn while loops

00:37:54 or whatever.

00:37:55 But then it gives you just a nice, simple challenge.

00:37:58 So, but what's cool, oh, no, in order to play that one, I got to, can I play this one?

00:38:04 Yeah, here you go.

00:38:04 So you have this character and what's, oh my gosh, it made that very large.

00:38:09 What's really cool though, is when you, it gives you a little hint, but the editor, here's

00:38:13 what I think is special about Code Combat.

00:38:15 The editor is auto-complete like you have never seen, you know what I mean?

00:38:21 So it says, all right, what you need to do is build a fence and you have a hero and the

00:38:24 hero has the ability to say, build at X, Y position, or it could move.

00:38:30 And if I just type the letter D, it'll auto-complete like hero.movedown.

00:38:34 Or if I say hero build X, Y, it automatically puts in all the, it's, so if you can type

00:38:41 just a couple of characters, it'll keep the syntax, you know, like the spacing for indentation

00:38:47 and block definitions and all of that kind of stuff is ridiculous for how you don't even

00:38:53 have to really have the right syntax.

00:38:55 You just have to put a little bit of some kind of word in there at all.

00:38:58 And it'll, it'll start to write all of it for you, which I think that's the magic here.

00:39:03 It's nice that you have this insider knowledge by having tried it out yourself for quite

00:39:07 a while.

00:39:08 Yeah, it worked way better than other stuff when my daughter was young and I was trying

00:39:12 to teach her like beyond the visual programming things, but it's, it's so forgiving compared

00:39:18 to, well, here's your favorite editor and you start typing, oh, why won't it run?

00:39:22 There's three spaces, not four.

00:39:23 Oh, I see.

00:39:24 You know, all that kind of detail you got to normally deal with.

00:39:27 It can be so frustrating in the beginning if you need to learn about everything at the

00:39:30 same time, like syntax, spacing, brackets.

00:39:33 It's just a lot to learn in the beginning if you just want to understand the basic concept

00:39:38 like for a start.

00:39:39 Yeah, absolutely.

00:39:40 Another thing you put out there was CodeClub.

00:39:43 Yeah, that's, I think a really cool resource by the Raspberry Pi Foundation.

00:39:48 So it's a platform and it guides your kids from lesson to lesson.

00:39:55 So you start with learning Scratch, but then it progresses onto Python.

00:39:59 And yeah, you can start, I think at the age of eight, yeah, you can start at the age of

00:40:05 eight, which is also the recommended age for Scratch.

00:40:08 And this is just an example for a full platform that you can use to guide yourself or your

00:40:14 children through progressing from one thing to the other.

00:40:18 And I think it's also free.

00:40:20 So if you start looking, there are lots of online coding classes that you can use that

00:40:26 teach you different things and have a whole program and sets of ideas behind how to approach

00:40:31 different topics.

00:40:32 Yeah, this looks very fun.

00:40:33 And the example, at least they have on the screen is using Blockly, right?

00:40:37 Or Scratch, one of them.

00:40:38 I think it's Scratch.

00:40:39 Yeah, I think level one is Scratch and then level two would be Python and more comes after

00:40:44 that.

00:40:44 Yeah, that's really cool.

00:40:45 Another one in this realm is Hetty.

00:40:48 I had not heard of Hetty.

00:40:49 Yeah, me neither.

00:40:50 Just when I started researching the topic, why I chose it as an example is that I just

00:40:56 like the concept of gradual programming.

00:40:59 So gradual programming means that what I just mentioned, basically, that if you learn language

00:41:05 speaking or like a programming language, you have to learn a lot at the same time.

00:41:10 It can be overwhelming.

00:41:11 You have concepts like loops, if else, and syntax like quotation marks, round brackets.

00:41:17 And in Hetty, it's free.

00:41:19 Like it's a web-based interface and you concepts are introduced with as little syntax and then

00:41:26 refined.

00:41:27 So in the beginning, you can just type print and the text and you don't have to worry about

00:41:31 quotation marks or brackets.

00:41:33 It's just introduced at a later stage.

00:41:35 So it mimics the way in which we would learn a language.

00:41:38 And in the end, you like it's based on Python.

00:41:40 So you learn a subset of Python, not the entire programming language, but it's syntactically

00:41:45 valid and you have all the right syntax.

00:41:48 But for some kids, it might be easier to get started with having not everything like being

00:41:53 part of what you have to code yourself.

00:41:55 Right.

00:41:56 Like learning, oh, whoops, you forgot to close the parentheses.

00:41:58 So it's not going to run or you forgot to close the quote.

00:42:01 So it won't work.

00:42:02 Something like that.

00:42:02 Yeah, exactly.

00:42:03 Yeah.

00:42:03 Kids run into that all the time because they're like, well, I see the words on the screen

00:42:07 that I wanted to do, but no, no, you got to put it in quotes.

00:42:10 Why?

00:42:11 Oh, and maybe regarding the age, this is recommended for age 10 plus years.

00:42:14 So yeah, when you want to get started with actual textual programming, so it fits into

00:42:20 the third age range that we discussed.

00:42:22 That's pretty much the last limited age range, I guess you would say, before you just go

00:42:27 and do regular programming, right?

00:42:29 Exactly.

00:42:29 From there, you can just progress on to more traditional programming languages.

00:42:33 There are lots of resources like from the Bersperry Pi Foundation.

00:42:38 They have Python courses and there are some on Udemy.

00:42:41 If you start looking, there are tons of resources to get started.

00:42:44 There are lots of online and on-site classes that teach kids starting at various ages.

00:42:51 Yeah, I know about a few German offers where you can really find what you're interested

00:42:56 in, which is really important, like make coding fun and learning fun for kids.

00:43:03 So find out what they are interested in, what their passion is, and then find something

00:43:08 that fits their interest.

00:43:09 I'm sure there's a ton of stuff on YouTube as well to help people, but at least I'm out

00:43:14 of touch.

00:43:15 I bet there's a lot on TikTok, actually.

00:43:17 Oh yeah, I'm out of touch with that as well.

00:43:19 Just, you know, you learn one concept every 30 seconds, you just swipe away until you're

00:43:24 a programmer.

00:43:25 I should actually look at that probably when talking about coding with kids.

00:43:29 I guess that's something that can play a big part.

00:43:32 For sure, Instagram Reels or whatever.

00:43:35 All right, I think that kind of touches on most of the resources that we have.

00:43:39 There's one more I do want to talk about, though, and I think this is probably as good

00:43:45 around, it's beyond the code combat stage where kids can actually use an editor to create

00:43:52 proper, valid syntax, but it's not much beyond that.

00:43:55 And that's Anvil, at anvil.works.

00:43:58 Are you familiar with Anvil?

00:43:59 No.

00:43:59 So I've had, Meredith, the creator of this online and on the show, but what's really

00:44:05 interesting is it's a way to visually build web pages that are actual real web pages that

00:44:12 people can actually, you know, you publish it, your family or your friends could use

00:44:16 it.

00:44:17 So if you wanted to build, you know, something like a Harry Potter type thing and you could

00:44:21 have your friends vote on which one, which character is their favorite or and why or

00:44:26 whatever, you know, like you could build this into a web page and publish it.

00:44:29 And with so many of these projects, it's like, okay, I built this cool thing.

00:44:33 How do I share it?

00:44:34 Or how do I make it look like the thing that I use?

00:44:37 And so you can do this drag and drop, build it out thing.

00:44:40 But then you write the front end, the front end interactive code in Python and true Python,

00:44:46 JavaScript.

00:44:47 And then it has kind of like a simplified database in the back end.

00:44:50 So it has like a little bit of like persistence and storage, but it's, it's really cool.

00:44:54 After we did code combat with my daughter, we went and we did this and she built a bunch

00:44:59 of things that were like, really, she really thought were pretty neat.

00:45:02 She could share with people and have people input little text messages or whatever.

00:45:06 - I love that.

00:45:07 Yeah.

00:45:08 I would learn again.

00:45:09 I know very, I have very little knowledge about web programming.

00:45:13 This would be a good tool for me to get started as well.

00:45:16 - Yeah.

00:45:16 Well, also the problem is even if you're a very good web programmer, it's like, okay,

00:45:22 kid, you go from code combat to now you're doing CSS, HTML, database, you know, like

00:45:29 the, the explosion of complexity to puts, and then you do all that.

00:45:32 And then how do you even put it on the web?

00:45:34 It's just so out of control that step from one to the next.

00:45:38 And so if people want to do anything with like web pages and Python, this is a really

00:45:42 cool option.

00:45:42 I think right here.

00:45:43 - Pretty cool.

00:45:44 Yeah.

00:45:44 And like speaking from your experience, how did you get your kids excited about coding?

00:45:50 Did they just like it or do they hate it?

00:45:53 - My older daughters, they grew up with less technology because they're older.

00:45:58 So at first they weren't super into it, but then they got into college and they had to

00:46:03 start learning things for their degree.

00:46:05 And so now one of my daughters is doing a lot with R, which is fine because she's in

00:46:10 psychology and that's what all of her colleagues are using.

00:46:12 - Which is fine.

00:46:14 It's not ideal, but it's fine.

00:46:16 - It's not ideal.

00:46:17 It's fine.

00:46:18 No, I'm not that district.

00:46:19 No, I'm very proud of her.

00:46:20 I think there's different things that can motivate you.

00:46:23 You know, you can just be curious.

00:46:24 Like my youngest daughter's like, let's play games.

00:46:26 Let's play code combat.

00:46:28 Then she's like, I want to build something for my friend.

00:46:30 You know?

00:46:30 And then so we did this thing with Anvil and she was very motivated, like seek out the

00:46:35 technology and play with it.

00:46:36 Whereas my older daughters, I think they weren't that interested and they had other things

00:46:40 to do, but once they got somewhere with a job or with their education where they needed

00:46:45 it, then all of a sudden it was more interesting.

00:46:47 So, you know, it varies by kid, I think.

00:46:49 - Yeah, absolutely.

00:46:50 And I guess that's fine as well.

00:46:52 Not everyone needs to like coding, but just having the opportunity to learn about it and

00:46:56 experience yourself, if it's something that you're actually like, I was just so blown

00:47:01 away when I experienced how fun it is to learn how to code.

00:47:05 I always thought it was boring and yeah, having all these stereotypes in my head because I

00:47:11 never actually knew anyone that was coding.

00:47:15 - Yeah.

00:47:15 - It's nice that they had the opportunity to learn about it at home.

00:47:18 - Yeah, it absolutely is.

00:47:20 So I think we have a little more follow-up here on the TikTok learning style.

00:47:24 @5fast_tether says, "You can learn every single short, but you won't remember anything as

00:47:29 you flip through them." (laughing)

00:47:30 Flip, flip, flip, which is probably true.

00:47:32 And then also @Krishan asks, "Do you think Scratch is good to start with for kids?"

00:47:37 Like if you had a kid who was 10, 11, 12, 13, what would you start them with?

00:47:41 - Yeah, I would get started with visual programming.

00:47:44 I think it makes it easier.

00:47:45 I know that for some kids, it can be hard then to progress onto textual programming,

00:47:49 but I guess this is just a general thing.

00:47:51 You need to see what works.

00:47:54 It's not that you, it might be that you start with one thing and you see, actually, it doesn't

00:47:58 work for us.

00:47:59 And then you have to switch tracks and that will happen a lot.

00:48:02 And that's just fine.

00:48:03 You need to find your own path through it.

00:48:05 And don't be afraid to actually make changes if you are not enjoying what, or your kid

00:48:11 is not enjoying their work.

00:48:12 I think visual programming is a great and fun way to get started with coding concepts

00:48:18 and not have it feel like you're actually coding.

00:48:21 - Absolutely.

00:48:22 So @Krishan's child is 13.

00:48:25 I would consider code combat, actually.

00:48:26 I think, you know, 13, you're well enough to do textual stuff if it's not too much drudgery,

00:48:32 right?

00:48:32 Like matching braces and quotes and all that.

00:48:35 So maybe if this kind of thing inspires, maybe that as well.

00:48:38 - Yeah, absolutely.

00:48:39 I think 13 is great for getting started with textual programming as well.

00:48:44 And what is so nice about having large language models now is that lots of these offers are

00:48:49 being translated to various languages and it is becoming much more easy to get started

00:48:56 in your native language, which might not be English.

00:48:58 And then you do not have to learn a language while you learn how to code.

00:49:02 Yeah, that's also, I think, a huge advantage of the current time.

00:49:06 - That's something that's always been interesting to me is so many of the programming languages

00:49:12 are in English, but many of the programmers, their first language is not English.

00:49:17 - Yeah.

00:49:17 - And you know, maybe like your English is perfect, I'm sure, you know, for a while is no big deal.

00:49:22 But when you're 10 years old, here, you need to learn a program.

00:49:25 Well, by the way, it's in a foreign language.

00:49:27 That's pretty wild, right?

00:49:28 That's gotta be challenging.

00:49:30 What was your, like, how do you feel about this?

00:49:31 I mean, you're more in it than I am.

00:49:33 - Yeah, I would always start, like, if you have the chance, then start in the native

00:49:37 language of the child and you will definitely find good ways to get started and good offers.

00:49:42 For example, Scratch, I think, is available in lots of languages, 70 languages, actually.

00:49:47 Choose something that keeps the cognitive effort that you need to get started with simpler,

00:49:53 because otherwise you really have to learn two things at the same time, learning a language and learning all these concepts.

00:49:59 And it can then be overwhelming.

00:50:02 - It's not something that I had to deal with, but looking back, I'm like, wow,

00:50:05 I was pretty lucky that I didn't have to learn what all the keywords meant in addition to

00:50:10 just what I was trying to do.

00:50:11 - That's also actually why I decided to study in English, because I knew all the papers I'm

00:50:16 reading are in English, all the code I'm writing is in English.

00:50:19 It doesn't make sense to study it in German.

00:50:22 It's just weird.

00:50:23 - The internet has done some interesting things to just sort of spread everything around globally.

00:50:27 So, all right, Elena, this has been awesome.

00:50:30 A bunch of concrete things for people to take and work with their kids, maybe if they're grandparents, their grandchildren, or if they're teachers,

00:50:37 or friends, kids, or whatever, right?

00:50:39 - Whatever, yeah.

00:50:40 - Yeah.

00:50:40 How about some final advice to close out the topic?

00:50:43 - Yeah, I think for me, two things are the most important ones, namely, first,

00:50:48 don't force your child to learn how to code, but see if you can find a way that makes it fun for

00:50:53 them. I think making or learning that learning is actually a cool thing, is like it offers you,

00:51:02 or it opens you so many doors in your life that you learn that putting in the effort,

00:51:08 and even if something is complicated, it's worth it.

00:51:11 It's just one of the most valuable skills you can provide your child with.

00:51:16 So, yeah, learning how to learn and how to love learning, I guess.

00:51:20 And there's lots of ways in which you can do it. Choose the right topics, be patient,

00:51:26 sit down with your kids and learn together. Don't force them to sit down for long times,

00:51:31 and like rather distribute learning sessions over time. Don't be afraid to switch tracks.

00:51:37 Lots of the things that apply to adults also apply to children regarding learning.

00:51:42 - Very good advice. I would just maybe re-emphasize that people should reward persistence.

00:51:48 Reward it very, very highly. Like, I can't believe you spent half an hour and you just

00:51:52 got barely got it to print hello, but that's actually a massive accomplishment. And like,

00:51:56 I'm so proud of how hard you focused and worked on it, right? That's a big deal.

00:52:00 - Yeah. That's like, it makes a huge difference to two kids.

00:52:03 - Probably adults as well.

00:52:04 - Yeah, yeah. Everyone. But you lay the foundation for learning, right? So if you...

00:52:09 - Yeah. I mean, that expands on to being good at literature or being good at philosophy or like,

00:52:14 whatever it is that's hard to learn.

00:52:16 - And just believing that you can learn anything.

00:52:19 - Yes, exactly. And the other is to try to capture inspiration. If they're like,

00:52:23 really, really excited and they really want to learn a thing at that moment,

00:52:26 then you could introduce some of these tools. But if they're like, I want to go outside and play with my friends. You're like, no, come in here,

00:52:31 we're doing coding. Like maybe that's not the moment, yeah?

00:52:34 - Exactly. Yeah.

00:52:34 - All right. Thank you for taking the time to put this all together and coming on the show

00:52:38 and nice to have you back. So.

00:52:39 - Thank you.

00:52:40 - Yeah. Thanks. Bye.

00:52:41 - Bye.

00:52:41 - This has been another episode of Talk Python to Me.

00:52:46 Thank you to our sponsors. Be sure to check out what they're offering.

00:52:48 It really helps support the show.

00:52:50 This episode is brought to you by WorkOS. If you're building a B2B SaaS app,

00:52:55 at some point, your customers will start asking for enterprise features like

00:52:59 SAML authentication, SCIM provisioning, audit logs, and fine-grained authorization.

00:53:04 WorkOS helps ship enterprise features on day one without slowing down your core product development.

00:53:10 Find out more at talkpython.fm/workos.

00:53:14 Want to level up your Python? We have one of the largest catalogs of Python video courses

00:53:18 over at Talk Python. Our content ranges from true beginners to deeply advanced topics like

00:53:23 memory and async. And best of all, there's not a subscription in sight.

00:53:27 Check it out for yourself at training.talkpython.fm.

00:53:30 Be sure to subscribe to the show, open your favorite podcast app, and search for Python. We should be right at the top.

00:53:36 You can also find the iTunes feed at /iTunes, the Google Play feed at /play,

00:53:42 and the direct RSS feed at /rss on talkpython.fm.

00:53:45 We're live streaming most of our recordings these days. If you want to be part of the show and have

00:53:50 your comments featured on the air, be sure to subscribe to our YouTube channel at talkpython.fm/youtube.

00:53:55 This is your host, Michael Kennedy. Thanks so much for listening. I really appreciate it.

00:54:01 Now get out there and write some Python code.

