WEBVTT

00:00:00.000 --> 00:00:02.600
You've got this amazing machine learning model you created,


00:00:02.600 --> 00:00:04.960
and you want to share it and let your colleagues and users


00:00:04.960 --> 00:00:07.200
experiment with it on the web.


00:00:07.200 --> 00:00:08.480
How do you get started?


00:00:08.480 --> 00:00:10.520
Learning Flask or Django?


00:00:10.520 --> 00:00:13.200
Great frameworks, but you might consider Gradio,


00:00:13.200 --> 00:00:16.640
which is a rapid development UI framework for ML models.


00:00:16.640 --> 00:00:18.480
On this episode, we have Freddie Bolton


00:00:18.480 --> 00:00:20.560
to introduce us all to Gradio.


00:00:20.560 --> 00:00:21.720
This is "Talk Python to Me,"


00:00:21.720 --> 00:00:25.680
episode 430, recorded August 10th, 2023.


00:00:25.680 --> 00:00:28.260
(upbeat music)


00:00:28.260 --> 00:00:41.420
Welcome to Talk Python To Me, a weekly podcast on Python.


00:00:41.420 --> 00:00:43.280
This is your host, Michael Kennedy.


00:00:43.280 --> 00:00:48.180
Follow me on Mastodon, where I'm @mkennedy, and follow the podcast using @talkpython,


00:00:48.180 --> 00:00:50.480
both on fosstodon.org.


00:00:50.480 --> 00:00:53.200
Be careful with impersonating accounts on other instances.


00:00:53.200 --> 00:00:54.200
There are many.


00:00:54.200 --> 00:00:59.800
Keep up with the show and listen to over seven years of past episodes at talkpython.fm.


00:00:59.800 --> 00:01:03.240
We've started streaming most of our episodes live on YouTube.


00:01:03.240 --> 00:01:09.400
Subscribe to our YouTube channel over at talkpython.fm/youtube to get notified about upcoming shows and be


00:01:09.400 --> 00:01:11.360
part of that episode.


00:01:11.360 --> 00:01:17.600
This episode is brought to you by JetBrains, who encourage you to get work done with PyCharm.


00:01:17.600 --> 00:01:23.760
your free trial of PyCharm Professional at talkpython.fm/done-with-pycharm.


00:01:23.760 --> 00:01:29.760
And it's brought to you by Sentry. Don't let those errors go unnoticed. Use Sentry.


00:01:29.760 --> 00:01:35.040
Get started at talkpython.fm/sentry. Brady, welcome to Talk Python to Me.


00:01:35.040 --> 00:01:36.080
Thanks for having me, Michael.


00:01:36.080 --> 00:01:40.240
Yeah, it's great to have you here. I think people are going to learn a lot about some


00:01:40.240 --> 00:01:45.600
machine learning on this episode. And you've got this really cool visual way, this visual tool


00:01:45.600 --> 00:01:47.360
with working with machine learning projects.


00:01:47.360 --> 00:01:51.040
And oftentimes people ask me, I'm not really a web developer,


00:01:51.040 --> 00:01:53.920
but I have some machine learning stuff, or I'm a data scientist,


00:01:53.920 --> 00:01:56.160
and I want to share with people, how do I do that?


00:01:56.160 --> 00:01:59.840
So your project might be a good answer to that for some folks, right?


00:01:59.840 --> 00:02:00.720
- Yeah, absolutely.


00:02:00.720 --> 00:02:03.520
I think that, yeah, Gradio is built for that use case.


00:02:03.520 --> 00:02:06.800
I think you can build like lots of complex stuff with Gradio,


00:02:06.800 --> 00:02:11.520
web apps and stuff, but you could, it's optimized for the ML use case.


00:02:11.520 --> 00:02:13.680
Like how do you get like an ML workflow,


00:02:13.680 --> 00:02:16.340
like on the web and share it with people as quickly as possible.


00:02:16.340 --> 00:02:17.640
That's kind of what Gradio is built for.


00:02:17.640 --> 00:02:18.020
Awesome.


00:02:18.020 --> 00:02:19.140
I've got it running on my computer.


00:02:19.140 --> 00:02:21.960
How do I take it from a notebook to something that other people who are


00:02:21.960 --> 00:02:23.460
not programmers can use, right?


00:02:23.460 --> 00:02:24.120
Yeah, exactly.


00:02:24.120 --> 00:02:24.960
That's kind of it.


00:02:24.960 --> 00:02:26.560
And it's what Gradio is one line.


00:02:26.560 --> 00:02:30.080
You can get a shareable link directly from your Colab notebook, Jupyter


00:02:30.080 --> 00:02:32.680
notebook, SageMaker, local, whatever.


00:02:32.680 --> 00:02:33.000
Yeah.


00:02:33.000 --> 00:02:35.480
So it's really easy to share with people.


00:02:35.480 --> 00:02:35.900
Excellent.


00:02:35.900 --> 00:02:36.160
All right.


00:02:36.160 --> 00:02:38.000
Before we dive into that, let's start with you.


00:02:38.000 --> 00:02:42.240
A quick story, quick introduction about you and how you got into programming Python.


00:02:42.240 --> 00:02:42.960
Yeah, absolutely.


00:02:42.960 --> 00:02:46.560
So I, all the way from the beginning, I, I graduated with a degree in statistics


00:02:46.560 --> 00:02:50.440
and my first job was working as a data scientist in Chicago.


00:02:50.440 --> 00:02:53.940
And that was doing more like bread and butter data science-y stuff.


00:02:53.940 --> 00:02:57.280
Like you pull data from like database and like you train a model and then you


00:02:57.280 --> 00:02:59.460
like try to communicate the results with someone.


00:02:59.460 --> 00:03:03.220
And then at the time, yeah, I mean, it wasn't that long ago, but to me, it


00:03:03.220 --> 00:03:05.180
feels like it was like a millennia ago.


00:03:05.180 --> 00:03:07.280
Technologically speaking, it's so different.


00:03:07.280 --> 00:03:07.600
Yeah.


00:03:07.600 --> 00:03:07.860
Yeah.


00:03:07.860 --> 00:03:09.380
It was like a really long time ago.


00:03:09.380 --> 00:03:09.540
Yeah.


00:03:09.540 --> 00:03:12.660
But then basically like what happens or what happened to me a lot was just


00:03:12.660 --> 00:03:15.160
just like, okay, like we need to like, we're training this model.


00:03:15.160 --> 00:03:18.460
Like, how do we share, like share with the relevant, like stakeholders, right.


00:03:18.460 --> 00:03:22.080
There's like a PM or like someone that's interested in this, like, how do you, how


00:03:22.080 --> 00:03:23.140
do we, how do you make them care?


00:03:23.140 --> 00:03:24.860
And then there really wasn't a good answer.


00:03:24.860 --> 00:03:28.480
Like you would have to like, you'd like compute like some metrics and then try to


00:03:28.480 --> 00:03:29.460
explain what they mean.


00:03:29.460 --> 00:03:31.260
And you like draw like a bar plot or something.


00:03:31.260 --> 00:03:33.260
And it just wasn't really that useful.


00:03:33.260 --> 00:03:33.420
Right.


00:03:33.420 --> 00:03:36.740
And I think it really was to be fair, it was like a skill gap.


00:03:36.740 --> 00:03:40.860
I didn't even know how to build like an interactive website to share with people.


00:03:40.860 --> 00:03:44.220
Cause at the end of the day, what really, what people really care about or how to


00:03:44.220 --> 00:03:46.260
make someone really care about it is that they can play with it, right?


00:03:46.260 --> 00:03:50.100
Cause if you show them these plots and these metrics, it's like a machine


00:03:50.100 --> 00:03:52.020
learning models, like very abstract, right?


00:03:52.020 --> 00:03:54.060
It's like just this thing that's somewhere else.


00:03:54.060 --> 00:03:57.780
And then this is like the output of it, but it's not really even like the actual


00:03:57.780 --> 00:04:00.500
output, it's just like some sort of summary statistics of it.


00:04:00.500 --> 00:04:00.780
Right.


00:04:00.780 --> 00:04:03.540
But if you give someone like, this is what the model is and you can let them


00:04:03.540 --> 00:04:07.540
like manually play with the inputs and see how the outputs change, they get a


00:04:07.540 --> 00:04:12.320
sensible, well, like what the model is and how it works and stuff like that.


00:04:12.320 --> 00:04:12.540
Right.


00:04:12.540 --> 00:04:15.900
And I think that's where I learned about this problem and


00:04:15.900 --> 00:04:17.100
why this problem is important.


00:04:17.100 --> 00:04:20.780
And then ever since then, I've been sort of devoting to devoting myself to


00:04:20.780 --> 00:04:24.780
working on like open source tools to like make data science like more efficient.


00:04:24.780 --> 00:04:28.060
And like my, my, the latest product that I worked on is called radio,


00:04:28.060 --> 00:04:29.420
which kind of does this.


00:04:29.420 --> 00:04:32.460
It basically lets you turn a machine learning function into a


00:04:32.460 --> 00:04:33.700
web app in one line of code.


00:04:33.940 --> 00:04:38.400
And from there you can jump off and build like as complex of a web as you want.


00:04:38.400 --> 00:04:41.620
But from the beginning, you can get up and running with this, like


00:04:41.620 --> 00:04:43.120
basically two lines of code.


00:04:43.120 --> 00:04:45.320
So, yeah, it's kind of a little bit of a bummer.


00:04:45.320 --> 00:04:49.360
You talked about letting people play with the machine learning model and


00:04:49.360 --> 00:04:50.840
you change the inputs and stuff.


00:04:50.840 --> 00:04:55.440
It just completely changes the round trip speed because the alternative might be,


00:04:55.440 --> 00:04:59.200
I'll make, I'll get you a PDF and you can read the report and then what if we


00:04:59.200 --> 00:05:02.320
change this, all right, at tomorrow's meeting, I'll bring the new PDF.


00:05:02.320 --> 00:05:05.280
No, no, no, no, no, no, no. Just empower people and give them these tools.


00:05:05.280 --> 00:05:09.480
And yet at the same time, data scientists are not web developers, certainly not in


00:05:09.480 --> 00:05:14.260
the super dynamic, front-end, Ajax callback way of programming, right.


00:05:14.260 --> 00:05:15.900
That's a different skill to be sure.


00:05:15.900 --> 00:05:20.300
And so it's not like their data science skills by default make them.


00:05:20.300 --> 00:05:21.300
Able to build these.


00:05:21.300 --> 00:05:23.520
And even if you could, is it a good use of your time?


00:05:23.520 --> 00:05:23.780
Right?


00:05:23.780 --> 00:05:24.600
Yeah, absolutely.


00:05:24.600 --> 00:05:28.880
And yeah, so it's like the PDF report is definitely like one, one way of doing it.


00:05:28.880 --> 00:05:32.260
The other way that we tried to do sometimes is we'll just hand it off to someone and


00:05:32.260 --> 00:05:34.900
We'll have them build the web, but then that just takes longer.


00:05:34.900 --> 00:05:36.220
You have to like explain everything to them.


00:05:36.220 --> 00:05:36.580
Right.


00:05:36.580 --> 00:05:40.660
I think like the make it really impactful as if the person who made the model


00:05:40.660 --> 00:05:44.620
convey themselves, they can just create the web app, the demo, like immediately.


00:05:44.620 --> 00:05:46.840
a lot of these, a lot of data scientists are in Python, right?


00:05:46.840 --> 00:05:50.140
So that kind of means you need like a Python based tool to get you up


00:05:50.140 --> 00:05:51.280
and running really quickly.


00:05:51.280 --> 00:05:53.780
And a lot of them, yeah, like you said, don't know about web programming.


00:05:53.780 --> 00:05:56.760
So you've got to like abstract that away as much as you can, like as much as it


00:05:56.760 --> 00:06:00.300
makes sense, so that they're not like daunted or it's not like, okay, now I'm


00:06:00.700 --> 00:06:04.020
Like I'm really good at Pytorch and training, like all these things that like


00:06:04.020 --> 00:06:07.260
now I need to learn about what it's like servers and all that stuff.


00:06:07.260 --> 00:06:09.980
It's like, it's like almost a different skill set for a lot of people.


00:06:09.980 --> 00:06:10.780
It really is.


00:06:10.780 --> 00:06:12.700
And the handed off to somebody else.


00:06:12.700 --> 00:06:16.900
It's also it's slow, but also it only works for certain situations, right?


00:06:16.900 --> 00:06:20.460
Like a lot of data scientists, I spec don't have a whole software team


00:06:20.460 --> 00:06:22.620
supporting them as they need.


00:06:22.620 --> 00:06:22.900
Right.


00:06:22.900 --> 00:06:25.220
They're the sole person at their company.


00:06:25.220 --> 00:06:28.500
So you said you had gone into statistics and found your way


00:06:28.500 --> 00:06:29.860
over to this side of that world.


00:06:29.900 --> 00:06:34.860
You feel like it's a golden age for statisticians now, because when I went to


00:06:34.860 --> 00:06:39.740
college, it's like, well, you could be an actuary or you could work at an insurance


00:06:39.740 --> 00:06:43.620
company, or maybe some other company might be interested in hiring somebody who does


00:06:43.620 --> 00:06:43.900
stats.


00:06:43.900 --> 00:06:46.940
You work at the U S bureau of statistics.


00:06:46.940 --> 00:06:47.700
Yeah, exactly.


00:06:47.700 --> 00:06:52.420
And that was, and now with the kind of blending into data science, there's just


00:06:52.420 --> 00:06:53.180
so in demand.


00:06:53.180 --> 00:06:55.900
So when it was like, the world is so open for that now.


00:06:55.900 --> 00:06:58.260
It definitely became a much sexier career.


00:06:58.260 --> 00:07:02.480
And I think I got lucky that I got into it like right before, right.


00:07:02.480 --> 00:07:05.360
As it was starting to take off, like at that point, like data science


00:07:05.360 --> 00:07:07.000
wasn't really like a term yet.


00:07:07.000 --> 00:07:10.700
So not that old, but yeah, at that time it wasn't really, there were like, I


00:07:10.700 --> 00:07:13.960
think at that point, like they were called it's like research scientists


00:07:13.960 --> 00:07:15.440
was more like the term, right.


00:07:15.440 --> 00:07:18.900
Which still sounds a little bit dry, but then it got rebranded as data science.


00:07:18.900 --> 00:07:19.320
Yeah.


00:07:19.320 --> 00:07:20.340
I mean, I think it's a group.


00:07:20.340 --> 00:07:22.820
I mean, I would say it's always a good time to study statistics.


00:07:22.820 --> 00:07:26.080
I think like a lot of people, if someone were to come back to me and say, I have


00:07:26.080 --> 00:07:28.760
I have no idea what I want to major in, but I have some aptitude for math.


00:07:28.760 --> 00:07:31.160
I would say like major in statistics, I think it's like really useful.


00:07:31.160 --> 00:07:33.000
It has like a lot of applications.


00:07:33.000 --> 00:07:37.880
But I think now also in terms of tech, I feel like definitely like it's sort of like the,


00:07:37.880 --> 00:07:39.800
it's the era of the Renaissance person, right?


00:07:39.800 --> 00:07:42.120
Like you have to know a little bit of everything now, right?


00:07:42.120 --> 00:07:47.240
Because it's like stats, programming, math, like all these things are starting to like


00:07:47.240 --> 00:07:48.840
blend it, blend together.


00:07:48.840 --> 00:07:52.620
And yeah, I think it's like a lot of people I really respect pull from all these disciplines


00:07:52.620 --> 00:07:53.620
like seamlessly, right?


00:07:53.620 --> 00:07:56.620
And I think it's, yeah, I think that's where we are now.


00:07:56.620 --> 00:07:56.920
Yeah.


00:07:56.920 --> 00:07:58.000
It's a super fun time.


00:07:58.000 --> 00:08:01.960
If you're excited about always learning new things and sort of bettering


00:08:01.960 --> 00:08:05.020
yourself and bringing in this thing and mixing it that way, if you'd rather


00:08:05.020 --> 00:08:07.260
just be done learning, maybe not so much.


00:08:07.260 --> 00:08:07.840
Absolutely.


00:08:07.840 --> 00:08:09.800
Can't just show up for 20 years.


00:08:09.800 --> 00:08:10.720
It'd be okay.


00:08:10.720 --> 00:08:13.900
I guess if you were like maintaining code, well, the code, it would be okay,


00:08:13.900 --> 00:08:16.040
but not in the machine learning space.


00:08:16.040 --> 00:08:18.480
And machine learning also is just crazy.


00:08:18.480 --> 00:08:22.480
We've got large language models just running loose everywhere now.


00:08:22.540 --> 00:08:23.540
What do you think about all that?


00:08:23.540 --> 00:08:26.220
It's definitely like a very exciting time to be alive.


00:08:26.220 --> 00:08:31.140
I think pretty crazy that when I got started in ML six years ago, it was, it


00:08:31.140 --> 00:08:32.460
definitely was like very niche, right.


00:08:32.460 --> 00:08:36.060
And like the tools that people use and like the language about it definitely


00:08:36.060 --> 00:08:37.460
did not penetrate the mainstream.


00:08:37.460 --> 00:08:41.100
But now it seems like, like the technologies and the algorithms, the


00:08:41.100 --> 00:08:43.620
models, the data sets are all things that people talk about now.


00:08:43.620 --> 00:08:43.820
Right.


00:08:43.820 --> 00:08:48.900
And I think we've all had an older relative ask us about ChatGPT or like the


00:08:48.900 --> 00:08:53.040
Like the latest trend or stable diffusion with the image, the AI image generation.


00:08:53.040 --> 00:08:55.480
I think it has penetrated every part of this.


00:08:55.480 --> 00:08:58.520
I think like part of the reason why that is, is one, because one, like the


00:08:58.520 --> 00:09:00.320
technology is like way more impressive now, right?


00:09:00.320 --> 00:09:04.620
Like these algorithms are able to do things that were unimaginable, like


00:09:04.620 --> 00:09:06.840
2017, right, when I graduated college.


00:09:06.840 --> 00:09:10.260
But also it's just, these models are much easier to share and use now.


00:09:10.260 --> 00:09:10.500
Right.


00:09:10.500 --> 00:09:14.720
And I think part of the reason why tech PT is so, which took off so quickly,


00:09:14.720 --> 00:09:16.200
which was like the interface is so intuitive.


00:09:16.200 --> 00:09:16.620
It is.


00:09:16.660 --> 00:09:20.340
We've been chatting with each other for like decades, like over the internet.


00:09:20.340 --> 00:09:20.660
Right.


00:09:20.660 --> 00:09:25.020
And the user interface is so simple and it works so fits our mental


00:09:25.020 --> 00:09:27.500
models so quickly or so easily.


00:09:27.500 --> 00:09:30.580
But you know, under the hood, it's like this incredibly complex process.


00:09:30.580 --> 00:09:30.860
Right.


00:09:30.860 --> 00:09:31.380
Right.


00:09:31.380 --> 00:09:31.780
Right.


00:09:31.780 --> 00:09:32.420
Yeah.


00:09:32.420 --> 00:09:32.980
Right.


00:09:32.980 --> 00:09:35.700
And I think that's like where tools like radio come into play.


00:09:35.700 --> 00:09:35.940
Right.


00:09:35.940 --> 00:09:39.340
It's just, there's a bunch of like incredible, like amazing research


00:09:39.340 --> 00:09:43.580
happening, but unless other people can use it, play with it, evaluate it, like


00:09:43.580 --> 00:09:45.300
it's almost as if it doesn't exist.


00:09:45.300 --> 00:09:45.540
Right.


00:09:45.540 --> 00:09:49.900
And I think radio really helps you create like a demo, an app that other people can


00:09:49.900 --> 00:09:52.500
use and play with and evaluate your model.


00:09:52.500 --> 00:09:55.060
And then, and then just like that, anyone can use it, right?


00:09:55.060 --> 00:09:57.980
Like, you don't, you no longer have to be like a technical person and you don't have


00:09:57.980 --> 00:10:01.860
to like Python some script or something and then go to a website, right?


00:10:01.860 --> 00:10:03.020
You can just go to a website, right?


00:10:03.020 --> 00:10:05.700
You can just send someone a link and then they can play with the state of the art.


00:10:05.700 --> 00:10:06.580
It's pretty, pretty cool.


00:10:06.580 --> 00:10:09.180
Can you control a combo box and a button?


00:10:09.180 --> 00:10:09.460
Yeah.


00:10:09.460 --> 00:10:10.100
Something like that.


00:10:10.100 --> 00:10:10.340
Right.


00:10:10.340 --> 00:10:10.540
Yeah.


00:10:10.540 --> 00:10:11.340
Then you're qualified.


00:10:11.340 --> 00:10:11.940
It's wild.


00:10:12.140 --> 00:10:16.500
One of the things that surprises me is for such insane technology that


00:10:16.500 --> 00:10:22.400
leverages so many servers to ChatGPT and friends, the user interface for it is so


00:10:22.400 --> 00:10:25.740
mundane, not, I don't mean that as a derogatory term, but it's just like,


00:10:25.740 --> 00:10:28.980
well, you just talk to it in this text box and it just talks, there's not like


00:10:28.980 --> 00:10:34.180
a crazy new UI where you put on 3d glasses and where it's just a chat box.


00:10:34.180 --> 00:10:36.100
But what it does is incredible.


00:10:36.100 --> 00:10:40.180
Similar for mid journey and other things you just slash imagine.


00:10:40.180 --> 00:10:41.240
Just chat with it.


00:10:41.240 --> 00:10:45.840
But so there's this sort of weird paradox of this incredible,


00:10:45.840 --> 00:10:47.540
simple way to interact with it.


00:10:47.540 --> 00:10:51.140
And yet what it does is I guess it's a natural way to interact with it,


00:10:51.140 --> 00:10:52.280
which is what's surprising.


00:10:52.280 --> 00:10:52.660
Yeah.


00:10:52.660 --> 00:10:55.160
Part of the reason I think it's just like the natural language.


00:10:55.160 --> 00:10:56.160
Like interface.


00:10:56.160 --> 00:10:57.880
I think a lot of people like resonate with that.


00:10:57.880 --> 00:10:59.300
I think you'd have to explain that, right?


00:10:59.300 --> 00:11:01.640
Like you just type something and then it'll respond, right?


00:11:01.640 --> 00:11:03.000
Like it won't, it won't error.


00:11:03.000 --> 00:11:03.220
Right.


00:11:03.220 --> 00:11:07.300
And I think even like stuff that isn't just purely chat based, I think like


00:11:07.300 --> 00:11:09.960
stable diffusion, like the web UI, right?


00:11:09.960 --> 00:11:11.720
I think it's, it has a lot of controls.


00:11:11.720 --> 00:11:11.920
Right.


00:11:11.920 --> 00:11:15.540
But at the end of the day, it's like a Photoshop S interface, right?


00:11:15.540 --> 00:11:18.560
Where it's like someone who's used to that kind of software, like


00:11:18.560 --> 00:11:20.200
it's what they expect, right?


00:11:20.200 --> 00:11:23.880
You like upload an image and then you like, you can like get a tool to


00:11:23.880 --> 00:11:28.140
blur something out and then you can obtain it or obtain it and stuff like that.


00:11:28.140 --> 00:11:32.320
So I forget who said it, but I think some, someone said that MLs, it's


00:11:32.320 --> 00:11:33.800
not really like the product.


00:11:33.800 --> 00:11:35.980
It's like the, like in the background, right?


00:11:35.980 --> 00:11:39.760
Like the most successful ML products, they don't really feel like they're ML.


00:11:39.800 --> 00:11:40.020
Right.


00:11:40.020 --> 00:11:43.260
It's like the MLs like abstracted away and it just makes your


00:11:43.260 --> 00:11:44.360
experience like that much better.


00:11:44.360 --> 00:11:44.540
Right.


00:11:44.540 --> 00:11:47.420
And I think that's what all these different tools are showing.


00:11:47.420 --> 00:11:47.880
Amazing.


00:11:47.880 --> 00:11:48.340
All right.


00:11:48.340 --> 00:11:52.040
So let's talk about Gradio and I'm going to ask you to do something a


00:11:52.040 --> 00:11:55.160
little bit funky to kick this off, but let's talk about what just,


00:11:55.160 --> 00:11:57.640
what other apps are like Gradio.


00:11:57.640 --> 00:12:01.400
So things that come to mind for me are like StreamYard, for example.


00:12:01.400 --> 00:12:01.920
Streamlit.


00:12:01.920 --> 00:12:02.640
Sorry, that's what I mean.


00:12:02.640 --> 00:12:03.340
Stream, yeah.


00:12:03.340 --> 00:12:03.740
Streamlit.


00:12:03.740 --> 00:12:06.140
I'm reading the words of our app that we're using.


00:12:06.140 --> 00:12:07.680
Streamlit, not Streamyard.


00:12:07.940 --> 00:12:11.380
Streamlit and other, just give people a sense of what are the categories of


00:12:11.380 --> 00:12:14.940
apps that's in the same space so they can get a mental model for what Gradio is.


00:12:14.940 --> 00:12:15.320
For sure.


00:12:15.320 --> 00:12:15.500
Yeah.


00:12:15.500 --> 00:12:18.060
So I think like Streamlit is a good comparison.


00:12:18.060 --> 00:12:22.820
Like Plotly, Dash, I think is also in the same ecosystem.


00:12:22.820 --> 00:12:24.880
Shiny, I think.


00:12:24.880 --> 00:12:25.460
Yeah.


00:12:25.460 --> 00:12:26.980
I think like the first programming language.


00:12:26.980 --> 00:12:27.140
Yeah.


00:12:27.140 --> 00:12:30.660
I just had Joe on to talk about Shiny for Python recently.


00:12:30.660 --> 00:12:30.860
Yeah.


00:12:30.860 --> 00:12:32.820
They're all definitely in the same ecosystem.


00:12:32.820 --> 00:12:37.360
If you go to the Gradio homepage, Gradio.app, you can see some of the


00:12:37.360 --> 00:12:39.940
apps that you can build with Gradio really quickly.


00:12:39.940 --> 00:12:40.640
Absolutely.


00:12:40.640 --> 00:12:40.880
Yeah.


00:12:40.880 --> 00:12:44.180
But that doesn't necessarily limit, like what you see on the landing page is


00:12:44.180 --> 00:12:45.460
not all that you can build with Gradio.


00:12:45.460 --> 00:12:49.360
I think those are just like the eye-catching quick examples, just because.


00:12:49.360 --> 00:12:52.940
Like I said, like Gradio is built to get these kinds of examples


00:12:52.940 --> 00:12:56.940
up and running really quickly, but you can do like lots of complex stuff with Gradio.


00:12:56.940 --> 00:12:57.340
Excellent.


00:12:57.340 --> 00:12:57.520
Yeah.


00:12:57.520 --> 00:12:59.360
So we'll let's dive into it.


00:12:59.360 --> 00:13:02.860
So you've already given it a bit of a introduction for us.


00:13:02.860 --> 00:13:06.200
Maybe we could work, just start by discussing how you might take, you've


00:13:06.200 --> 00:13:09.220
got some different types of problems you can solve on your homepage and it


00:13:09.220 --> 00:13:14.260
shows you the code, the entire code and then the UI that comes out of it.


00:13:14.260 --> 00:13:16.860
So maybe we can, you could just talk us through the sketch recognition.


00:13:16.860 --> 00:13:19.260
It's one of the types of UIs you could build here.


00:13:19.260 --> 00:13:22.480
So with the sketch recognition, you just, what you draw, it's


00:13:22.480 --> 00:13:24.460
definitely a bird I drew there or a mountain.


00:13:24.460 --> 00:13:25.080
I'm not sure.


00:13:25.080 --> 00:13:25.900
How do you think about Gradio?


00:13:25.900 --> 00:13:26.000
Right.


00:13:26.000 --> 00:13:29.660
So Gradio is a, the Python library, right?


00:13:29.660 --> 00:13:32.600
Python is the main language used to interface or to build Gradio apps.


00:13:32.600 --> 00:13:33.580
Pip install Gradio.


00:13:33.580 --> 00:13:33.840
Yeah.


00:13:33.840 --> 00:13:35.180
You pip install Gradio, right?


00:13:35.180 --> 00:13:37.580
And then what does Gradio do at the highest level?


00:13:37.580 --> 00:13:43.340
Gradio turns a Python function, any Python function into a interactive web app.


00:13:43.340 --> 00:13:43.780
Right.


00:13:43.780 --> 00:13:47.140
So when you think of function, right, function has inputs and outputs.


00:13:47.140 --> 00:13:50.740
So these inputs correspond, these inputs and outputs correspond to things that


00:13:50.740 --> 00:13:51.860
will be drawn on the page, right?


00:13:51.860 --> 00:13:55.060
And, and Gradio comes with a standard set of inputs, right?


00:13:55.060 --> 00:14:01.100
There's like text boxes, dropdowns, number fields, data frames, plots,


00:14:01.100 --> 00:14:04.420
anything like that, but also like drawing tools, like a sketch pad.


00:14:04.580 --> 00:14:08.380
And then the output, it can be, it can be any of these other components, but


00:14:08.380 --> 00:14:09.660
that could also be like a label, right.


00:14:09.660 --> 00:14:11.380
To show like a machine learning prediction.


00:14:11.380 --> 00:14:15.460
So all you need to do is take, write a plain Python function that takes in a


00:14:15.460 --> 00:14:20.820
drawing and returns a set of probabilities or competences, and then Gradio can wrap


00:14:20.820 --> 00:14:24.740
that in one line of code and turned it into an interactive web app, like we see


00:14:24.740 --> 00:14:28.060
here, if you're on the YouTube stream, you can see what Michael is doing.


00:14:28.060 --> 00:14:31.860
There's like a sketch pad area and then he can scribble on it and then


00:14:31.860 --> 00:14:34.220
immediately he'll get a prediction out.


00:14:34.420 --> 00:14:34.760
Yeah.


00:14:34.760 --> 00:14:36.580
Let's see if I can draw an owl.


00:14:36.580 --> 00:14:37.260
Maybe.


00:14:37.260 --> 00:14:37.560
Right.


00:14:37.560 --> 00:14:39.380
So it's like, okay, let's see how I do.


00:14:39.380 --> 00:14:39.860
I don't know.


00:14:39.860 --> 00:14:40.040
Yeah.


00:14:40.040 --> 00:14:40.540
Syringe.


00:14:40.540 --> 00:14:42.460
We've got to make the model better.


00:14:42.460 --> 00:14:42.740
Right.


00:14:42.740 --> 00:14:44.560
So it could be a cat.


00:14:44.560 --> 00:14:45.600
It definitely could be a cat.


00:14:45.600 --> 00:14:46.880
I can see cat.


00:14:46.880 --> 00:14:47.400
I can see it.


00:14:47.400 --> 00:14:48.860
I think I got to make my drawing better.


00:14:48.860 --> 00:14:53.320
But so the idea is you have a regular function that takes the inputs and outputs.


00:14:53.320 --> 00:14:54.920
There's no UI whatsoever.


00:14:54.920 --> 00:14:57.080
And there's also no reactive programming.


00:14:57.080 --> 00:15:00.880
You're not like hooking events where I redraw and it just reruns.


00:15:00.880 --> 00:15:01.140
Right.


00:15:01.140 --> 00:15:02.560
That's not part of my code.


00:15:02.560 --> 00:15:04.100
I write as a Python person.


00:15:04.180 --> 00:15:05.820
- Right. - And then you just say,


00:15:05.820 --> 00:15:08.300
gr.interface, give it the function,


00:15:08.300 --> 00:15:09.740
and then you say the inputs are,


00:15:09.740 --> 00:15:11.860
in this case you say it's just a sketchpad.


00:15:11.860 --> 00:15:14.340
And so I get this UI that I can draw on,


00:15:14.340 --> 00:15:16.620
that I've been attempting to draw an owl on.


00:15:16.620 --> 00:15:17.700
It's probably missing the eyes.


00:15:17.700 --> 00:15:19.300
I think it's the eyes that are missing.


00:15:19.300 --> 00:15:21.620
- The latter. (laughs)


00:15:21.620 --> 00:15:25.080
- It's not about testing the underlying model, is it?


00:15:25.080 --> 00:15:26.620
And then you say the outputs that are labeled.


00:15:26.620 --> 00:15:29.200
Now a lot of UIs, people might think a label


00:15:29.200 --> 00:15:32.340
is just a non-interactive piece of text.


00:15:32.340 --> 00:15:34.800
But here there's more of a machine learning label, right?


00:15:34.800 --> 00:15:38.460
You've got like a cool horizontal bar graph that has percentages


00:15:38.460 --> 00:15:39.580
and talks about its guesses.


00:15:39.580 --> 00:15:43.660
So it's like a machine learning labeled response report.


00:15:43.660 --> 00:15:48.120
Just a machine learning person would, when they see label, they think that's right.


00:15:48.120 --> 00:15:52.120
They don't think of the standard web, like just like a text box.


00:15:52.120 --> 00:15:52.320
Right.


00:15:52.320 --> 00:15:54.180
So yeah, like label four type of thing.


00:15:54.180 --> 00:15:55.100
And then HTML.


00:15:55.100 --> 00:15:55.300
Yeah.


00:15:55.300 --> 00:15:55.560
Right.


00:15:55.560 --> 00:15:58.540
So that's one of the things that are one of the ways that kind of radio


00:15:58.540 --> 00:16:00.120
is built for that kind of audience.


00:16:00.120 --> 00:16:00.320
Right.


00:16:00.320 --> 00:16:03.760
it's like the high level parameters match that mental model.


00:16:03.760 --> 00:16:09.400
- This portion of Talk Python to Me is brought to you


00:16:09.400 --> 00:16:11.920
by JetBrains and PyCharm.


00:16:11.920 --> 00:16:13.840
Are you a data scientist or a web developer


00:16:13.840 --> 00:16:16.520
looking to take your projects to the next level?


00:16:16.520 --> 00:16:19.440
Well, I have the perfect tool for you, PyCharm.


00:16:19.440 --> 00:16:22.080
PyCharm is a powerful integrated development environment


00:16:22.080 --> 00:16:25.320
that empowers developers and data scientists like us


00:16:25.320 --> 00:16:28.840
to write clean and efficient code with ease.


00:16:28.840 --> 00:16:30.980
Whether you're analyzing complex data sets


00:16:30.980 --> 00:16:33.260
or building dynamic web applications,


00:16:33.260 --> 00:16:34.920
PyCharm has got you covered.


00:16:34.920 --> 00:16:37.500
With its intuitive interface and robust features,


00:16:37.500 --> 00:16:38.980
you can boost your productivity


00:16:38.980 --> 00:16:42.060
and bring your ideas to life faster than ever before.


00:16:42.060 --> 00:16:44.680
For data scientists, PyCharm offers seamless integration


00:16:44.680 --> 00:16:48.380
with popular libraries like NumPy, Pandas, and Matplotlib.


00:16:48.380 --> 00:16:51.660
You can explore, visualize, and manipulate data effortlessly,


00:16:51.660 --> 00:16:55.500
unlocking valuable insights with just a few lines of code.


00:16:55.500 --> 00:16:56.580
And for us web developers,


00:16:56.580 --> 00:16:58.460
PyCharm provides a rich set of tools


00:16:58.460 --> 00:17:00.060
to streamline your workflow.


00:17:00.060 --> 00:17:01.460
From intelligent code completion


00:17:01.460 --> 00:17:03.500
to advanced debugging capabilities,


00:17:03.500 --> 00:17:06.340
PyCharm helps you write clean, scalable code


00:17:06.340 --> 00:17:09.300
that powers stunning web applications.


00:17:09.300 --> 00:17:11.740
Plus, PyCharm's support for popular frameworks


00:17:11.740 --> 00:17:15.060
like Django, FastAPI, and React make it a breeze


00:17:15.060 --> 00:17:17.520
to build and deploy your web projects.


00:17:17.520 --> 00:17:20.100
It's time to say goodbye to tedious configuration


00:17:20.100 --> 00:17:22.360
and hello to rapid development.


00:17:22.360 --> 00:17:23.780
But wait, there's more.


00:17:23.780 --> 00:17:26.060
With PyCharm, you get even more advanced features


00:17:26.060 --> 00:17:28.780
like remote development, database integration,


00:17:28.780 --> 00:17:29.660
and version control,


00:17:29.660 --> 00:17:32.620
ensuring your projects stay organized and secure.


00:17:32.620 --> 00:17:34.340
So whether you're diving into data science


00:17:34.340 --> 00:17:35.980
or shaping the future of the web,


00:17:35.980 --> 00:17:37.860
PyCharm is your go-to tool.


00:17:37.860 --> 00:17:39.740
Join me and try PyCharm today.


00:17:39.740 --> 00:17:44.740
Just visit talkpython.fm/done-with-pycharm,


00:17:44.740 --> 00:17:46.420
links in your show notes,


00:17:46.420 --> 00:17:48.820
and experience the power of PyCharm firsthand


00:17:48.820 --> 00:17:51.000
for three months free.


00:17:51.000 --> 00:17:54.260
PyCharm, it's how I get work done.


00:17:54.260 --> 00:17:55.220
- One thing you mentioned earlier


00:17:55.220 --> 00:17:59.000
that there's no like explicit reactivity that you as a programmer have to write.


00:17:59.000 --> 00:18:01.940
That's definitely true in the GR dot interface case.


00:18:01.940 --> 00:18:05.780
GR dot interface, like abstracts all that away from you, but Gradio also offers.


00:18:05.780 --> 00:18:07.460
So this is your simple case.


00:18:07.460 --> 00:18:08.660
Like I just want.


00:18:08.660 --> 00:18:11.340
Just run this function with these inputs and outputs, and I


00:18:11.340 --> 00:18:12.700
want a real basic variant.


00:18:12.700 --> 00:18:13.060
Okay.


00:18:13.060 --> 00:18:15.660
Gradle also offers like a lower level API, where you can


00:18:15.660 --> 00:18:18.140
explicitly control the layout.


00:18:18.140 --> 00:18:18.340
Right.


00:18:18.340 --> 00:18:19.980
So right now everything is like side by side.


00:18:19.980 --> 00:18:23.220
You can put them horizontally across columns, rows.


00:18:23.220 --> 00:18:24.820
You can add components, right.


00:18:24.820 --> 00:18:28.940
And then you can also be more explicit and saying, okay, when this input


00:18:28.940 --> 00:18:32.980
changes, run this function and then that will populate this and stuff like that.


00:18:32.980 --> 00:18:34.440
And you can change these things together.


00:18:34.440 --> 00:18:34.900
So.


00:18:34.900 --> 00:18:35.460
That makes sense.


00:18:35.460 --> 00:18:39.540
It may be, it's expensive to, it's expensive to generate some portion.


00:18:39.540 --> 00:18:41.220
Do you want to cache it as much as possible?


00:18:41.220 --> 00:18:41.460
Yeah.


00:18:41.460 --> 00:18:45.660
You just want to be, have like more control over like exactly what


00:18:45.660 --> 00:18:47.620
happens when things change, right?


00:18:47.620 --> 00:18:51.140
You could, Gradle gives you that, that control, but for a lot of use cases,


00:18:51.140 --> 00:18:54.020
you can get, you can get really far with GR that interface.


00:18:54.020 --> 00:18:56.940
And then the other companion piece, which isn't on the landing page.


00:18:56.940 --> 00:19:01.120
Cause we just released it maybe two weeks ago, it's dr.chat interface, right?


00:19:01.120 --> 00:19:02.240
So you could build like


00:19:02.240 --> 00:19:02.340
.


00:19:02.340 --> 00:19:04.320
Oh, interesting to an LLM or something.


00:19:04.320 --> 00:19:04.560
Yeah.


00:19:04.560 --> 00:19:06.880
You can build a chat UI for yeah.


00:19:06.880 --> 00:19:09.820
Like an LLM just in one line of code.


00:19:09.820 --> 00:19:13.660
And I think I can try to maybe find an example of that real quick.


00:19:13.660 --> 00:19:13.940
Yeah.


00:19:13.940 --> 00:19:17.820
While you're looking, do you offer any guidance or any opinionated


00:19:17.820 --> 00:19:19.980
stuff on which LLM to choose?


00:19:19.980 --> 00:19:23.900
Or do you just say it's just a chat interface and you write the code to make it happen?


00:19:23.900 --> 00:19:29.100
You just write the code to, yeah, just given the message, what's what should the response be?


00:19:29.100 --> 00:19:30.940
And then that's the interface.


00:19:30.940 --> 00:19:31.180
Yeah.


00:19:31.180 --> 00:19:34.620
And then there's some interesting options people might want to pick.


00:19:34.620 --> 00:19:40.140
Obviously you could pick open AI as and use their API, but there's things like private GPT,


00:19:40.140 --> 00:19:44.620
which allows you to ask questions about your documents, but a hundred percent private,


00:19:44.620 --> 00:19:44.860
right?


00:19:44.860 --> 00:19:49.580
You could just give it hundreds of docs and say, learn these and we're going to talk to you about


00:19:49.580 --> 00:19:51.500
it or something along those lines.


00:19:51.500 --> 00:19:52.820
There's the Ling chain.


00:19:52.820 --> 00:19:53.460
Right.


00:19:53.460 --> 00:19:53.920
Yeah.


00:19:53.920 --> 00:19:56.920
Which is a pretty interesting option for building these things.


00:19:56.920 --> 00:19:57.580
Llama.


00:19:57.580 --> 00:19:59.660
Like the new Llama 2.


00:19:59.660 --> 00:20:00.020
Yeah.


00:20:00.020 --> 00:20:04.660
So I think in the chat, I just posted like a Gradio Llama 2 UI that we can show.


00:20:04.660 --> 00:20:05.780
It's on Hugging Face.


00:20:05.780 --> 00:20:08.980
So I think we can talk about the hosting on Hugging Face as well.


00:20:08.980 --> 00:20:09.300
Okay.


00:20:09.300 --> 00:20:09.480
Yeah.


00:20:09.480 --> 00:20:10.820
So this is the chat UI.


00:20:10.820 --> 00:20:13.260
So it's if you were to scroll down a little bit.


00:20:13.260 --> 00:20:14.420
The UI says chat bot.


00:20:14.420 --> 00:20:15.380
You can type a message.


00:20:15.380 --> 00:20:15.700
Yeah.


00:20:15.700 --> 00:20:17.140
I'll ask it what the podcast says.


00:20:17.140 --> 00:20:18.260
Hey, I'm here to help you.


00:20:18.460 --> 00:20:22.100
Puck Python is a podcast and community dedicated to helping developers improve


00:20:22.100 --> 00:20:24.500
their skills, interviews and experts in the field.


00:20:24.500 --> 00:20:25.100
That's you, Freddie.


00:20:25.100 --> 00:20:26.620
Resources.


00:20:26.620 --> 00:20:26.900
Yeah.


00:20:26.900 --> 00:20:27.820
What do you want to know?


00:20:27.820 --> 00:20:31.460
Under the hood, this is using a LLAMA 2, 70 billion LLM.


00:20:31.460 --> 00:20:31.940
Nice.


00:20:31.940 --> 00:20:33.660
I can ask you what the latest episode is.


00:20:33.660 --> 00:20:35.300
So it gives me a sense how far back it goes.


00:20:35.300 --> 00:20:36.460
That's about two years old.


00:20:36.460 --> 00:20:36.820
So, okay.


00:20:36.820 --> 00:20:37.260
Interesting.


00:20:37.260 --> 00:20:37.660
There you go.


00:20:37.660 --> 00:20:37.820
Yeah.


00:20:37.820 --> 00:20:38.300
Makes sense.


00:20:38.300 --> 00:20:41.460
Oh wait, no, this is not so sure about that.


00:20:41.460 --> 00:20:44.900
It says, yeah, I think there's a little bit of a mismatch, but this is really cool.


00:20:44.900 --> 00:20:49.900
And so you basically plug in whatever LLM you want to into this and they, they


00:20:49.900 --> 00:20:52.360
put the, or you put the LL, the llama too.


00:20:52.360 --> 00:20:55.780
If you scroll up a little bit in the website, if you, when you see those


00:20:55.780 --> 00:20:58.740
like three bars, yeah, the hamburger deal.


00:20:58.740 --> 00:20:59.480
No, sorry.


00:20:59.480 --> 00:21:00.240
That's not it.


00:21:00.240 --> 00:21:01.020
Other hamburger.


00:21:01.020 --> 00:21:01.560
Where is it?


00:21:01.560 --> 00:21:02.240
There are three dots.


00:21:02.240 --> 00:21:02.740
Maybe.


00:21:02.740 --> 00:21:04.140
I guess maybe because you don't have an account.


00:21:04.140 --> 00:21:05.060
You can't see the file.


00:21:05.060 --> 00:21:05.420
Oh yeah.


00:21:05.420 --> 00:21:08.900
If you go to files there, if you go to files, I'm going to app.py.


00:21:08.900 --> 00:21:11.140
This is the source code of the, oh, interesting.


00:21:11.140 --> 00:21:11.640
Okay.


00:21:11.640 --> 00:21:14.240
If you scroll down the helper tags, and then this is the actual


00:21:14.240 --> 00:21:17.740
prediction function. It's about 20 lines of code. But if you scroll down, you


00:21:17.740 --> 00:21:22.860
see the chat interface code with gr blocks as demo, create a tab, a batch.


00:21:22.860 --> 00:21:26.320
Okay, the important thing is that your chat interface is just, it's just like


00:21:26.320 --> 00:21:30.920
a one line way to create a chatbot. It works similarly to the interface case,


00:21:30.920 --> 00:21:34.320
right? There's just a function in this case that it's an LMS, it handles like


00:21:34.320 --> 00:21:38.280
the responding to the each user message. And then you just call that and then


00:21:38.280 --> 00:21:43.880
you can call launch and then you get a UI. Nice. You get like a chat to BTS UI


00:21:43.880 --> 00:21:48.340
And in this case, it's a hundred lines of code, but you know, yeah, pretty simple.


00:21:48.340 --> 00:21:48.940
That is simple.


00:21:48.940 --> 00:21:51.660
And one of the things that's pretty cool here is section.


00:21:51.660 --> 00:21:56.300
You hook it to the type you set up is a streaming type versus


00:21:56.300 --> 00:21:58.340
the place I type as a batch.


00:21:58.340 --> 00:22:01.980
And then the function you give it is a generator with yield keywords.


00:22:01.980 --> 00:22:05.240
So it just, as you go through it, it makes choices and sends them back.


00:22:05.240 --> 00:22:09.140
Pretty advanced interaction for the UI to be, to run in like that.


00:22:09.140 --> 00:22:09.540
That's cool.


00:22:09.540 --> 00:22:12.380
In order to get streaming, there's no special syntax.


00:22:12.380 --> 00:22:16.040
You can just use the normal Python yield and then Grado knows how to feed that


00:22:16.040 --> 00:22:18.420
iteratively, feed that to the front end.


00:22:18.420 --> 00:22:20.560
And then you get like this responsive streaming UI.


00:22:20.560 --> 00:22:21.820
That's a really good call out.


00:22:21.820 --> 00:22:26.220
It's just like the, Grado tries to use like the core Python syntax and the core


00:22:26.220 --> 00:22:27.980
Python data types as much as possible.


00:22:27.980 --> 00:22:30.760
Just so to make it easy for people to get up and running.


00:22:30.760 --> 00:22:34.440
I just blew through this really quickly here, but basically from what I can tell


00:22:34.440 --> 00:22:38.620
is the amount of code here to actually implement this, that is not the, just


00:22:38.620 --> 00:22:42.640
the details of given this text, make the LLM do the thing.


00:22:42.640 --> 00:22:43.580
Five lines of code.


00:22:43.580 --> 00:22:43.900
Yeah.


00:22:43.900 --> 00:22:44.180
Yeah.


00:22:44.180 --> 00:22:44.700
Definitely true.


00:22:44.700 --> 00:22:44.820
Yeah.


00:22:44.820 --> 00:22:48.180
That should make people pretty excited about, Hey, I can write five lines of


00:22:48.180 --> 00:22:50.300
code, especially with an example to work from exactly.


00:22:50.300 --> 00:22:50.500
Yeah.


00:22:50.500 --> 00:22:51.700
So yeah, definitely.


00:22:51.700 --> 00:22:54.900
We need to get chat interface up and the landing page, but yeah, I think it's


00:22:54.900 --> 00:22:57.540
super easy to get complex demos running.


00:22:57.540 --> 00:22:59.580
I think it's just a handful lines of code.


00:22:59.580 --> 00:23:01.060
We mentioned shiny a little bit.


00:23:01.060 --> 00:23:03.820
Umar asks, how does it compare to shiny?


00:23:03.820 --> 00:23:05.060
How familiar with shiny?


00:23:05.060 --> 00:23:06.980
Can you not super familiar?


00:23:06.980 --> 00:23:08.220
I'm not going to say not familiar.


00:23:08.260 --> 00:23:11.620
I'm familiar with shiny, but not well enough to compare it directly to Gradio either.


00:23:11.620 --> 00:23:15.860
I mean, they live in the same general world of trying to create a UI.


00:23:15.860 --> 00:23:19.540
That's you don't have to write web apps for, but I don't think they're, I don't


00:23:19.540 --> 00:23:20.860
think they're totally the same, but they're similar.


00:23:20.860 --> 00:23:21.300
Okay.


00:23:21.300 --> 00:23:24.220
So we talked about setting up pip install.


00:23:24.220 --> 00:23:24.940
That's easy.


00:23:24.940 --> 00:23:27.540
You say you can choose from a variety of interface types.


00:23:27.540 --> 00:23:29.420
These are the widgets that you're talking about, right?


00:23:29.420 --> 00:23:33.300
You could like, in terms of the inputs and the outputs, we call them components.


00:23:33.300 --> 00:23:37.260
But yeah, there's, if you go to the docs pages about, we have about 30 something


00:23:37.260 --> 00:23:37.900
components.


00:23:37.900 --> 00:23:38.180
Wow.


00:23:38.180 --> 00:23:38.460
Okay.


00:23:38.460 --> 00:23:38.720
Yeah.


00:23:38.720 --> 00:23:44.740
So code, buttons, data frames, plots, files, pretty much like you name it.


00:23:44.740 --> 00:23:47.140
And we're adding components all the time.


00:23:47.140 --> 00:23:50.380
And we're also, one of the things that we're going to work on is letting the


00:23:50.380 --> 00:23:51.760
community create their own components.


00:23:51.760 --> 00:23:54.780
So if you have your own particular demo, your own particular web app, and you


00:23:54.780 --> 00:23:58.060
want to, you want this new component that we don't support, like how do you, we're


00:23:58.060 --> 00:24:01.140
working to make it easy for you to do that without having to merge something


00:24:01.140 --> 00:24:03.060
into 3DO upstream, right?


00:24:03.060 --> 00:24:04.220
And then other people can play with it.


00:24:04.220 --> 00:24:05.860
So we're working on that as well.


00:24:05.860 --> 00:24:09.380
But for the time being, it's yeah, about these like 30 something components.


00:24:09.380 --> 00:24:12.180
And then, yeah, you can mix and match them however you want.


00:24:12.180 --> 00:24:13.540
You've got quite a bit of them.


00:24:13.540 --> 00:24:16.340
Many of my people expect people would imagine.


00:24:16.340 --> 00:24:17.300
So you've got button.


00:24:17.300 --> 00:24:17.740
Yeah.


00:24:17.740 --> 00:24:20.380
Let's see, you've got data frame, which is pretty cool.


00:24:20.380 --> 00:24:24.520
And then the gallery image, the plots, like the line plots, scatter plot.


00:24:24.520 --> 00:24:27.340
Those are all pretty cool, but you've also got things like audio.


00:24:27.340 --> 00:24:28.780
What's the story with audio?


00:24:28.780 --> 00:24:32.580
You, this is how you, yeah, you can upload like a, an MP3 or a, or a


00:24:32.580 --> 00:24:37.860
a wave file directly or maybe for transcripts or sentiment analysis or something.


00:24:37.860 --> 00:24:38.460
Exactly.


00:24:38.460 --> 00:24:43.980
Like whisper essentially audio to transcription or also just a synthetic audio.


00:24:43.980 --> 00:24:44.140
Right.


00:24:44.140 --> 00:24:47.540
So there's like a bark and there's all these like machine learning demos that


00:24:47.540 --> 00:24:50.000
they go text to text to speech basically.


00:24:50.000 --> 00:24:51.060
And they're really advanced.


00:24:51.060 --> 00:24:52.900
So if you want it to display that, right.


00:24:52.900 --> 00:24:55.360
Like you ingest text, come out with audio.


00:24:55.360 --> 00:24:59.680
Like you can use like an audio output component and then you get, yeah, you get


00:24:59.680 --> 00:25:01.820
like a, you can play the audio directly in the browser.


00:25:01.940 --> 00:25:03.560
It's just like an audio tag in HTML.


00:25:03.560 --> 00:25:07.820
Obviously it does more from the UI, I'm sure, but it's to not just, I guess


00:25:07.820 --> 00:25:11.380
you would just do file if you really wanted to drop an MP3, but if you wanted


00:25:11.380 --> 00:25:14.700
to generate audio and let people see the results, then this audio


00:25:14.700 --> 00:25:16.100
thing would be the way to go.


00:25:16.100 --> 00:25:16.460
Yeah.


00:25:16.460 --> 00:25:19.100
And then you could also, the audio could also be like the input, right?


00:25:19.100 --> 00:25:22.580
You could just drag a drop, but you know, if you click on that box, it'll let you


00:25:22.580 --> 00:25:25.940
upload an audio if you have it and then you can play it.


00:25:25.940 --> 00:25:26.900
I have some audio.


00:25:26.900 --> 00:25:27.260
Yeah.


00:25:27.260 --> 00:25:31.380
I know that I have some, but let's see if I can find something to upload here.


00:25:31.380 --> 00:25:32.820
Here I'll upload a sponsor.


00:25:32.820 --> 00:25:35.580
Yeah, this is super short, so I can upload.


00:25:35.580 --> 00:25:35.700
Yeah.


00:25:35.700 --> 00:25:36.180
Look at that.


00:25:36.180 --> 00:25:37.340
And it just becomes a player.


00:25:37.340 --> 00:25:37.780
Excellent.


00:25:37.780 --> 00:25:40.100
You can play it and then you can also edit it as well.


00:25:40.100 --> 00:25:43.180
So you see that little pencil and you could like trim it.


00:25:43.180 --> 00:25:45.540
I like trim, trim it to make it shorter.


00:25:45.540 --> 00:25:45.940
Okay.


00:25:45.940 --> 00:25:46.220
Yeah.


00:25:46.220 --> 00:25:50.060
So yeah, lots of cool components like that, that we have.


00:25:50.060 --> 00:25:50.500
Yeah.


00:25:50.500 --> 00:25:53.820
All the standard form stuff like sliders and dropdowns and yeah.


00:25:53.820 --> 00:25:54.700
Highlighted text.


00:25:54.700 --> 00:25:58.940
And yeah, so the standard like form stuff, but then there's also complex, not


00:25:58.940 --> 00:26:01.840
complex, but more maybe domain specific ML stuff.


00:26:01.840 --> 00:26:04.880
So highlighted text, for example, like really big and like part of speech


00:26:04.880 --> 00:26:06.320
tagging, like NLP, right.


00:26:06.320 --> 00:26:08.060
So you can get a highlighted.


00:26:08.060 --> 00:26:12.200
it's like, depending on the tag that you apply to each word in the text, you'd


00:26:12.200 --> 00:26:14.320
get like different coloring and stuff like that.


00:26:14.320 --> 00:26:14.560
Yeah.


00:26:14.560 --> 00:26:16.840
So it's for MLP, like model 3d.


00:26:16.840 --> 00:26:20.120
So there's a lot of ML demos that come out that you can generate


00:26:20.120 --> 00:26:21.880
model 3d assets directly.


00:26:21.880 --> 00:26:24.080
So this lets you display them as well.


00:26:24.080 --> 00:26:28.540
So, yeah, so everywhere where we have everything from the most kind of basic


00:26:28.540 --> 00:26:33.640
general like web app stuff, domain specific machine learning components as well.


00:26:33.640 --> 00:26:33.820
Yeah.


00:26:33.820 --> 00:26:35.760
Let's see what else jumps out here.


00:26:35.760 --> 00:26:38.300
We have video as well, which is pretty cool.


00:26:38.300 --> 00:26:39.100
JSON.


00:26:39.100 --> 00:26:39.520
Yeah.


00:26:39.520 --> 00:26:41.400
There's a lot of what you can type in JSON.


00:26:41.400 --> 00:26:44.600
I guess it probably validates it and auto formats it something


00:26:44.600 --> 00:26:46.000
rather than just plain text.


00:26:46.000 --> 00:26:46.200
Yeah.


00:26:46.200 --> 00:26:48.640
When you return the JSON, it highlights it for you.


00:26:48.640 --> 00:26:50.320
You can copy it directly as well.


00:26:50.320 --> 00:26:50.960
So, okay.


00:26:50.960 --> 00:26:56.340
So when we were talking about the Gradio dot interface, it had, well, here's an


00:26:56.340 --> 00:26:57.720
input and here's an output.


00:26:57.840 --> 00:26:58.340
plural.


00:26:58.340 --> 00:27:03.540
So could you have, I say there's a sketch pad and a text box as the input and then


00:27:03.540 --> 00:27:06.040
the outputs are, I don't know, three other things.


00:27:06.040 --> 00:27:06.200
And


00:27:06.200 --> 00:27:08.040
yeah, that's a really good observation.


00:27:08.040 --> 00:27:08.200
Yeah.


00:27:08.200 --> 00:27:11.880
So you can have more than one input, more than one output for sure.


00:27:11.880 --> 00:27:12.040
Right.


00:27:12.040 --> 00:27:15.720
So if you go to the, I think the time series forecasting demo, I think that one


00:27:15.720 --> 00:27:17.280
has two, that's also on the homepage.


00:27:17.280 --> 00:27:17.680
Yeah.


00:27:17.680 --> 00:27:19.120
Also on the homepage.


00:27:19.120 --> 00:27:19.320
Right.


00:27:19.320 --> 00:27:24.080
So you can pick, I see it's like a toy example, like forecasting by installs,


00:27:24.080 --> 00:27:26.820
but you could pick here has two, two inputs, right?


00:27:26.820 --> 00:27:30.940
Like the time horizon and the library itself, both of them are, are dropdowns.


00:27:30.940 --> 00:27:31.140
Right.


00:27:31.140 --> 00:27:34.300
And then when either updates the plot updates, right.


00:27:34.300 --> 00:27:36.900
So there's also like how you can do plotting and think radio.


00:27:36.900 --> 00:27:38.700
And then also this is interesting.


00:27:38.700 --> 00:27:41.980
This is, this demo is built with the lower level API.


00:27:41.980 --> 00:27:44.780
You could build it with interface if you wanted to, just as an example,


00:27:44.780 --> 00:27:46.260
it's built with the lower level.


00:27:46.260 --> 00:27:46.980
API.


00:27:46.980 --> 00:27:47.160
Yeah.


00:27:47.160 --> 00:27:51.740
So I guess there's probably a library and time span, two arguments


00:27:51.740 --> 00:27:52.780
to the function that you write.


00:27:52.780 --> 00:27:55.540
And then just as you interact with these widgets, it just recalls


00:27:55.540 --> 00:27:56.860
it with whatever the values are.


00:27:56.860 --> 00:27:57.400
Exactly.


00:27:57.400 --> 00:27:59.620
And then the function itself returns a plot.


00:27:59.620 --> 00:28:01.720
So in this case, it's a plot, we plot, right?


00:28:01.720 --> 00:28:05.200
So by default, or, you know, we ship with support for a map,


00:28:05.200 --> 00:28:07.900
plot, lib, plotly, Bokeh, and Altair.


00:28:07.900 --> 00:28:12.040
So if I would create like a map, plot, lib object, do all the stuff to it


00:28:12.040 --> 00:28:15.340
that I would do in a notebook, instead of calling show, I just return it from


00:28:15.340 --> 00:28:17.080
my function and then it becomes part of the UI.


00:28:17.080 --> 00:28:17.680
Okay.


00:28:17.680 --> 00:28:18.000
Yeah.


00:28:18.000 --> 00:28:18.960
That seems pretty straightforward.


00:28:18.960 --> 00:28:19.280
Yeah.


00:28:19.280 --> 00:28:21.360
This one happens to be done with profit.


00:28:21.360 --> 00:28:22.880
A time series library.


00:28:23.080 --> 00:28:23.300
Yeah.


00:28:23.300 --> 00:28:26.940
You've got integration with a bunch of cool machine learning libraries here as well.


00:28:26.940 --> 00:28:27.160
Yeah.


00:28:27.160 --> 00:28:30.340
So the cool thing is pretty much if you can write a Python function for it,


00:28:30.340 --> 00:28:31.300
like it'll work with radio.


00:28:31.300 --> 00:28:35.700
It really doesn't need to be like us as a development team don't really need to


00:28:35.700 --> 00:28:39.480
build that many integrations to get anything that you're working with to work


00:28:39.480 --> 00:28:40.540
with radio, pretty much.


00:28:40.540 --> 00:28:44.680
If you can call a bread, a Python function to do it, and we have a supported output


00:28:44.680 --> 00:28:47.160
types and stuff like that, and you can, you can display it with, with great.


00:28:47.160 --> 00:28:47.320
Yeah.


00:28:47.320 --> 00:28:47.620
Nice.


00:28:47.620 --> 00:28:47.900
Yeah.


00:28:47.900 --> 00:28:50.840
So yeah, there's a couple of demos, for example, like connecting


00:28:50.840 --> 00:28:52.500
to like databases and stuff.


00:28:52.500 --> 00:28:54.380
You can connect to us three if you wanted to, right?


00:28:54.380 --> 00:28:57.580
Like you're not, I don't know exactly where they are now, but yeah.


00:28:57.580 --> 00:28:58.540
It's gotta be one.


00:28:58.540 --> 00:29:00.980
It just looks like it might be one potentially.


00:29:00.980 --> 00:29:03.220
I'll click, find some S3 stuff.


00:29:03.220 --> 00:29:04.820
Here's just gotta be something here somewhere.


00:29:04.820 --> 00:29:05.100
Yeah.


00:29:05.100 --> 00:29:05.540
Very cool.


00:29:05.540 --> 00:29:09.580
So one of the things people may be wondering, and the fact that I don't


00:29:09.580 --> 00:29:12.660
see a pricing up at the top, it might be a big hint here.


00:29:12.660 --> 00:29:14.460
What's the business model?


00:29:14.460 --> 00:29:15.620
What's the story with this?


00:29:15.620 --> 00:29:17.420
Is this just straight open source?


00:29:17.420 --> 00:29:18.900
Is it a open core?


00:29:18.900 --> 00:29:20.660
What's the story around your project here?


00:29:20.700 --> 00:29:24.080
Gradio is completely open source and you can host it anywhere.


00:29:24.080 --> 00:29:26.540
So you're not tied into any platform.


00:29:26.540 --> 00:29:30.300
Gradio did get acquired by Hugging Face maybe like almost two years ago.


00:29:30.300 --> 00:29:30.600
Right.


00:29:30.600 --> 00:29:35.700
So Gradio integrates really tightly with the Hugging Face ecosystem, but


00:29:35.700 --> 00:29:36.180
okay.


00:29:36.180 --> 00:29:36.620
I see.


00:29:36.620 --> 00:29:38.780
Those integrations are normally free.


00:29:38.780 --> 00:29:39.180
Right.


00:29:39.180 --> 00:29:42.380
So for example, you could host radio demos on


00:29:42.380 --> 00:29:44.300
Hugging Face spaces or something.


00:29:44.300 --> 00:29:44.620
Yeah.


00:29:44.620 --> 00:29:46.000
On Hugging Face spaces.


00:29:46.000 --> 00:29:46.340
Right.


00:29:46.340 --> 00:29:49.920
And then if you, if your demo needs special like hardware or stuff like that,


00:29:49.920 --> 00:29:53.240
Like you, you could pay Hugging Face to provision that for you, but you're not


00:29:53.240 --> 00:29:56.760
paying for the Gradio, you could use whatever you want on Hugging Face spaces.


00:29:56.760 --> 00:29:57.160
Now, right.


00:29:57.160 --> 00:29:58.400
So it doesn't have a radio.


00:29:58.400 --> 00:29:58.760
Yeah.


00:29:58.760 --> 00:29:59.800
So it's freely available.


00:29:59.800 --> 00:30:03.800
So it's completely open source with a kind of a Gradio as a


00:30:03.800 --> 00:30:05.680
service via Hugging Space.


00:30:05.680 --> 00:30:06.240
Hugging Face.


00:30:06.240 --> 00:30:06.760
Hugging Face.


00:30:06.760 --> 00:30:07.000
Yeah.


00:30:07.000 --> 00:30:07.400
Yeah.


00:30:07.400 --> 00:30:08.400
On their spaces.


00:30:08.400 --> 00:30:10.120
Say that fast bunch of times.


00:30:10.120 --> 00:30:11.560
So yeah, really cool.


00:30:11.560 --> 00:30:14.440
One of the things people might not know if they haven't heard of Gradio before


00:30:14.440 --> 00:30:17.280
is you go to your GitHub repo for it.


00:30:17.320 --> 00:30:22.380
20, almost 21,000 GitHub stars, a serious bit of a attention that it's gotten.


00:30:22.380 --> 00:30:25.320
We've seen a lot of growth in the last, yeah, about a year and a half.


00:30:25.320 --> 00:30:29.260
Like ever since the hugging face acquisition, that's really helped us put


00:30:29.260 --> 00:30:31.220
the library in front of a new audience.


00:30:31.220 --> 00:30:31.540
Yeah.


00:30:31.540 --> 00:30:35.820
The recent advances in ML, like a lot of people want to build demos for ML models


00:30:35.820 --> 00:30:36.160
now, right?


00:30:36.160 --> 00:30:38.120
So I think that's definitely helping Gradio as well.


00:30:38.120 --> 00:30:38.440
Yeah.


00:30:38.440 --> 00:30:41.280
Trying to give people a sense of scale, right?


00:30:41.280 --> 00:30:45.340
This is like third of FastAPI, third of last, like that's a lot of people using this.


00:30:45.520 --> 00:30:48.520
So the reason I'm bringing that up is it's not some brand new thing that you


00:30:48.520 --> 00:30:51.920
came up that came up with that maybe people could try, but it's got a lot of


00:30:51.920 --> 00:30:52.560
users, right?


00:30:52.560 --> 00:30:53.300
Month to month.


00:30:53.300 --> 00:30:56.800
We're seeing like hundreds of thousands of people building these


00:30:56.800 --> 00:30:58.380
Gradio demos repeatedly.


00:30:58.380 --> 00:31:01.380
So yeah, definitely a lot of growth and yeah, Gradio is about five years old now.


00:31:01.380 --> 00:31:02.380
So it's not awesome.


00:31:02.380 --> 00:31:02.740
Congrats.


00:31:02.740 --> 00:31:03.820
That's, that's really cool.


00:31:03.820 --> 00:31:04.720
Yeah.


00:31:04.720 --> 00:31:07.260
3.9, almost 4 million monthly downloads.


00:31:07.260 --> 00:31:08.140
That's a decent chunk.


00:31:08.140 --> 00:31:12.860
This portion of talk Python to me is brought to you by Sentry.


00:31:13.180 --> 00:31:17.540
You know that Sentry captures the errors that would otherwise go unnoticed.


00:31:17.540 --> 00:31:21.840
Of course, they have incredible support for basically any Python framework.


00:31:21.840 --> 00:31:27.460
They have direct integrations with Flask, Django, FastAPI, and even things like AWS


00:31:27.460 --> 00:31:29.300
Lambda and Celery.


00:31:29.300 --> 00:31:33.460
But did you know they also have native integrations with mobile app frameworks?


00:31:33.460 --> 00:31:38.340
Whether you're building an Android or iOS app or both, you can gain complete visibility


00:31:38.340 --> 00:31:44.820
into your applications correctness, both on the mobile side and server side. We just completely


00:31:44.820 --> 00:31:50.420
rewrote talk pythons mobile apps for taking our courses. And we massively benefited from having


00:31:50.420 --> 00:31:55.860
century integration right from the start. We use Flutter for our native mobile framework. And with


00:31:55.860 --> 00:32:01.300
century, it was literally just two lines of code to start capturing errors as soon as they happen.


00:32:01.300 --> 00:32:05.300
Of course, we don't love errors, but we do love making our users happy.


00:32:05.940 --> 00:32:10.740
Solving problems as soon as possible with Sentry on the mobile Flutter code and the


00:32:10.740 --> 00:32:15.940
Python server-side code together made understanding error reports a breeze.


00:32:15.940 --> 00:32:21.420
So whether you're building Python server-side apps or mobile apps or both, give Sentry a


00:32:21.420 --> 00:32:25.460
try to get a complete view of your app's correctness.


00:32:25.460 --> 00:32:29.700
Thank you to Sentry for sponsoring the show and helping us ship more reliable mobile apps


00:32:29.700 --> 00:32:30.700
to all of you.


00:32:30.700 --> 00:32:35.220
What do we think about, I don't want to do an image in one.


00:32:35.220 --> 00:32:38.260
You can do other demos you got here is you've got time series forecasting.


00:32:38.260 --> 00:32:43.220
We talked about that as the multiple inputs, XG boost with explainability.


00:32:43.220 --> 00:32:44.740
Want to tell us about this a little bit?


00:32:44.740 --> 00:32:45.060
Yeah.


00:32:45.060 --> 00:32:48.300
This one also, I think it has like, this one has 12 inputs, right?


00:32:48.300 --> 00:32:52.220
And the idea is it's one of these like kind of Kaggle-esque things where you


00:32:52.220 --> 00:32:55.820
like predict income based on a slew of predictors, right?


00:32:55.820 --> 00:32:59.940
And then the cool thing is that this isn't explicitly built into Gradio or


00:32:59.940 --> 00:33:02.500
yeah, this isn't explicitly built into Gradio, but you could hook


00:33:02.500 --> 00:33:03.580
into the SHAP really easily.


00:33:03.580 --> 00:33:03.740
Right.


00:33:03.740 --> 00:33:07.780
So if you hit explain, it'll try to explain the prediction of the model


00:33:07.780 --> 00:33:09.260
and display it in a plot for you.


00:33:09.260 --> 00:33:09.680
Wow.


00:33:09.680 --> 00:33:10.060
Okay.


00:33:10.060 --> 00:33:10.360
Right.


00:33:10.360 --> 00:33:14.420
So for those of you don't know, Shap is like this algorithm for explaining the


00:33:14.420 --> 00:33:15.860
predictions of any machine learning model.


00:33:15.860 --> 00:33:16.220
I see.


00:33:16.220 --> 00:33:17.740
It's hooking into XGBoost.


00:33:17.740 --> 00:33:18.180
Right.


00:33:18.180 --> 00:33:20.820
But there isn't like an explicit, in this demo, there isn't like an


00:33:20.820 --> 00:33:22.740
explicit radio feature that's being used.


00:33:22.740 --> 00:33:26.100
It's just calling Shap directly from this Python function and then


00:33:26.100 --> 00:33:27.780
displaying the results as a plot.


00:33:27.780 --> 00:33:30.660
The thing does is it's got a bunch of different sliders and dropdowns.


00:33:30.660 --> 00:33:36.200
It says given an age, your education level, years of school, whether you're


00:33:36.200 --> 00:33:40.080
married or not, all those male, female, how many hours a week you work.


00:33:40.080 --> 00:33:42.120
And then it predicts what is this?


00:33:42.120 --> 00:33:42.680
Yeah.


00:33:42.680 --> 00:33:44.620
Predicts your, your yearly income.


00:33:44.620 --> 00:33:48.880
And then the senior talking about is with that model, you can ask it, okay, well,


00:33:48.880 --> 00:33:52.400
of all these different things we could put into it, what features, what aspects


00:33:52.400 --> 00:33:54.960
of that are more important and what are less important, right?


00:33:54.960 --> 00:33:55.260
Right.


00:33:55.260 --> 00:33:55.720
Okay.


00:33:55.720 --> 00:34:00.480
The use cases, let's say like you are a data scientist that is charged with


00:34:00.480 --> 00:34:01.840
building this kind of model.


00:34:01.840 --> 00:34:04.920
The first question after someone seeing the prediction is someone might have


00:34:04.920 --> 00:34:06.800
was like, why, like, why is it predicting this?


00:34:06.800 --> 00:34:07.040
Right.


00:34:07.040 --> 00:34:11.460
And then you ideally want to be able to explain exactly what element of the


00:34:11.460 --> 00:34:13.560
predictors contributed to the prediction the most.


00:34:13.560 --> 00:34:16.040
And there's a lot of tools that you can use for that, right?


00:34:16.040 --> 00:34:19.240
Shab is I think the most well known to my understanding.


00:34:19.240 --> 00:34:20.700
And then, yeah.


00:34:20.700 --> 00:34:23.840
And then you can just with Gradio really easily just call that algorithm


00:34:23.840 --> 00:34:25.360
and then just display it in a plot.


00:34:25.360 --> 00:34:25.560
Right.


00:34:25.560 --> 00:34:29.140
And then in this example, like one of the inputs is like the capital gain.


00:34:29.140 --> 00:34:31.340
So like how much you make on your investments, right.


00:34:31.340 --> 00:34:34.440
So, and I think in this particular case, like the capital gain is like really big,


00:34:34.440 --> 00:34:34.680
right.


00:34:34.680 --> 00:34:38.440
So obviously because the capital gain is so big in this particular case, we


00:34:38.440 --> 00:34:40.520
predict that the income will be, will be really big, right.


00:34:40.520 --> 00:34:43.900
Cause capital gain is pretty much synonymous with income really.


00:34:43.900 --> 00:34:44.520
So yeah.


00:34:44.520 --> 00:34:44.680
Yeah.


00:34:44.680 --> 00:34:45.960
So that's what this is showing.


00:34:45.960 --> 00:34:46.160
Yeah.


00:34:46.160 --> 00:34:48.820
And I suspect this is important for a lot of reasons.


00:34:48.820 --> 00:34:52.440
If you were, you're building this for your company or for some kind of project,


00:34:52.440 --> 00:34:55.060
people want to know, well, we have all these different inputs.


00:34:55.060 --> 00:34:57.340
What ones actually matter in making a prediction?


00:34:57.340 --> 00:35:00.040
Maybe only the top three are the ones that really matter.


00:35:00.040 --> 00:35:02.260
And you can throw out things like marital status.


00:35:02.260 --> 00:35:04.660
Like it actually doesn't make much of a difference.


00:35:04.660 --> 00:35:04.960
Right.


00:35:04.960 --> 00:35:09.220
Or if you're a policy person and you're this model actually matches real data.


00:35:09.220 --> 00:35:12.400
You could say, well, we're trying to improve the policy


00:35:12.400 --> 00:35:13.780
for a certain group of people.


00:35:13.780 --> 00:35:17.600
We could focus on any of these aspects, which one or two would make the biggest


00:35:17.600 --> 00:35:19.880
return for our effort to make a change.


00:35:19.880 --> 00:35:20.180
Right.


00:35:20.180 --> 00:35:20.660
A lot.


00:35:20.660 --> 00:35:22.380
There's a lot of cool stuff that comes out of this, I think.


00:35:22.380 --> 00:35:23.060
Absolutely.


00:35:23.180 --> 00:35:27.500
And then you as a developer, I think it's, as like the data scientist, right.


00:35:27.500 --> 00:35:29.300
It's really easy to make this kind of thing, right.


00:35:29.300 --> 00:35:31.460
This is like a jarred interface, I believe.


00:35:31.460 --> 00:35:31.740
Right.


00:35:31.740 --> 00:35:34.780
So this is just one line of code to build this.


00:35:34.780 --> 00:35:36.020
So yeah, that's okay.


00:35:36.020 --> 00:35:37.340
Not GR that interfaces.


00:35:37.340 --> 00:35:40.580
The other API that we can talk about now is called blocks.


00:35:40.580 --> 00:35:40.860
Yeah.


00:35:40.860 --> 00:35:41.540
Tell us about that.


00:35:41.540 --> 00:35:42.620
It's, it's cool.


00:35:42.620 --> 00:35:42.940
Yeah.


00:35:42.940 --> 00:35:46.580
The, the way that it works is that you declaratively define your UI, right?


00:35:46.580 --> 00:35:50.180
So it's like this input is going to go in this column and say, well, this


00:35:50.180 --> 00:35:51.820
input is like a dropdown for example.


00:35:51.820 --> 00:35:52.020
Right.


00:35:52.020 --> 00:35:55.140
So in this example, there's lots of dropdown components, lots of


00:35:55.140 --> 00:35:57.580
sliders for the age and stuff like that.


00:35:57.580 --> 00:36:00.580
And then you define all these components and then you can


00:36:00.580 --> 00:36:02.380
define the reactivity separately.


00:36:02.380 --> 00:36:05.480
So if you were to scroll down, there should be like a button dot click, right?


00:36:05.480 --> 00:36:08.220
So whenever the predict button gets clicked, yeah.


00:36:08.220 --> 00:36:11.080
So you're called this function with these inputs and then


00:36:11.080 --> 00:36:12.380
return this one thing.


00:36:12.380 --> 00:36:12.740
Yeah.


00:36:12.740 --> 00:36:14.380
So that that's like the model, right?


00:36:14.380 --> 00:36:17.080
Like right now it looks like a lot of code just because there's a lot of


00:36:17.080 --> 00:36:19.860
like inputs and stuff, but at the end of the day, it's like pretty simple.


00:36:19.860 --> 00:36:23.040
you're just defining a UI and then you define like what happens when,


00:36:23.040 --> 00:36:24.480
and then Gradle handles the rest.


00:36:24.480 --> 00:36:25.800
Yeah, it's pretty straightforward.


00:36:25.800 --> 00:36:29.560
So people listen, basically the UI for the more advanced version is


00:36:29.560 --> 00:36:32.480
you use context managers, create with blocks.


00:36:32.480 --> 00:36:36.720
So then you'd say, here's something that goes for us and with another row,


00:36:36.720 --> 00:36:40.060
put some columns in there with another row, and then that's how you build it up.


00:36:40.060 --> 00:36:41.120
So it's pretty straightforward.


00:36:41.120 --> 00:36:44.720
What it reminds me of a little bit is it reminds me a little of Flutter.


00:36:44.720 --> 00:36:47.160
Are you familiar with how Flutter looks?


00:36:47.160 --> 00:36:47.560
No.


00:36:47.560 --> 00:36:48.240
And the code.


00:36:48.340 --> 00:36:52.240
It's, I don't know if I can find a quick example about an example Flutter.


00:36:52.240 --> 00:36:52.780
Come on.


00:36:52.780 --> 00:36:54.780
It's really sort of hierarchical.


00:36:54.780 --> 00:36:58.780
So that the thing that I think is interesting is the, the code


00:36:58.780 --> 00:37:02.300
hierarchy matches the sort of UI hierarchy, right?


00:37:02.300 --> 00:37:06.020
So it's a code driven UI where as it gets more indented, that's talks about,


00:37:06.020 --> 00:37:10.760
okay, well that's a row or then you pop off and stuff and they've got, it's real


00:37:10.760 --> 00:37:14.580
similar in that sense that all right there in the code, there's not a designer or a


00:37:14.580 --> 00:37:16.300
markup language or something like that.


00:37:16.300 --> 00:37:17.620
But yeah, pretty cool.


00:37:17.660 --> 00:37:18.100
Yeah, exactly.


00:37:18.100 --> 00:37:18.220
Yeah.


00:37:18.220 --> 00:37:19.980
So like the UI, it's all declarative, right?


00:37:19.980 --> 00:37:23.700
So you, yeah, like you said, you just say this is this row and then yeah, there's


00:37:23.700 --> 00:37:27.260
ways to control like the relative width of each of these columns, for example.


00:37:27.260 --> 00:37:29.620
So if you wanted that, you could, and then.


00:37:29.620 --> 00:37:32.060
Another thing I saw, I can't remember what you demoed it.


00:37:32.060 --> 00:37:34.700
So I'm not going to pull it up, but I saw that there's, there's a way to


00:37:34.700 --> 00:37:37.820
pass like CSS and styling over as well.


00:37:37.820 --> 00:37:38.380
Is that right?


00:37:38.380 --> 00:37:39.620
That was maybe the very first thing.


00:37:39.620 --> 00:37:43.060
There's a Python API for like defining the theme, right?


00:37:43.060 --> 00:37:46.900
So like every UI element has certain CSS variables and you can control their


00:37:46.900 --> 00:37:50.940
value via like the values of this Python class that you then pass to your


00:37:50.940 --> 00:37:55.060
Gradle instance, but at the same time, there's like a top level CSS parameter


00:37:55.060 --> 00:37:56.940
that you could do whatever you want in that case, right?


00:37:56.940 --> 00:37:58.540
You don't have to use like the Python API.


00:37:58.540 --> 00:38:01.180
If you don't want to, if there's something different that you want to


00:38:01.180 --> 00:38:04.580
change, you can change the CSS variables.


00:38:04.580 --> 00:38:06.700
You're saying I could do something in Python.


00:38:06.700 --> 00:38:08.980
I could say, well, the style is button.


00:38:08.980 --> 00:38:12.860
Order width is three and the color of the borders is blue.


00:38:12.860 --> 00:38:15.980
But if I just want to have arbitrary CSS, I can just go, here's your


00:38:15.980 --> 00:38:17.700
arbitrary CSS string, go with that.


00:38:17.700 --> 00:38:20.460
You could pass it a file and then it'll, we'll read that file


00:38:20.460 --> 00:38:22.380
and then use that CSS in the demo.


00:38:22.380 --> 00:38:22.660
Yeah.


00:38:22.660 --> 00:38:27.280
And then with that, you can also add IDs to each of the UI elements, and then you


00:38:27.280 --> 00:38:30.020
could write your CSS to target the IDs that you add, right?


00:38:30.020 --> 00:38:33.420
So let's say you only wanted to modify one button, you could do it that way.


00:38:33.420 --> 00:38:33.660
Right.


00:38:33.660 --> 00:38:35.700
You just want to control one of the plots or something.


00:38:35.700 --> 00:38:40.020
I guess if you're writing arbitrary code to return things like matplotlib plots,


00:38:40.020 --> 00:38:43.500
do things like the XK CD matplotlib.


00:38:43.500 --> 00:38:44.260
Oh yeah, for sure.


00:38:44.260 --> 00:38:44.580
Right.


00:38:44.580 --> 00:38:47.860
Like you could control joking, but it's also awesome.


00:38:47.860 --> 00:38:50.340
There's an XKCD Gradio theme, right?


00:38:50.340 --> 00:38:51.980
So let me show you this.


00:38:51.980 --> 00:38:52.940
There is.


00:38:52.940 --> 00:38:53.460
Yes.


00:38:53.460 --> 00:38:53.860
Okay.


00:38:53.860 --> 00:38:55.300
Well that takes it to another level.


00:38:55.300 --> 00:38:56.340
That's pretty excellent.


00:38:56.340 --> 00:38:59.260
That's the cool thing about the theming is that it's shareable, right?


00:38:59.260 --> 00:39:02.300
So someone built this XKCD theme.


00:39:02.300 --> 00:39:02.760
Wow.


00:39:02.760 --> 00:39:03.500
It's amazing.


00:39:03.500 --> 00:39:05.900
Anyone can use this in their Gradio demo, right?


00:39:05.900 --> 00:39:10.460
All you have to do is pass theme equals Gstaff/XKCD and then your


00:39:10.460 --> 00:39:12.140
demo will look like the XKCD theme.


00:39:12.140 --> 00:39:13.140
It's so good.


00:39:13.140 --> 00:39:13.740
I love it.


00:39:13.780 --> 00:39:16.300
Oh my gosh, this is really.


00:39:16.300 --> 00:39:18.380
- Yeah, completely community driven.


00:39:18.380 --> 00:39:19.740
- Yeah, well done to whoever did this one.


00:39:19.740 --> 00:39:20.660
That's really cool.


00:39:20.660 --> 00:39:22.540
- It goes beyond the plot, right?


00:39:22.540 --> 00:39:24.900
You can for sure return a plot in the XKCD theme,


00:39:24.900 --> 00:39:27.380
but you could also have the whole demo in the XKCD theme.


00:39:27.380 --> 00:39:29.180
- I often pull this example up,


00:39:29.180 --> 00:39:31.700
this theme, this XKCD thing for Matplotlib,


00:39:31.700 --> 00:39:35.620
'cause it's fun, but also I think there's genuine value


00:39:35.620 --> 00:39:37.580
in putting together something that looks like this.


00:39:37.580 --> 00:39:40.460
Because if you show this to decision makers,


00:39:40.460 --> 00:39:42.620
bosses, managers, types,


00:39:42.620 --> 00:39:46.260
And they see that they look at something that looks like it's working and they're


00:39:46.260 --> 00:39:47.820
like, Oh, well, we're done then.


00:39:47.820 --> 00:39:49.460
No, we have two months more work.


00:39:49.460 --> 00:39:50.220
We're not done.


00:39:50.220 --> 00:39:52.140
But I click the button and it's giving me answers.


00:39:52.140 --> 00:39:53.500
We're really not done.


00:39:53.500 --> 00:39:55.260
It's not scalable.


00:39:55.260 --> 00:39:56.420
It's not this, it's not that right.


00:39:56.420 --> 00:39:59.220
It's only an estimate, just an XKCD front end on it.


00:39:59.220 --> 00:40:00.720
You're like, look, you see, it's not done.


00:40:00.720 --> 00:40:02.380
It's just, it's got squiggly lines.


00:40:02.380 --> 00:40:03.180
It's hand drawn.


00:40:03.180 --> 00:40:04.660
It's clearly a prototype.


00:40:04.660 --> 00:40:05.060
You're like, Oh yeah.


00:40:05.060 --> 00:40:05.300
Okay.


00:40:05.300 --> 00:40:06.860
But I can see where this is going.


00:40:06.860 --> 00:40:11.380
I think actually psychologically it may have a big impact, even though it's silly.


00:40:11.580 --> 00:40:11.740
Yeah.


00:40:11.740 --> 00:40:12.700
That's a super interesting point.


00:40:12.700 --> 00:40:14.980
I never thought about it that way, but yeah, I mean, I think it definitely


00:40:14.980 --> 00:40:16.460
gives it a little bit more sketch vibe.


00:40:16.460 --> 00:40:18.220
Like this is like in the.


00:40:18.220 --> 00:40:18.780
Yeah.


00:40:18.780 --> 00:40:19.860
Like a wireframe vibe.


00:40:19.860 --> 00:40:20.180
Yeah.


00:40:20.180 --> 00:40:20.500
Yeah.


00:40:20.500 --> 00:40:22.220
Wireframe like straight from the workshop.


00:40:22.220 --> 00:40:23.020
Exactly.


00:40:23.020 --> 00:40:23.500
Yeah.


00:40:23.500 --> 00:40:24.380
That's what I was thinking.


00:40:24.380 --> 00:40:27.500
Cause I presented projects to various stakeholders when I used to do that


00:40:27.500 --> 00:40:30.140
kind of stuff and they'd be like, Oh, well that looks like it's done.


00:40:30.140 --> 00:40:31.340
No, we're going to need some time.


00:40:31.340 --> 00:40:32.740
Cause it's really not done.


00:40:32.740 --> 00:40:34.660
I know it looks good, but it's not.


00:40:34.660 --> 00:40:35.060
Yeah.


00:40:35.060 --> 00:40:35.260
Yeah.


00:40:35.260 --> 00:40:35.500
Yeah.


00:40:35.500 --> 00:40:36.420
You made it look too good.


00:40:36.420 --> 00:40:37.060
Basically.


00:40:37.060 --> 00:40:37.980
Yeah, exactly.


00:40:37.980 --> 00:40:39.340
That was a serious mistake.


00:40:39.340 --> 00:40:39.780
Yeah.


00:40:39.780 --> 00:40:40.100
Okay.


00:40:40.100 --> 00:40:43.300
So we've got a little bit more time to talk about a couple of things.


00:40:43.300 --> 00:40:45.780
I want to talk about how people actually share this.


00:40:45.780 --> 00:40:47.260
Like we're still talking about a thing.


00:40:47.260 --> 00:40:50.060
I pip install locally and it has a UI, but what do I do?


00:40:50.060 --> 00:40:54.260
I still don't want to set up a Linux machine and Nginx and domains and all that.


00:40:54.260 --> 00:40:55.100
So what are the options?


00:40:55.100 --> 00:40:58.220
But before we get to that, tell us a bit about the internals.


00:40:58.220 --> 00:41:02.700
Like when you guys work on Gradio and I pip install it, like what's running.


00:41:02.700 --> 00:41:03.780
What is this project?


00:41:03.780 --> 00:41:06.980
The backend is a FastAPI server.


00:41:06.980 --> 00:41:09.660
So what Graded will do, it'll spin up a server for you.


00:41:09.660 --> 00:41:12.660
And then that server will serve like the front end assets.


00:41:12.660 --> 00:41:14.500
The front end is built in Svelte.


00:41:14.500 --> 00:41:19.900
Basically whenever you, whenever these reactivity events happen, what that'll


00:41:19.900 --> 00:41:23.140
happen is that, or what will happen is that the front end will just call the


00:41:23.140 --> 00:41:24.900
backend API and then run your function.


00:41:24.900 --> 00:41:27.820
And then make sure that all the necessary processing that needs to


00:41:27.820 --> 00:41:29.780
happen to get your data ready happens.


00:41:29.780 --> 00:41:33.980
But at the end of the day, it's a simple model in that sense, right?


00:41:34.060 --> 00:41:37.660
Obviously there's some more complications with like the streaming, for example.


00:41:37.660 --> 00:41:40.100
So that's like a whole kind of different code path almost.


00:41:40.100 --> 00:41:46.580
But at the end of the day, it's like a rest server that's talking with a JavaScript client.


00:41:46.580 --> 00:41:58.140
So it's like the standard developer tools story for Python people is it's not some of it is Python, but you probably end up writing a lot of JavaScript or TypeScript to build this tool for other people.


00:41:58.140 --> 00:41:58.460
Right.


00:41:58.460 --> 00:42:01.740
So they don't have to, I'm not a huge Svelte expert.


00:42:01.860 --> 00:42:05.300
Like thankfully there's some of the people I work with are like really good


00:42:05.300 --> 00:42:06.720
at the really knowledgeable and that stuff.


00:42:06.720 --> 00:42:09.580
And yeah, like the front end code, I think it's, I think there's more


00:42:09.580 --> 00:42:11.060
Svelte code than Python code.


00:42:11.060 --> 00:42:11.740
Actually, I'm curious.


00:42:11.740 --> 00:42:12.360
I put the.


00:42:12.360 --> 00:42:13.660
What's the code breakdown.


00:42:13.660 --> 00:42:14.640
Let's break it down.


00:42:14.640 --> 00:42:15.060
Yeah.


00:42:15.060 --> 00:42:19.700
65% Python, 16% Svelte, 13% TypeScript.


00:42:19.700 --> 00:42:23.100
Well, so I think the reason might be that we have a lot of like demos and stuff.


00:42:23.100 --> 00:42:23.520
Yeah.


00:42:23.520 --> 00:42:24.860
I think there might be some stuff like that.


00:42:24.860 --> 00:42:25.260
Yeah.


00:42:25.260 --> 00:42:26.220
The demos are in there.


00:42:26.220 --> 00:42:26.380
Yeah.


00:42:26.380 --> 00:42:27.300
There's a lot of demos.


00:42:27.300 --> 00:42:31.640
You know what feature GitHub needs as you navigate the source tree, right?


00:42:31.640 --> 00:42:35.100
When I click on like client or demo or Gradio, it would be awesome if


00:42:35.100 --> 00:42:36.900
those stats would also be repeated.


00:42:36.900 --> 00:42:39.020
But just for that section of code, wouldn't that be great?


00:42:39.020 --> 00:42:40.660
Like how much of the demos are Python?


00:42:40.660 --> 00:42:41.100
I don't know.


00:42:41.100 --> 00:42:42.920
Maybe I just want to know that, but that'd be cool.


00:42:42.920 --> 00:42:43.460
Anyway.


00:42:43.460 --> 00:42:43.640
Yeah.


00:42:43.640 --> 00:42:44.960
So I suspect that is.


00:42:44.960 --> 00:42:48.100
There's probably a lot of code and you've got a lot of notebooks and stuff in there


00:42:48.100 --> 00:42:50.440
too, that probably puts a big change on it there.


00:42:50.440 --> 00:42:52.520
A lot of the code is actually, yeah.


00:42:52.520 --> 00:42:52.680
Yeah.


00:42:52.680 --> 00:42:54.100
JavaScript's felt right.


00:42:54.100 --> 00:42:55.760
It's the take one for the team.


00:42:55.760 --> 00:42:57.840
So the rest of us don't have to write JavaScript.


00:42:57.840 --> 00:42:58.840
Exactly.


00:42:58.840 --> 00:42:59.080
Yeah.


00:42:59.080 --> 00:42:59.440
Cool.


00:42:59.440 --> 00:43:00.000
Interesting.


00:43:00.000 --> 00:43:00.540
Very nice.


00:43:00.600 --> 00:43:05.680
And it says it can be embedded in a notebook, which is interesting, or


00:43:05.680 --> 00:43:07.400
it can be presented as a webpage.


00:43:07.400 --> 00:43:08.600
Tell us about this part.


00:43:08.600 --> 00:43:12.560
If you were to run this on any notebook, like Google Colab, for example,


00:43:12.560 --> 00:43:13.880
I think this might be an example, right?


00:43:13.880 --> 00:43:16.240
So if you call like the way that Gradio works, right.


00:43:16.240 --> 00:43:20.600
Once you create your Gradio interface or blocks, once you call launch,


00:43:20.600 --> 00:43:22.040
that's how you start up the server.


00:43:22.040 --> 00:43:24.600
That's like, you've kicked off the whole process of serving this.


00:43:24.600 --> 00:43:26.160
That'll create the server locally, right?


00:43:26.160 --> 00:43:27.720
So no data is like leaving your machine.


00:43:27.720 --> 00:43:28.160
Right.


00:43:28.160 --> 00:43:30.960
And then if you click, if you call launch on like a Jupyter notebook,


00:43:30.960 --> 00:43:34.480
Colab SageMaker, like the UI will display like in the notebook.


00:43:34.480 --> 00:43:34.820
Right.


00:43:34.820 --> 00:43:35.160
Right.


00:43:35.160 --> 00:43:39.280
And then you could, if you're doing locally as well, you can go to the


00:43:39.280 --> 00:43:42.320
local host URL and go to the server that way.


00:43:42.320 --> 00:43:44.960
And then the really cool thing is that yeah, there you go.


00:43:44.960 --> 00:43:45.680
There's a UI.


00:43:45.680 --> 00:43:45.980
Okay.


00:43:45.980 --> 00:43:47.920
That's what we mean that it's embedded locally.


00:43:47.920 --> 00:43:48.780
It's a little, it feels good.


00:43:48.780 --> 00:43:51.980
Like a little bit like the I widgets sort of thing.


00:43:51.980 --> 00:43:53.140
It's similar to that, right?


00:43:53.140 --> 00:43:55.000
Like it'll display right underneath the cell.


00:43:55.000 --> 00:43:55.200
Right.


00:43:55.200 --> 00:43:58.080
And then if you run the cell again, like you'll get like a new, like a new


00:43:58.080 --> 00:44:01.140
server basically. Right. So you can, you can iteratively build these things.


00:44:01.140 --> 00:44:01.400
Right.


00:44:01.400 --> 00:44:03.920
Is it running FastAPI somewhere in the background when you do that?


00:44:03.920 --> 00:44:07.240
Yeah. Crazy. Yeah. That's pretty, pretty nuts. Turtles all the way down.


00:44:07.240 --> 00:44:11.360
And then what we mean that they can be embedded in a notebook and then you could


00:44:11.360 --> 00:44:15.480
also like host it anywhere. Right. So you could, if your machine is exposed to the


00:44:15.480 --> 00:44:18.920
internet, right. You have like a fixed IP address. You could just give people that


00:44:18.920 --> 00:44:23.560
URL. You could also share it another way. Right. So every gradio interface is like


00:44:23.560 --> 00:44:26.800
a launch method. That's what kicks off the server. And that takes a parameter


00:44:26.800 --> 00:44:27.920
called share, right?


00:44:27.920 --> 00:44:31.880
So if you hit share equals through true, that'll create like a temporary link for


00:44:31.880 --> 00:44:33.920
72 hours that you could share with someone, right?


00:44:33.920 --> 00:44:36.380
So you don't have to, you can host it right on your laptop if you want it to.


00:44:36.380 --> 00:44:38.100
As long as your laptop, as long as you leave it on.


00:44:38.100 --> 00:44:38.360
Yeah.


00:44:38.360 --> 00:44:38.620
Yeah.


00:44:38.620 --> 00:44:41.080
As long as you leave it on, it's like not sleeping and stuff.


00:44:41.080 --> 00:44:42.840
Like people can access here.


00:44:42.840 --> 00:44:45.740
If you go back to that Colab notebook, I think we might be able to like demo that.


00:44:45.740 --> 00:44:46.480
Oh, interesting.


00:44:46.480 --> 00:44:50.080
If I just say here and say, share equals true and rerun it.


00:44:50.080 --> 00:44:50.820
Equals true.


00:44:50.820 --> 00:44:51.680
See what we get.


00:44:51.680 --> 00:44:53.440
So you see greater dot live, right?


00:44:53.440 --> 00:44:55.040
So if you click that, it totally works.


00:44:55.120 --> 00:44:57.120
Yeah, you can select that to wherever you want them.


00:44:57.120 --> 00:44:58.240
They can just use this.


00:44:58.240 --> 00:44:58.600
Right.


00:44:58.600 --> 00:45:01.300
So that, yeah, no install needed, right.


00:45:01.300 --> 00:45:05.840
If you're sharing this with your collaborator, your PM, your manager,


00:45:05.840 --> 00:45:08.880
your friend or whatever, you could just give them this link, right?


00:45:08.880 --> 00:45:10.160
So you don't have to do anything.


00:45:10.160 --> 00:45:12.600
To get, I guess it's probably worth emphasizing.


00:45:12.600 --> 00:45:15.920
You should never try to host like production over this.


00:45:15.920 --> 00:45:18.640
It sounds like, cause it's only for a limited time and it's going


00:45:18.640 --> 00:45:20.560
to, it's just a good looking URL.


00:45:20.560 --> 00:45:25.160
But so often you'll be in meetings over zoom or something else.


00:45:25.160 --> 00:45:26.560
And they'll be like, Hey, what have you done?


00:45:26.560 --> 00:45:27.320
Can you show me?


00:45:27.320 --> 00:45:28.960
And then you're like, all right, well, let me do screen share.


00:45:28.960 --> 00:45:30.580
Oh, I don't have, I'm not a host.


00:45:30.580 --> 00:45:31.620
Can you make me a host now?


00:45:31.620 --> 00:45:33.380
Can I, you're sharing, can I share?


00:45:33.380 --> 00:45:36.560
And then finally you get it up and it's blocky and they're like, Oh, zoom in.


00:45:36.560 --> 00:45:37.360
It's too small.


00:45:37.360 --> 00:45:38.920
I'm on my phone this way.


00:45:38.920 --> 00:45:40.920
You just take that and you give it to them in the meeting.


00:45:40.920 --> 00:45:41.160
Right.


00:45:41.160 --> 00:45:44.120
And they, they have a full fidelity thing they can play with, which is awesome.


00:45:44.120 --> 00:45:46.360
They have the demo itself that's running on your machine.


00:45:46.360 --> 00:45:46.680
Right.


00:45:46.680 --> 00:45:50.360
So they don't have to, yeah, like no, you don't have to install anything.


00:45:50.360 --> 00:45:50.860
Right.


00:45:50.860 --> 00:45:54.340
Just go to your point, your browser at this URL and then yeah, it'll work for that


00:45:54.340 --> 00:45:54.980
quick demo.


00:45:54.980 --> 00:45:55.940
Yeah, exactly.


00:45:55.940 --> 00:45:56.740
Use case as well.


00:45:56.740 --> 00:45:56.860
Yeah.


00:45:56.860 --> 00:45:58.280
Definitely don't use it for production.


00:45:58.280 --> 00:45:58.820
Yeah.


00:45:58.820 --> 00:46:02.500
If you want it to use for production, I think like the easiest, the absolute


00:46:02.500 --> 00:46:04.140
easiest way to use hugging face spaces.


00:46:04.140 --> 00:46:07.740
So if you go to hugging face spaces, it's basically like a drag and drop, right?


00:46:07.740 --> 00:46:12.440
Like all you have to do is just drag your Gradio script into like their UI and then


00:46:12.440 --> 00:46:16.260
that'll upload it and then Gradio will already be installed and then the server


00:46:16.260 --> 00:46:19.260
will, will start and then you have, you have your permanent hosting.


00:46:19.380 --> 00:46:21.660
And then it's also like a, it has like a get interface, right?


00:46:21.660 --> 00:46:25.160
So like your demo has several files, like directory, there's some assets, some


00:46:25.160 --> 00:46:28.740
images that you need that you want to upload as well, like you could just get


00:46:28.740 --> 00:46:30.740
pushed to your hugging face space.


00:46:30.740 --> 00:46:33.480
And then you'll, you can do it like that as well.


00:46:33.480 --> 00:46:33.880
Okay.


00:46:33.880 --> 00:46:36.440
So you add it as an origin or something and then just push to it.


00:46:36.440 --> 00:46:36.620
Yeah.


00:46:36.620 --> 00:46:37.280
I can try to show it.


00:46:37.280 --> 00:46:40.260
I don't know if you can have a, can I share my screen?


00:46:40.260 --> 00:46:40.720
I wonder.


00:46:40.720 --> 00:46:41.320
Yeah, sure.


00:46:41.320 --> 00:46:43.080
Click at the bottom and share.


00:46:43.080 --> 00:46:44.800
It's easier if you share an app.


00:46:44.800 --> 00:46:45.060
Yeah.


00:46:45.100 --> 00:46:50.860
If I go to my Hugging Face account and go here and then new space, and then this is


00:46:50.860 --> 00:46:55.020
talk Python demo, then MIT.


00:46:55.020 --> 00:46:55.740
Oh yeah.


00:46:55.740 --> 00:46:57.020
We can do whatever we want with this.


00:46:57.020 --> 00:46:57.260
Right.


00:46:57.260 --> 00:47:00.900
So you could write, you could host stream like radio, Docker,


00:47:00.900 --> 00:47:02.060
yeah, anything you want.


00:47:02.060 --> 00:47:02.560
Right.


00:47:02.560 --> 00:47:06.300
So for free, very generous free tier, you have two CPUs.


00:47:06.300 --> 00:47:09.220
That is a generous free tier, two CPUs, 16 gigs.


00:47:09.220 --> 00:47:10.020
Yeah, that is good.


00:47:10.020 --> 00:47:14.380
The only caveat is that this will go to sleep after 72 hours if no one uses it.


00:47:14.380 --> 00:47:14.660
Right.


00:47:14.660 --> 00:47:16.780
So, but you could also upgrade it.


00:47:16.780 --> 00:47:19.740
You have a machine learning model, you need to pay for the GPU per hour.


00:47:19.740 --> 00:47:21.580
And then yeah, you can set public or private


00:47:21.580 --> 00:47:22.940
and then you just create space.


00:47:22.940 --> 00:47:26.100
And then yeah, this is how the Git interface works, right?


00:47:26.100 --> 00:47:28.460
So you could just Git clone this


00:47:28.460 --> 00:47:31.180
and then add your code and then just Git push.


00:47:31.180 --> 00:47:32.860
Or you could just copy this.


00:47:32.860 --> 00:47:35.460
- Copy the code and just paste it into a file, yeah.


00:47:35.460 --> 00:47:37.020
- Add file, create new file.


00:47:37.020 --> 00:47:39.060
- It does feel a very Git, right?


00:47:39.060 --> 00:47:41.260
Even has the similar look and feel of like


00:47:41.260 --> 00:47:43.140
when you go to Git and you say add new file.


00:47:43.140 --> 00:47:43.440
Yeah.


00:47:43.440 --> 00:47:43.780
True.


00:47:43.780 --> 00:47:45.280
A perfect commit message.


00:47:45.280 --> 00:47:47.100
No, no comment.


00:47:47.100 --> 00:47:47.640
Just blank.


00:47:47.640 --> 00:47:48.060
I love it.


00:47:48.060 --> 00:47:49.320
Yeah.


00:47:49.320 --> 00:47:53.120
And then, so over here, they run in Docker containers or Kubernetes


00:47:53.120 --> 00:47:53.940
or something like that.


00:47:53.940 --> 00:47:54.880
The Docker container.


00:47:54.880 --> 00:47:54.960
Right.


00:47:54.960 --> 00:47:58.440
So what this is doing, it's at it's, it has like a pre configured


00:47:58.440 --> 00:47:59.740
Gradio Docker image, right.


00:47:59.740 --> 00:48:01.020
That comes with, there we go.


00:48:01.020 --> 00:48:05.180
I've already built, but it comes with radio and like a bunch of standard


00:48:05.180 --> 00:48:09.660
like data science libraries, and then you, I ran them in, and then it, it


00:48:09.660 --> 00:48:11.920
adds your code to the container and then it starts to container, right.


00:48:11.920 --> 00:48:14.860
But you could also just use your own Docker file if you wanted to.


00:48:14.860 --> 00:48:15.420
Okay.


00:48:15.420 --> 00:48:16.560
You can host whatever you want.


00:48:16.560 --> 00:48:16.800
Right.


00:48:16.800 --> 00:48:18.760
So here, yeah, you got to put your name in a present.


00:48:18.760 --> 00:48:19.220
Wow.


00:48:19.220 --> 00:48:19.600
Look at that.


00:48:19.600 --> 00:48:20.200
A little Michael.


00:48:20.200 --> 00:48:20.500
Yeah.


00:48:20.500 --> 00:48:24.180
And the time that we've been talking about this, you've created a space and


00:48:24.180 --> 00:48:25.900
I was creating a new UI and hosted it.


00:48:25.900 --> 00:48:27.160
That's, that's pretty ridiculous.


00:48:27.160 --> 00:48:27.420
Yeah.


00:48:27.420 --> 00:48:30.840
And then you can just share this, share the URL or whatever.


00:48:30.840 --> 00:48:31.120
Yeah.


00:48:31.120 --> 00:48:31.460
Yeah.


00:48:31.460 --> 00:48:32.500
You can just share the URL there.


00:48:32.500 --> 00:48:35.560
And then they have like a machine learning app that they can share.


00:48:35.560 --> 00:48:38.680
It can be used with, with, they can share with anyone and it'll stay up.


00:48:38.680 --> 00:48:39.760
It's just get right.


00:48:39.760 --> 00:48:43.500
So if you have get locally, if you know how to use get, you can very seamlessly


00:48:43.500 --> 00:48:45.140
use push to the hugging face platform.


00:48:45.140 --> 00:48:46.960
There's no, no special magic.


00:48:46.960 --> 00:48:48.040
What if I'm not a hugger?


00:48:48.040 --> 00:48:50.620
What if I, for some reason, don't want to use hugging face.


00:48:50.620 --> 00:48:53.680
Can I post this on behind engine X or somewhere?


00:48:53.680 --> 00:48:57.360
If I like infrastructure, I'd like to do my infrastructure as a service.


00:48:57.360 --> 00:49:01.800
It's that app, that PY file, Python that app, that PY from your cloud.


00:49:01.800 --> 00:49:05.320
And then just make sure that the URL is the port is accessible for the internet.


00:49:05.320 --> 00:49:08.480
And then you just give that to anyone or front that with engine X and put some.


00:49:08.480 --> 00:49:09.440
Yeah, exactly.


00:49:09.480 --> 00:49:12.360
Let's encrypt and then just point it over to that URL and let it go.


00:49:12.360 --> 00:49:13.280
It'd be pretty straightforward.


00:49:13.280 --> 00:49:14.320
You could host it wherever you want.


00:49:14.320 --> 00:49:16.600
That's just, it's all open source type under the hood, right?


00:49:16.600 --> 00:49:19.760
It's just FastAPI belts and then some Python libraries, right?


00:49:19.760 --> 00:49:21.640
There's no, there's no lock in anywhere.


00:49:21.640 --> 00:49:22.400
Yeah.


00:49:22.400 --> 00:49:22.660
Cool.


00:49:22.660 --> 00:49:27.960
So it's probably running uvicorn would guess as the server, which is production


00:49:27.960 --> 00:49:31.040
ish, I guess if you did like really large scale, you might want to do


00:49:31.040 --> 00:49:35.720
Genicorn with the uvicorn workers or other than just uvicorn itself, but


00:49:35.720 --> 00:49:37.280
you know, for the failover and whatnot.


00:49:37.280 --> 00:49:40.980
But that sounds like, if these words sound familiar to you, it


00:49:40.980 --> 00:49:41.800
should sound really familiar.


00:49:41.800 --> 00:49:43.100
If they don't, then don't worry about it.


00:49:43.100 --> 00:49:43.580
Exactly.


00:49:43.580 --> 00:49:47.180
That's the standard Python web infrastructure stack type of stuff.


00:49:47.180 --> 00:49:49.560
And in that model, it's completely free, right?


00:49:49.560 --> 00:49:50.200
It's open source.


00:49:50.200 --> 00:49:51.660
I can do, I can just run it there, right?


00:49:51.660 --> 00:49:51.920
Yeah.


00:49:51.920 --> 00:49:53.040
Just run it wherever you want.


00:49:53.040 --> 00:49:53.840
Very nice.


00:49:53.840 --> 00:49:56.880
Well, Freddy, let's wrap up our conversation, give a short on time


00:49:56.880 --> 00:49:58.760
with just where things are going.


00:49:58.760 --> 00:50:01.400
We'll talk about where we are, where it came from, where are we going?


00:50:01.400 --> 00:50:01.880
Thanks for that.


00:50:01.880 --> 00:50:03.440
So I think like where we are.


00:50:03.440 --> 00:50:08.840
So I think we're trying to get Gradio into like as many platforms as possible.


00:50:08.840 --> 00:50:09.080
Right.


00:50:09.080 --> 00:50:12.480
So, and like as many kind of like deployment modes as possible.


00:50:12.480 --> 00:50:16.160
So one of the cool projects that we're working on is Gradio Wawesome.


00:50:16.160 --> 00:50:16.360
Right.


00:50:16.360 --> 00:50:18.780
So like running Gradio entirely in the browser.


00:50:18.780 --> 00:50:19.000
Wow.


00:50:19.000 --> 00:50:19.280
Okay.


00:50:19.280 --> 00:50:21.520
So yeah, so that's, it's not ready.


00:50:21.520 --> 00:50:24.860
It's not released yet, but it's something that we're actively working on.


00:50:24.860 --> 00:50:25.040
Right.


00:50:25.040 --> 00:50:26.240
So you can, yeah.


00:50:26.240 --> 00:50:30.400
So if you want to just build your machine learning demo, running everything


00:50:30.440 --> 00:50:31.520
directly in the browser, right?


00:50:31.520 --> 00:50:34.400
There's like the ML for the web space is growing a lot.


00:50:34.400 --> 00:50:35.440
It's advancing really quickly.


00:50:35.440 --> 00:50:37.120
Like we're getting ready.


00:50:37.120 --> 00:50:38.400
We're getting ready for that.


00:50:38.400 --> 00:50:41.140
- So what's that look like in terms of foundations?


00:50:41.140 --> 00:50:42.600
Is that Iodide?


00:50:42.600 --> 00:50:43.720
Is that PyScript?


00:50:43.720 --> 00:50:44.720
Is that something else?


00:50:44.720 --> 00:50:46.640
- It's using Pyodide right now.


00:50:46.640 --> 00:50:47.480
- Okay.


00:50:47.480 --> 00:50:49.360
- Yeah, so yeah, that's how.


00:50:49.360 --> 00:50:50.480
- Yeah, that's a pretty good choice


00:50:50.480 --> 00:50:53.000
because one of the selling points of Pyodide,


00:50:53.000 --> 00:50:54.920
not just that it has Python in the browser,


00:50:54.920 --> 00:50:56.520
but that it has the ability,


00:50:56.520 --> 00:50:59.200
it has a bunch of the machine learning libraries


00:50:59.200 --> 00:51:02.480
either available or compiled over to Wasm WebAssembly.


00:51:02.480 --> 00:51:05.680
And so you can actually do machine learning stuff, not just like, hi, my


00:51:05.680 --> 00:51:07.680
name is plus name, you know what I mean?


00:51:07.680 --> 00:51:09.460
That's one of the cool projects we're working on this year.


00:51:09.460 --> 00:51:12.940
The other cool project that we're working on is, yeah, like the custom components.


00:51:12.940 --> 00:51:13.120
Right.


00:51:13.120 --> 00:51:17.040
So let's say that you wanted to build your, your own custom machine learning


00:51:17.040 --> 00:51:18.520
demo, your own custom web app, right.


00:51:18.520 --> 00:51:20.380
But you need something that we don't have.


00:51:20.380 --> 00:51:23.880
Giving you the API to build that component locally and then just hook it


00:51:23.880 --> 00:51:27.520
into the app without having to like merge anything into a Gradio upstream.


00:51:27.600 --> 00:51:28.860
We're working on that actively.


00:51:28.860 --> 00:51:30.200
So that, that'd be really exciting.


00:51:30.200 --> 00:51:35.040
And then, yeah, really excited just cause it'll enable like a lot of people, like


00:51:35.040 --> 00:51:38.600
integrated community to collaborate with each other and build like really impressive


00:51:38.600 --> 00:51:40.120
stuff, kind of like on their own.


00:51:40.120 --> 00:51:40.280
Right.


00:51:40.280 --> 00:51:43.760
Like they don't need, like, they don't need like the core development team necessarily.


00:51:43.760 --> 00:51:44.120
Sure.


00:51:44.120 --> 00:51:46.960
Like pytest plugins rather than trying to change pytest.


00:51:46.960 --> 00:51:47.560
So that, yeah.


00:51:47.560 --> 00:51:48.920
Really excited about that.


00:51:48.920 --> 00:51:52.780
And then yeah, they, like the other cool stuff is that we're, one thing that we


00:51:52.780 --> 00:51:56.600
didn't talk about that I would want to talk about if we have time is that all


00:51:56.600 --> 00:52:00.280
these demos that we've built are sort of available via API, right?


00:52:00.280 --> 00:52:03.140
So if you click on any of these demos, like if you click on that first one, if


00:52:03.140 --> 00:52:06.480
you scroll to the bottom and you see it says use via API, right?


00:52:06.480 --> 00:52:09.980
So this gives you like a little code snippet as to how you can call this


00:52:09.980 --> 00:52:11.980
demo from Python or JavaScript.


00:52:11.980 --> 00:52:12.380
Okay.


00:52:12.380 --> 00:52:12.920
What does that mean?


00:52:12.920 --> 00:52:13.080
Right.


00:52:13.080 --> 00:52:16.080
That means that basically all these ML apps that are available on a huggy


00:52:16.080 --> 00:52:18.900
face or just anywhere on the internet, like they now become like building


00:52:18.900 --> 00:52:21.400
blocks that you can use in your own workflow.


00:52:21.400 --> 00:52:21.640
Right.


00:52:21.640 --> 00:52:25.340
So, and actually this demo itself, it's I'm familiar with it.


00:52:25.340 --> 00:52:27.260
is actually really cool because it's calling


00:52:27.260 --> 00:52:29.500
to other Gradio demos via API.


00:52:29.500 --> 00:52:31.860
So this is an example of someone building their Gradio app


00:52:31.860 --> 00:52:33.660
by calling other Gradio apps.


00:52:33.660 --> 00:52:34.500
- Wow, okay.


00:52:34.500 --> 00:52:36.500
- We're creating this ecosystem where--


00:52:36.500 --> 00:52:38.340
- It's like Gradio microservices.


00:52:38.340 --> 00:52:39.180
- Exactly, right?


00:52:39.180 --> 00:52:41.420
So it's like all these Gradio apps or building blocks


00:52:41.420 --> 00:52:44.220
that you can then connect together via API.


00:52:44.220 --> 00:52:45.060
And that's really cool, right?


00:52:45.060 --> 00:52:49.380
'Cause it basically means that machine learning is available.


00:52:49.380 --> 00:52:52.820
You don't need to use the GUI to get state of the art


00:52:52.820 --> 00:52:53.660
machine learning, right?


00:52:53.660 --> 00:52:57.740
like use an API, and that means that you could put these models like pretty much anywhere,


00:52:57.740 --> 00:53:00.940
right. So like one of the cool things that we launched two weeks ago, I believe, or like


00:53:00.940 --> 00:53:05.940
a week and a half ago is that you can deploy like a Gradio chatbot to Discord, like just


00:53:05.940 --> 00:53:10.820
one line of code, right. So if you, let's say if you have a Gradio app that talks with


00:53:10.820 --> 00:53:17.020
OpenAI, like GPT-3, or LLAMA, or any of these like open source LLMs, if you can build a


00:53:17.020 --> 00:53:21.100
Gradio app for it, you can like seamlessly hook it into your Discord server, right. So


00:53:21.100 --> 00:53:23.880
Then that's all built via this like API functionality.


00:53:23.880 --> 00:53:24.040
Right.


00:53:24.040 --> 00:53:25.200
So this is something like, okay.


00:53:25.200 --> 00:53:25.480
Yeah.


00:53:25.480 --> 00:53:25.780
Cool.


00:53:25.780 --> 00:53:27.360
I'm personally super excited about it.


00:53:27.360 --> 00:53:31.180
Like we want to push this further just because it's like, Grado is that you like


00:53:31.180 --> 00:53:35.500
Grado historically has been built for the UI, but it can also be used to get these


00:53:35.500 --> 00:53:37.240
machine learning models into more places.


00:53:37.240 --> 00:53:40.640
One of the things that I'm really excited about in the coming years, making this a


00:53:40.640 --> 00:53:43.120
little bit more, a little bit more visible and getting, yeah, you could


00:53:43.120 --> 00:53:47.760
integrate some really cool LLMs and other types of chat into your, right.


00:53:47.760 --> 00:53:48.560
That you discord.


00:53:48.560 --> 00:53:50.960
I imagine you could probably do it with a Slack as well.


00:53:50.960 --> 00:53:55.280
And if somebody asks in your company, how do I, whatever, you could think


00:53:55.280 --> 00:53:58.040
it go, Hey, I've already, I'm private GPT.


00:53:58.040 --> 00:53:59.560
I've already ingested all of our docs.


00:53:59.560 --> 00:54:01.520
So you want me to take a shot at answering that?


00:54:01.520 --> 00:54:02.040
Like, sure.


00:54:02.040 --> 00:54:02.400
Why not?


00:54:02.400 --> 00:54:07.000
That's one of the pet projects I want to do is just do that for the radio discord.


00:54:07.000 --> 00:54:07.160
Right.


00:54:07.160 --> 00:54:10.280
So there's a radio discord where you could have the radio community and


00:54:10.280 --> 00:54:12.800
there's like people ask questions in it, but it'd be really cool if we had a


00:54:12.800 --> 00:54:16.720
radio chat bot that like knew a lot about radio that then you could just ask.


00:54:16.720 --> 00:54:17.320
Exactly.


00:54:17.440 --> 00:54:22.240
at bot slash radio chat, like, like, how do I, whatever, how do I just


00:54:22.240 --> 00:54:23.520
flip plot right in the middle?


00:54:23.520 --> 00:54:24.920
I'll tell you, just return a map.


00:54:24.920 --> 00:54:25.400
I'll live.


00:54:25.400 --> 00:54:28.880
People could think, well, why don't I just use ChatGPT or something, but


00:54:28.880 --> 00:54:32.160
these are the things that you teach it like deeply about, you've given all the


00:54:32.160 --> 00:54:34.300
docs and you say, study this.


00:54:34.300 --> 00:54:35.720
And then I want to ask you about it.


00:54:35.720 --> 00:54:36.040
Right.


00:54:36.040 --> 00:54:39.520
And a lot of times the docs and other things go beyond the token level.


00:54:39.520 --> 00:54:41.960
That the standard models can take.


00:54:41.960 --> 00:54:45.440
Like I've tried to get ChatGPT to tell me about transcripts on talk


00:54:45.440 --> 00:54:49.760
Python and it can't even adjust like one transcript before it runs out of space.


00:54:49.760 --> 00:54:51.160
Like I can't quite load all that.


00:54:51.160 --> 00:54:52.960
Well, that's, I wanted to ask you about all of them.


00:54:52.960 --> 00:54:53.880
You can't even do one.


00:54:53.880 --> 00:54:55.400
So this is not working for me.


00:54:55.400 --> 00:54:55.580
Yeah.


00:54:55.580 --> 00:54:57.620
So you could fine tune like an open source LLM and then


00:54:57.620 --> 00:54:58.660
host it wherever you want, right?


00:54:58.660 --> 00:54:59.540
So yes, exactly.


00:54:59.540 --> 00:55:00.360
More control.


00:55:00.360 --> 00:55:00.880
Yeah, that's cool.


00:55:00.880 --> 00:55:02.360
So you could teach all about radio.


00:55:02.360 --> 00:55:03.260
Real quick question.


00:55:03.260 --> 00:55:03.640
Mr.


00:55:03.640 --> 00:55:06.560
Magnetic in the audience asks, what about a hug and face desktop


00:55:06.560 --> 00:55:07.800
app instead of the browser app?


00:55:07.800 --> 00:55:08.080
Yeah.


00:55:08.080 --> 00:55:10.600
So that's something that there's an open issue for that.


00:55:10.600 --> 00:55:13.260
It's something that we've been kicking around as well.


00:55:13.260 --> 00:55:16.620
It's just like, how do we get like a great deal of desktop app as well.


00:55:16.620 --> 00:55:18.360
So yes, stay tuned.


00:55:18.360 --> 00:55:21.180
I think, let me try to find that issue and then comment in the YouTube.


00:55:21.180 --> 00:55:22.860
But yeah, I would love your thoughts on that.


00:55:22.860 --> 00:55:25.500
If anyone has thoughts on that, but yeah, we, it's something


00:55:25.500 --> 00:55:27.780
we're thinking about, it's not, I don't think it'll happen maybe


00:55:27.780 --> 00:55:29.900
in the next like month or two, but maybe before the end of the


00:55:29.900 --> 00:55:31.300
year or next year, it could happen.


00:55:31.300 --> 00:55:31.740
Excellent.


00:55:31.740 --> 00:55:32.340
All right.


00:55:32.340 --> 00:55:34.980
Well, I think that pretty well covers it.


00:55:34.980 --> 00:55:36.220
It's a super exciting project.


00:55:36.220 --> 00:55:37.380
So good luck with it.


00:55:37.380 --> 00:55:40.340
I mean, already you've had a lot of luck with it, so you don't need my wishes,


00:55:40.340 --> 00:55:42.260
but further good luck on that.


00:55:42.300 --> 00:55:46.140
And yeah, before we get out of here, let me ask you a final question here.


00:55:46.140 --> 00:55:48.900
If you're always asked, like to ask the guests or like some cool


00:55:48.900 --> 00:55:50.580
IPI project they've run across.


00:55:50.580 --> 00:55:51.580
That's been really awesome.


00:55:51.580 --> 00:55:54.420
It may be not super popular, but has made a difference or you've.


00:55:54.420 --> 00:55:55.020
Wow.


00:55:55.020 --> 00:55:56.300
How did I not know about this?


00:55:56.300 --> 00:55:57.300
Any come to mind for you?


00:55:57.300 --> 00:55:58.020
Python project?


00:55:58.020 --> 00:55:58.380
Yeah.


00:55:58.380 --> 00:56:01.900
On something I can pip install like FastAPI, but not FastAPI.


00:56:01.900 --> 00:56:02.740
Cause everyone knows that.


00:56:02.740 --> 00:56:06.180
I think when I was just starting out, I think I, I was like a really big noob.


00:56:06.180 --> 00:56:09.700
And like, I always ran into like environment issues.


00:56:09.980 --> 00:56:12.580
And then a friend of mine showed me about like PipDevTree.


00:56:12.580 --> 00:56:17.500
It shows you exactly like why things get installed and yeah, I think it's really,


00:56:17.500 --> 00:56:18.940
I think it's really magical, honestly.


00:56:18.940 --> 00:56:19.220
Yeah.


00:56:19.220 --> 00:56:22.460
I think it's really helpful just to like figure out, like, especially


00:56:22.460 --> 00:56:26.100
like when someone files an issue and like, we don't know what's wrong with them.


00:56:26.100 --> 00:56:29.020
Like sometimes I'll just like, where did this thing even come from?


00:56:29.020 --> 00:56:30.340
And then just use like PipDevTree.


00:56:30.340 --> 00:56:31.380
I think that's, it's really cool.


00:56:31.380 --> 00:56:32.260
It's like really simple.


00:56:32.260 --> 00:56:35.540
But yeah, I think it definitely has saved me a couple hours of time.


00:56:35.540 --> 00:56:35.940
So.


00:56:35.940 --> 00:56:36.300
It's cool.


00:56:36.300 --> 00:56:37.460
I've used it for my own stuff.


00:56:37.460 --> 00:56:39.740
I hadn't thought about using it for tech support, but yeah,


00:56:39.740 --> 00:56:42.260
of course, because then people run into problems because their


00:56:42.260 --> 00:56:44.860
environments are screwed up and they say they have a thing or they don't, or


00:56:44.860 --> 00:56:48.060
they say they have a version of a thing, but they don't, and with this, you can


00:56:48.060 --> 00:56:51.540
just to say, run this one command and it'll give you like a really cool, they


00:56:51.540 --> 00:56:55.100
have all these things installed and this is installed because it's required.


00:56:55.100 --> 00:56:56.060
Yeah, exactly.


00:56:56.060 --> 00:56:56.780
It's really nice.


00:56:56.780 --> 00:56:56.980
Yeah.


00:56:56.980 --> 00:56:57.260
Cool.


00:56:57.260 --> 00:56:58.420
Excellent recommendation.


00:56:58.420 --> 00:56:58.820
All right.


00:56:58.820 --> 00:56:59.980
Final call to action.


00:56:59.980 --> 00:57:01.660
People want to get started with Gradio.


00:57:01.660 --> 00:57:02.340
What'd you tell them?


00:57:02.340 --> 00:57:05.660
>> Hit the install Gradio and then go to gradioapp.com and then


00:57:05.660 --> 00:57:07.260
just see the demos there.


00:57:07.380 --> 00:57:09.540
In our website, there's a link to our discord server.


00:57:09.540 --> 00:57:09.960
So yeah.


00:57:09.960 --> 00:57:12.300
Join the discord and say hi.


00:57:12.300 --> 00:57:13.700
And then yeah, there's lots of people there.


00:57:13.700 --> 00:57:14.500
We're willing to help.


00:57:14.500 --> 00:57:17.220
And then I, yeah, never hesitate to file an issue.


00:57:17.220 --> 00:57:20.180
What's really cool about this is like seeing that the demos that people build


00:57:20.180 --> 00:57:24.020
and like people build stuff that I frankly push the limits of what I thought people


00:57:24.020 --> 00:57:25.200
could build with radio.


00:57:25.200 --> 00:57:26.780
And it's really cool seeing that.


00:57:26.780 --> 00:57:27.500
Yeah, that's awesome.


00:57:27.500 --> 00:57:30.780
Don't be afraid to, or don't hesitate to build really cool stuff with radio and


00:57:30.780 --> 00:57:32.860
think, well, we're really good about amplifying that.


00:57:32.860 --> 00:57:36.700
So if you have something really cool, just like tag the radio Twitter account or


00:57:36.940 --> 00:57:38.620
reach out to us on discord or something.


00:57:38.620 --> 00:57:39.780
We'll amplify it for you.


00:57:39.780 --> 00:57:41.260
Well, excellent project.


00:57:41.260 --> 00:57:43.100
And thank you for being on the show.


00:57:43.100 --> 00:57:44.060
Thank you for having me, Michael.


00:57:44.060 --> 00:57:44.580
I had a lot of fun.


00:57:44.580 --> 00:57:45.180
Yeah, same.


00:57:45.180 --> 00:57:49.580
This has been another episode of talk Python to me.


00:57:49.580 --> 00:57:51.460
Thank you to our sponsors.


00:57:51.460 --> 00:57:53.020
Be sure to check out what they're offering.


00:57:53.020 --> 00:57:54.420
It really helps support the show.


00:57:54.420 --> 00:57:59.420
The folks over at JetBrains encourage you to get work done with PyCharm.


00:57:59.420 --> 00:58:03.540
PyCharm professional understands complex projects across multiple


00:58:03.540 --> 00:58:07.940
languages and technologies so you can stay productive while you're writing Python code


00:58:07.940 --> 00:58:15.700
and other code like HTML or SQL. Download your free trial at talkpython.fm/donewithpycharm.


00:58:15.700 --> 00:58:21.780
Take some stress out of your life. Get notified immediately about errors and performance issues


00:58:21.780 --> 00:58:28.420
in your web or mobile applications with Sentry. Just visit talkpython.fm/sentry and get started


00:58:28.420 --> 00:58:32.500
for free. And be sure to use the promo code "talkpython" all one word.


00:58:32.500 --> 00:58:37.420
Want to level up your Python? We have one of the largest catalogs of Python video courses


00:58:37.420 --> 00:58:42.300
over at Talk Python. Our content ranges from true beginners to deeply advanced topics like


00:58:42.300 --> 00:58:46.780
memory and async. And best of all, there's not a subscription in sight. Check it out


00:58:46.780 --> 00:58:49.540
for yourself at training.talkpython.fm.


00:58:49.540 --> 00:58:54.160
Be sure to subscribe to the show, open your favorite podcast app, and search for Python.


00:58:54.160 --> 00:58:55.520
we should be right at the top.


00:58:55.520 --> 00:58:58.400
You can also find the iTunes feed at /itunes,


00:58:58.400 --> 00:59:00.600
the Google Play feed at /play,


00:59:00.600 --> 00:59:04.600
and the Direct RSS feed at /rss on talkpython.fm.


00:59:04.600 --> 00:59:08.120
We're live streaming most of our recordings these days.


00:59:08.120 --> 00:59:09.260
If you want to be part of the show


00:59:09.260 --> 00:59:11.520
and have your comments featured on the air,


00:59:11.520 --> 00:59:13.400
be sure to subscribe to our YouTube channel


00:59:13.400 --> 00:59:16.400
at talkpython.fm/youtube.


00:59:16.400 --> 00:59:17.800
This is your host, Michael Kennedy.


00:59:17.800 --> 00:59:18.960
Thanks so much for listening.


00:59:18.960 --> 00:59:20.200
I really appreciate it.


00:59:20.200 --> 00:59:22.440
Now get out there and write some Python code.


00:59:22.440 --> 00:59:25.020
(upbeat music)


00:59:25.020 --> 00:59:38.020
[Music]


00:59:38.020 --> 00:59:40.600
(upbeat music)


00:59:40.600 --> 00:59:50.600
[BLANK_AUDIO]

