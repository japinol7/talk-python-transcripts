WEBVTT

00:00:00.000 --> 00:00:04.080
- Hello, YouTube. Hello, Max.


00:00:04.080 --> 00:00:06.680
- Hey, happy to be on the show.


00:00:06.680 --> 00:00:08.120
- Yeah, happy to have you here.


00:00:08.120 --> 00:00:10.120
Let's go ahead and kick this thing off.


00:00:10.120 --> 00:00:12.880
And just before we do, people out there listening live,


00:00:12.880 --> 00:00:14.900
please throw out some comments, questions.


00:00:14.900 --> 00:00:16.080
We'll try to make them part of the show.


00:00:16.080 --> 00:00:18.060
And with that, let's get started.


00:00:18.060 --> 00:00:20.620
Max, welcome to Talk By The Enemy.


00:00:20.620 --> 00:00:21.460
- Well, thank you.


00:00:21.460 --> 00:00:23.320
This is exciting to be here.


00:00:23.320 --> 00:00:26.000
Love to talk about Apache Superset.


00:00:26.000 --> 00:00:27.920
So hit me up.


00:00:29.080 --> 00:00:31.720
- Yeah, it's quite the thing that you've created


00:00:31.720 --> 00:00:34.200
and it looks like it's really going strong.


00:00:34.200 --> 00:00:36.480
So we're gonna talk about tools


00:00:36.480 --> 00:00:38.480
for data exploration in general,


00:00:38.480 --> 00:00:41.520
and then we'll dive in and focus on Superset,


00:00:41.520 --> 00:00:42.820
which is what you've created.


00:00:42.820 --> 00:00:44.520
So I'm really excited to do that.


00:00:44.520 --> 00:00:45.360
- Excited to do it too.


00:00:45.360 --> 00:00:47.440
I've been kind of baiting and kind of swimming


00:00:47.440 --> 00:00:50.720
in this old world of data, data orchestration,


00:00:50.720 --> 00:00:55.060
exploration, visualization for the past 20 years or so.


00:00:55.060 --> 00:00:57.560
So that's been really my focus.


00:00:57.560 --> 00:01:01.220
So I should have a lot to say about everything


00:01:01.220 --> 00:01:02.680
related to this space.


00:01:02.680 --> 00:01:03.520
- Yeah, fantastic.


00:01:03.520 --> 00:01:05.060
And you've got a lot of experience


00:01:05.060 --> 00:01:06.520
at many of the big tech companies


00:01:06.520 --> 00:01:09.000
that people would think of as having lots


00:01:09.000 --> 00:01:10.280
of interesting data to look at.


00:01:10.280 --> 00:01:11.920
And so we can dive into that


00:01:11.920 --> 00:01:13.480
just a bit at the beginning here.


00:01:13.480 --> 00:01:14.820
But before we get to any of those things,


00:01:14.820 --> 00:01:17.200
let me kick it off with the beginning question.


00:01:17.200 --> 00:01:19.400
How'd you get into programming, Python,


00:01:19.400 --> 00:01:20.880
and all these things?


00:01:20.880 --> 00:01:25.640
- Okay, yes, I did a decline of an associate degree


00:01:25.640 --> 00:01:28.140
back around in the late 90s.


00:01:28.140 --> 00:01:33.140
So that kind of says about how long I've been doing this,


00:01:33.140 --> 00:01:34.780
but I never finished it too.


00:01:34.780 --> 00:01:39.780
So I never finished and got my actual diploma for it too.


00:01:39.780 --> 00:01:42.820
So I got into an internship to join a company


00:01:42.820 --> 00:01:43.820
called Ubisoft.


00:01:43.820 --> 00:01:45.060
So it's a video game company,


00:01:45.060 --> 00:01:48.040
is one of the major video game companies out there.


00:01:48.040 --> 00:01:50.460
And I went on to my first internship


00:01:50.460 --> 00:01:52.900
and never looked back and never finished a program.


00:01:52.900 --> 00:01:54.920
So that's where my career started.


00:01:54.920 --> 00:02:00.760
And this program was like very, it's called a Technic on Informatics.


00:02:00.760 --> 00:02:05.160
I'm from Quebec City originally, so I grew up speaking French and that was a program in French.


00:02:05.160 --> 00:02:07.160
And it's a technical program.


00:02:07.160 --> 00:02:13.880
The goal of the program was to send technicians as they call them,


00:02:13.880 --> 00:02:15.880
people that are very technical, really focused,


00:02:15.880 --> 00:02:23.640
and then give them the skills that they need to be effective, joining companies.


00:02:23.640 --> 00:02:27.320
So some programming, some data modeling,


00:02:27.320 --> 00:02:29.020
a little bit of SQL,


00:02:29.020 --> 00:02:32.940
and then really like the skills that you need


00:02:32.940 --> 00:02:35.000
to get started and start coding,


00:02:35.000 --> 00:02:37.300
not necessarily thinking about like computer science


00:02:37.300 --> 00:02:39.320
and like data structures, like much more like,


00:02:39.320 --> 00:02:40.320
- Right, right, right.


00:02:40.320 --> 00:02:42.020
- What do you need to get started?


00:02:42.020 --> 00:02:42.860
And that-


00:02:42.860 --> 00:02:44.720
- Let me interrupt you for just a second there


00:02:44.720 --> 00:02:48.280
and just, we can maybe talk just a bit about this.


00:02:48.280 --> 00:02:50.620
I feel like a lot of people looking in from the outside


00:02:50.620 --> 00:02:52.880
feel like, oh, I need a computer science degree


00:02:52.880 --> 00:02:56.800
in order to do X, Y, or Z, whatever it is,


00:02:56.800 --> 00:02:58.560
create APIs, create a business,


00:02:58.560 --> 00:03:00.400
do data science or whatever.


00:03:00.400 --> 00:03:02.920
And so much of the focus of CS degree


00:03:02.920 --> 00:03:07.920
seems to be on algorithms, on operating systems.


00:03:07.920 --> 00:03:11.060
And while those are really good to know,


00:03:11.060 --> 00:03:13.800
they're not necessarily the skills you sit down and go,


00:03:13.800 --> 00:03:16.120
let me remember my algorithms things.


00:03:16.120 --> 00:03:18.640
Like you just call a function on a data structure


00:03:18.640 --> 00:03:20.560
or let me remember my operating system stuff.


00:03:20.560 --> 00:03:22.300
Like you just run the code.


00:03:22.300 --> 00:03:23.260
It's helpful to have that,


00:03:23.260 --> 00:03:26.200
but I don't feel like it's that necessary.


00:03:26.200 --> 00:03:28.580
I know people out there listening to think,


00:03:28.580 --> 00:03:29.860
oh, I've got to go get a CS degree


00:03:29.860 --> 00:03:31.660
or I'm not going to do anything, right?


00:03:31.660 --> 00:03:33.940
- Yeah, I think the bootcamp,


00:03:33.940 --> 00:03:37.060
I've been told like flip that upside down to say like,


00:03:37.060 --> 00:03:38.860
oh, now all you need is the technical skills


00:03:38.860 --> 00:03:42.340
to get started to, I don't know, build an app,


00:03:42.340 --> 00:03:44.540
and then you don't need those fundamentals


00:03:44.540 --> 00:03:46.860
or maybe the premise that you need them later.


00:03:46.860 --> 00:03:50.220
I think there needs to be some balance there.


00:03:50.220 --> 00:03:51.620
So the CS approach,


00:03:51.620 --> 00:03:54.900
let's start with the foundation and kind of how we got here


00:03:54.900 --> 00:03:57.540
and then the rest should follow.


00:03:57.540 --> 00:03:58.820
I don't think that's right.


00:03:58.820 --> 00:04:00.980
'Cause to me, you don't really add that curiosity


00:04:00.980 --> 00:04:05.780
about how you got there until you've been a practitioner.


00:04:05.780 --> 00:04:08.780
So to me, I'm like, hey, teach people the skills


00:04:08.780 --> 00:04:12.340
they need to be successful and useful to employers.


00:04:12.340 --> 00:04:15.300
It seems like the way that university in general


00:04:15.300 --> 00:04:17.380
or education should be oriented towards.


00:04:17.380 --> 00:04:19.420
Like let's teach people the skills they need


00:04:19.420 --> 00:04:24.340
to contribute effectively to the market.


00:04:24.340 --> 00:04:27.620
And then I think maybe the CS constructs


00:04:27.620 --> 00:04:29.900
is something you would learn,


00:04:29.900 --> 00:04:33.420
that wisdom you would build as you learn.


00:04:33.420 --> 00:04:34.620
- Some of you would pick it up


00:04:34.620 --> 00:04:36.220
and some of you are like, I really need to know.


00:04:36.220 --> 00:04:37.420
I've been doing this for a year now.


00:04:37.420 --> 00:04:38.780
I need to know how this thing works.


00:04:38.780 --> 00:04:40.540
And you'll dive into it, right?


00:04:40.540 --> 00:04:42.620
But when you're motivated and you kind of,


00:04:42.620 --> 00:04:45.400
you have that experience already, yeah.


00:04:45.400 --> 00:04:47.980
- Yes, it's like when you have to solve the problem,


00:04:47.980 --> 00:04:50.920
certain problems, you know, and then maybe at that point,


00:04:50.920 --> 00:04:53.160
I don't know if you're writing a bunch of SQL


00:04:53.160 --> 00:04:54.660
and you're building a lot of data structure,


00:04:54.660 --> 00:04:57.880
maybe you need to understand like data modeling construct.


00:04:57.880 --> 00:05:00.120
And that's a good time to go and understand the history


00:05:00.120 --> 00:05:03.480
of, you know, the different approaches to data modeling,


00:05:03.480 --> 00:05:06.840
but maybe you don't start from the theory, right?


00:05:06.840 --> 00:05:07.680
- Yeah, yeah.


00:05:07.680 --> 00:05:09.680
- But yes, so like going back to your question,


00:05:09.680 --> 00:05:11.640
so I, so then I joined the,


00:05:11.640 --> 00:05:15.200
so I was a web developer kind of building internal apps


00:05:15.200 --> 00:05:18.320
for like a year and then very quickly I got into data


00:05:18.320 --> 00:05:23.320
and got into building data warehouse at Ubisoft


00:05:23.320 --> 00:05:27.800
and then using the business intelligence kind of toolkit


00:05:27.800 --> 00:05:30.120
to build all sorts of reports, dashboard,


00:05:30.120 --> 00:05:33.820
kind of self-service things so people could consume data.


00:05:33.820 --> 00:05:35.540
So very quickly got into that.


00:05:35.540 --> 00:05:38.040
And it's a little bit later that I learned,


00:05:38.040 --> 00:05:39.640
I started doing more scripting.


00:05:39.640 --> 00:05:42.920
So when I joined Yahoo in 2007,


00:05:42.920 --> 00:05:45.320
I believe that was like the birth of Hadoop


00:05:45.320 --> 00:05:49.280
and Yahoo had some pearl, you know,


00:05:49.280 --> 00:05:51.360
so I learned a script a little bit


00:05:51.360 --> 00:05:53.960
and kind of interpreted languages more.


00:05:53.960 --> 00:05:56.360
And then by the time I think I started building


00:05:56.360 --> 00:05:59.040
more website for personal projects.


00:05:59.040 --> 00:06:01.520
So learned a bunch of Python there


00:06:01.520 --> 00:06:03.660
and played a lot with Django.


00:06:03.660 --> 00:06:07.760
And by the time I joined Facebook in 2012,


00:06:07.760 --> 00:06:09.720
I knew Python very well.


00:06:09.720 --> 00:06:14.720
And then that became kind of my main language,


00:06:14.720 --> 00:06:17.360
and that's really what we use internally


00:06:17.360 --> 00:06:21.720
for a lot of things at Facebook.


00:06:21.720 --> 00:06:23.440
And that just became like more and more


00:06:23.440 --> 00:06:26.080
the established kind of language


00:06:26.080 --> 00:06:29.480
for everything data related right around that time.


00:06:29.480 --> 00:06:30.300
- Yeah.


00:06:30.300 --> 00:06:34.180
What a cool set of experience you are at.


00:06:34.180 --> 00:06:38.440
Was it Lyft, Airbnb?


00:06:38.440 --> 00:06:40.320
- Yeah, Facebook, Yahoo.


00:06:40.320 --> 00:06:43.200
- Yeah, a lot of, yeah.


00:06:43.200 --> 00:06:45.200
So Ubisoft is interesting.


00:06:45.200 --> 00:06:47.040
They're a Canadian company, right?


00:06:47.040 --> 00:06:48.240
- They are a French company.


00:06:48.240 --> 00:06:50.520
So their headquarters is in Montreux,


00:06:50.520 --> 00:06:52.200
like very, like next to Paris,


00:06:52.200 --> 00:06:55.200
or I think they were actually like from Bretagne,


00:06:55.200 --> 00:06:57.120
so Brittany somewhere in France.


00:06:57.120 --> 00:06:57.960
- Okay.


00:06:57.960 --> 00:06:58.780
- But they're a French company.


00:06:58.780 --> 00:07:00.720
They have a huge studio in Montreal though.


00:07:00.720 --> 00:07:04.840
There's like amazing tax breaks in Quebec and Canada.


00:07:04.840 --> 00:07:06.760
And they decided to build like one of the biggest,


00:07:06.760 --> 00:07:09.280
if not the biggest video game studio


00:07:09.280 --> 00:07:10.420
in the world in Montreal.


00:07:10.420 --> 00:07:12.840
So that's where I started my career.


00:07:12.840 --> 00:07:14.840
- Well, the reason I'm bringing it up is I wanna ask you


00:07:14.840 --> 00:07:17.520
about what it's like working at a game company


00:07:17.520 --> 00:07:19.880
versus a more traditional,


00:07:19.880 --> 00:07:22.600
I don't know if you call Yahoo traditional, but like.


00:07:22.600 --> 00:07:23.440
- Yeah.


00:07:23.440 --> 00:07:27.080
- A lot of people dream of being at these game companies


00:07:27.080 --> 00:07:29.040
and that's even maybe why they got into programming.


00:07:29.040 --> 00:07:33.480
And I don't know, tell us what your experience was like.


00:07:33.480 --> 00:07:35.200
- Yeah, so it's a dated experience, right?


00:07:35.200 --> 00:07:37.080
I don't know what it is.


00:07:37.080 --> 00:07:40.040
I left Ubisoft in 2007.


00:07:40.040 --> 00:07:42.840
So it's like a pretty dated, it's 15 years ago.


00:07:42.840 --> 00:07:45.340
I can say about like what it was like at the time.


00:07:45.340 --> 00:07:47.360
It's a mix of like super fun.


00:07:47.360 --> 00:07:49.800
It was like super young, a bit bro-y too,


00:07:49.800 --> 00:07:52.640
in a lot of ways, like very masculine environment.


00:07:52.640 --> 00:07:55.040
Also like, you know, some of it is because it's,


00:07:55.040 --> 00:07:57.680
you know, 15 to 20 years ago.


00:07:57.680 --> 00:07:59.920
I think it was a slightly different world.


00:07:59.920 --> 00:08:03.600
And a lot of things that were maybe dubious back then


00:08:03.600 --> 00:08:06.040
are definitely not okay anymore.


00:08:06.040 --> 00:08:08.640
I mean, I think there's that culture people talk about,


00:08:08.640 --> 00:08:10.720
I think Electronic Arts has been famous for that.


00:08:10.720 --> 00:08:13.560
And a lot of the big video game companies


00:08:13.560 --> 00:08:16.320
is having like these work environments


00:08:16.320 --> 00:08:20.040
that were fairly like, you know, dubious in some ways.


00:08:20.040 --> 00:08:22.760
But I think Ubisoft was a great place to be,


00:08:22.760 --> 00:08:24.600
I think at the time.


00:08:24.600 --> 00:08:27.440
And I think like maybe one of the better ones


00:08:27.440 --> 00:08:30.440
kind of bringing it back to where it should be


00:08:30.440 --> 00:08:33.200
and ahead of its time, perhaps.


00:08:33.200 --> 00:08:35.880
But my experience at Ubisoft was so interesting,


00:08:35.880 --> 00:08:38.800
it was difficult for me to talk about what is Ubisoft


00:08:38.800 --> 00:08:42.520
'cause I work in three different studios, Montreal, Paris.


00:08:42.520 --> 00:08:44.520
I was in Montreal for about a year


00:08:44.520 --> 00:08:49.200
until I was in Ubisoft Paris for about three years.


00:08:49.200 --> 00:08:52.880
And then Ubisoft San Francisco for another three years.


00:08:52.880 --> 00:08:56.480
So the three different offices were vastly different.


00:08:56.480 --> 00:09:01.360
And I think the things that kind of plagued


00:09:01.360 --> 00:09:05.760
the video game business, like long hours, kind of low pay.


00:09:05.760 --> 00:09:07.600
I think that definitely existed.


00:09:07.600 --> 00:09:09.920
- Like grinding people out sort of thing, yeah.


00:09:09.920 --> 00:09:12.480
- Yeah, kind of like, it's never enough,


00:09:12.480 --> 00:09:15.640
a lot of crunch time all the time.


00:09:15.640 --> 00:09:18.520
And yeah, and then kind of a great place


00:09:18.520 --> 00:09:21.600
maybe to start your career, but then as people mature,


00:09:21.600 --> 00:09:23.960
they tend to go other places.


00:09:23.960 --> 00:09:25.960
(indistinct)


00:09:25.960 --> 00:09:27.320
I think it has changed so much,


00:09:27.320 --> 00:09:29.240
like the whole world culture has changed a lot.


00:09:29.240 --> 00:09:30.080
- Sure.


00:09:30.960 --> 00:09:34.460
- Yeah, as you have relationships and families


00:09:34.460 --> 00:09:38.340
and you want to see them, things like that.


00:09:38.340 --> 00:09:39.180
- Yeah, yeah, seriously.


00:09:39.180 --> 00:09:42.560
You're gonna age out of working out all the time


00:09:42.560 --> 00:09:44.480
or just by necessity too.


00:09:44.480 --> 00:09:46.560
- Yeah, yeah, exactly.


00:09:46.560 --> 00:09:50.120
All right, well, let's kick off our conversation


00:09:50.120 --> 00:09:53.520
focusing on data exploration, I think.


00:09:53.520 --> 00:09:58.520
So when I think about data exploration,


00:09:58.680 --> 00:10:01.120
not from a developer or data science,


00:10:01.120 --> 00:10:03.420
but in like the super broad sense,


00:10:03.420 --> 00:10:07.820
you know, I don't know what comes to mind for you,


00:10:07.820 --> 00:10:11.860
but Excel, I feel like most people are like,


00:10:11.860 --> 00:10:12.700
I've got some data,


00:10:12.700 --> 00:10:16.540
I need to maybe think about it a little bit more analytically


00:10:16.540 --> 00:10:20.180
than just a bunch of numbers.


00:10:20.180 --> 00:10:22.580
Let me throw it in Excel and see what I can do with it.


00:10:22.580 --> 00:10:27.660
- Yeah, I mean, I think Excel is like a super open,


00:10:27.660 --> 00:10:29.880
if you think about like Excel as a playground


00:10:29.880 --> 00:10:33.000
or as a framework, it's super open-ended,


00:10:33.000 --> 00:10:33.840
you can do so much in there.


00:10:33.840 --> 00:10:37.160
And there's not a lot of constraints, right?


00:10:37.160 --> 00:10:39.600
So the constraint that exists in an Excel file


00:10:39.600 --> 00:10:41.760
are the ones that you make for yourself.


00:10:41.760 --> 00:10:43.640
And then maybe one constraint is like,


00:10:43.640 --> 00:10:45.520
it used to be like, I forgot what it was,


00:10:45.520 --> 00:10:49.360
but it's like 65,000 rows for a long time.


00:10:49.360 --> 00:10:53.340
And I think now there's no such limits anymore,


00:10:53.340 --> 00:10:55.920
but there's still like a limit of how much your laptop


00:10:55.920 --> 00:11:00.760
is gonna be able to, in terms of the size of a pivot table.


00:11:00.760 --> 00:11:02.880
At the past companies where I was at,


00:11:02.880 --> 00:11:05.400
there's no way you could bring the dimensionality


00:11:05.400 --> 00:11:07.640
and kind of the raw data that you need in Excel.


00:11:07.640 --> 00:11:09.120
So you need to kind of prepare and extract


00:11:09.120 --> 00:11:11.200
of the stuff you're gonna play with.


00:11:11.200 --> 00:11:12.720
First, you gotta be in Excel.


00:11:12.720 --> 00:11:14.320
And then there's like things that,


00:11:14.320 --> 00:11:16.760
BI historically has not been really good at


00:11:16.760 --> 00:11:19.960
is what if analysis, creating different scenarios,


00:11:19.960 --> 00:11:21.200
doing forecasting.


00:11:21.200 --> 00:11:23.640
So I think like that is an area


00:11:23.640 --> 00:11:28.640
where spreadsheet dominate will keep dominating, right?


00:11:28.640 --> 00:11:31.800
If you want to add certain things to variables


00:11:31.800 --> 00:11:35.280
and change the numbers and see how other like,


00:11:35.280 --> 00:11:36.740
you know, charts and models are.


00:11:36.740 --> 00:11:39.120
So modeling kind of is a really good case,


00:11:39.120 --> 00:11:41.440
I think for Excel.


00:11:41.440 --> 00:11:43.780
Then, you know, the downside is like,


00:11:43.780 --> 00:11:46.200
oh, how do you collaborate on these things?


00:11:46.200 --> 00:11:48.360
And like the version is kind of a mess


00:11:48.360 --> 00:11:49.880
where you end up with like a million files


00:11:49.880 --> 00:11:50.720
and share point or--


00:11:50.720 --> 00:11:51.640
- Even the files are binary,


00:11:51.640 --> 00:11:55.200
so you can't dip them or anything easily, right?


00:11:55.200 --> 00:11:57.000
- Oh yeah, they're not in source control


00:11:57.000 --> 00:11:58.880
and then you don't know,


00:11:58.880 --> 00:12:01.960
there's no introspection as to how things got there.


00:12:01.960 --> 00:12:04.880
They're a mix of data that are from a source


00:12:04.880 --> 00:12:07.920
and then kind of made up stuff sometimes,


00:12:07.920 --> 00:12:10.480
like, I'm gonna tweak this, I'm gonna change that.


00:12:10.480 --> 00:12:12.080
So you don't know what is the list


00:12:12.080 --> 00:12:15.920
of all the changes that were applied to the source data.


00:12:15.920 --> 00:12:17.440
So I don't know, I think it's a good tool,


00:12:17.440 --> 00:12:19.560
but it's definitely incomplete, right?


00:12:19.560 --> 00:12:21.860
It's part of the feedback will always be.


00:12:21.860 --> 00:12:25.600
- Yeah, I don't bring it up as a recommendation.


00:12:25.600 --> 00:12:27.800
I bring it up as I feel like a lot of people


00:12:27.800 --> 00:12:28.880
are starting here.


00:12:28.880 --> 00:12:31.400
And so like, how can we look around


00:12:31.400 --> 00:12:33.960
and see maybe what is a better option out there?


00:12:33.960 --> 00:12:39.160
- Yeah, and it's, I think if you've used Excel a lot


00:12:39.160 --> 00:12:41.000
in your organization, or personally,


00:12:41.000 --> 00:12:43.520
I think people discover, kind of hit their head


00:12:43.520 --> 00:12:45.400
on the limitations and the problems


00:12:45.400 --> 00:12:48.900
that come with such an open framework pretty quickly.


00:12:48.900 --> 00:12:51.680
- Yeah, the audience, Ollie says,


00:12:51.680 --> 00:12:53.980
my local data extraction people default to Excel


00:12:53.980 --> 00:12:56.540
and they seem limited by the number of sheets available


00:12:56.540 --> 00:12:57.660
in a workbook.


00:12:57.660 --> 00:12:58.580
Yeah.


00:12:58.580 --> 00:13:00.760
- Well, I guess now that it's not the number of lines


00:13:00.760 --> 00:13:03.600
in a file, I guess it's the number of sheets.


00:13:03.600 --> 00:13:05.460
- The number of sheets, that's right.


00:13:05.460 --> 00:13:08.060
So, you know, sort of stepping up a level from this,


00:13:08.060 --> 00:13:10.560
I mean, I feel like maybe heading down


00:13:10.560 --> 00:13:13.120
a more structured way, like for one of the problems


00:13:13.120 --> 00:13:16.220
with Excel is how do I talk to databases and APIs


00:13:16.220 --> 00:13:18.300
and like, how do I bring in other more live data


00:13:18.300 --> 00:13:19.840
It's really, really limited.


00:13:19.840 --> 00:13:22.900
I know there's like BI stuff, but not really.


00:13:22.900 --> 00:13:25.680
Sort of the next step up, what do you think?


00:13:25.680 --> 00:13:29.640
Is that Jupyter or where, like where's the next level here?


00:13:29.640 --> 00:13:32.900
- We're talking about consumption now in some ways,


00:13:32.900 --> 00:13:34.640
but I feel like in a lot of ways


00:13:34.640 --> 00:13:37.280
we should be talking about data engineering too.


00:13:37.280 --> 00:13:38.800
So where is your data, right?


00:13:38.800 --> 00:13:40.160
Is the first question.


00:13:40.160 --> 00:13:42.520
So first, your data is not, does not,


00:13:42.520 --> 00:13:44.120
or maybe some of the data lives in Excel,


00:13:44.120 --> 00:13:47.520
but that's not where your data lives nowadays.


00:13:47.520 --> 00:13:49.320
and the SaaS application you use, right?


00:13:49.320 --> 00:13:51.880
So the modern, like just even any startup


00:13:51.880 --> 00:13:55.880
or company uses hundreds of SaaS applications,


00:13:55.880 --> 00:13:58.680
you know, CRMs, applicant tracking systems,


00:13:58.680 --> 00:14:04.480
you know, GitHub and just a million different data sources.


00:14:04.480 --> 00:14:08.740
And it feels like one of the first thing you need to do


00:14:08.740 --> 00:14:11.240
is to bring that data together, right?


00:14:11.240 --> 00:14:16.240
And in a central place or into some sort of like inside,


00:14:16.800 --> 00:14:18.660
you know, either data marts or data warehouse,


00:14:18.660 --> 00:14:20.120
I think like an early construct


00:14:20.120 --> 00:14:22.280
that you need as an organization,


00:14:22.280 --> 00:14:25.700
because data is most useful when it's put alongside


00:14:25.700 --> 00:14:28.600
the other data you have in your organization.


00:14:28.600 --> 00:14:30.860
It does make sense to hoard all this data


00:14:30.860 --> 00:14:33.160
and bring it all to a central place


00:14:33.160 --> 00:14:34.720
if you want to do consumption.


00:14:34.720 --> 00:14:36.240
Otherwise consumption is going to be


00:14:36.240 --> 00:14:37.720
kind of a stitching story, right?


00:14:37.720 --> 00:14:39.920
So let's say you're in Excel or you're in a,


00:14:39.920 --> 00:14:43.800
you're in the local database or whatever it might be,


00:14:43.800 --> 00:14:46.360
the first thing you have to do is bring


00:14:46.360 --> 00:14:49.040
the things that are related in one place,


00:14:49.040 --> 00:14:52.400
so you can do that visualization consumption analysis.


00:14:52.400 --> 00:14:56.860
How do you join on a thing that's partly in an API


00:14:56.860 --> 00:14:59.400
and partly in Airtable or something?


00:14:59.400 --> 00:15:01.600
Right, even if you-- let's say we take a notebook,


00:15:01.600 --> 00:15:03.700
so super open-ended, what is a notebook?


00:15:03.700 --> 00:15:05.860
It's just like, it's a script with REPL


00:15:05.860 --> 00:15:11.100
and where you can run chunks of the script sequentially,


00:15:11.100 --> 00:15:14.460
and you have a persistent kernel or interpreter


00:15:14.460 --> 00:15:18.060
kind of supporting what you're doing at any point in time.


00:15:18.060 --> 00:15:22.140
But the first thing, if you don't have a data warehouse or your data all in one


00:15:22.140 --> 00:15:25.820
place, you're going to try to do some data engineering is probably the first


00:15:25.820 --> 00:15:29.220
thing you're going to do within your notebook is to say, how do I get the data


00:15:29.220 --> 00:15:35.380
that I need from the source or sources that are interesting to me and the


00:15:35.380 --> 00:15:41.040
notebook, you know, will enable you for sure to do this, but then is it, you


00:15:41.040 --> 00:15:46.080
can other people build on top of the work that you did in a notebook?


00:15:46.080 --> 00:15:49.080
Probably not, or not as easily as you'd want them to.


00:15:49.080 --> 00:15:52.000
So I think the data warehousing kind of approach of saying,


00:15:52.000 --> 00:15:55.500
"Hey, let's bring the data that we need in our organization


00:15:55.500 --> 00:15:58.700
to a central place and try to stitch it together there


00:15:58.700 --> 00:16:03.240
so it can then best be used for consumption and analysis,"


00:16:03.240 --> 00:16:07.600
is still a very important step in the process.


00:16:07.600 --> 00:16:10.600
Sure, I totally agree.


00:16:10.600 --> 00:16:14.360
And, you know, Jupyter and JupyterLab


00:16:14.360 --> 00:16:16.480
gets a lot of the mind share,


00:16:16.480 --> 00:16:18.720
but there are many, many choices.


00:16:18.720 --> 00:16:22.360
I interviewed Sam Lau, and he did a research project


00:16:22.360 --> 00:16:24.760
where they categorized over 60 different


00:16:24.760 --> 00:16:27.680
notebook environments, where Jupyter was one of them.


00:16:27.680 --> 00:16:30.240
It's just, it's off the hook.


00:16:30.240 --> 00:16:32.880
So there's a lot of choices out there and so on,


00:16:32.880 --> 00:16:36.800
but, you know, let's focus on SuperSet.


00:16:36.800 --> 00:16:37.640
You know, it's--


00:16:37.640 --> 00:16:39.680
- I'd love to talk about that,


00:16:39.680 --> 00:16:45.980
It's like why do we need 60 different notebooks? I feel like I missed a step of like the evolution of notebooks


00:16:45.980 --> 00:16:48.360
I'm very familiar with Jupyter to play Jupyter hub


00:16:48.360 --> 00:16:55.680
At Airbnb a while ago, but then you know followed hex a little bit


00:16:55.680 --> 00:17:02.900
That's one of the players in space also followed so at lift we kind of built our own little notebook


00:17:02.900 --> 00:17:04.800
service


00:17:04.800 --> 00:17:12.140
Right. So we had a a corinne's cluster. We could kind of say like I want this docker image base for my notebook


00:17:12.140 --> 00:17:16.580
You'd pick like I wanted a IML package or I want you know


00:17:16.580 --> 00:17:20.060
You know, basically what's the base for your notebook?


00:17:20.060 --> 00:17:24.360
And then you could pick some hardware like any GPUs or any big machine or small machine


00:17:24.360 --> 00:17:31.020
Then we'd spin up these environments for people but try to understand like what are the different like why is there 60 notebooks?


00:17:31.020 --> 00:17:33.020
And what's what are different flavors?


00:17:33.020 --> 00:17:34.900
How do they all differentiate from each other


00:17:34.900 --> 00:17:36.060
is dubious question.


00:17:36.060 --> 00:17:37.580
- Yeah, it was crazy.


00:17:37.580 --> 00:17:39.180
I was kind of blown away by this.


00:17:39.180 --> 00:17:40.540
And if you look, they have,


00:17:40.540 --> 00:17:43.720
they moved their PDF.


00:17:43.720 --> 00:17:47.860
It seems like it always differs on some axis.


00:17:47.860 --> 00:17:50.860
Like, well, we want more collaboration like Google Docs


00:17:50.860 --> 00:17:55.060
or we want it to run into a different place like PyIodive.


00:17:55.060 --> 00:17:56.700
We want that to run in the front end


00:17:56.700 --> 00:18:01.700
rather than with like some sort of Python in the browser.


00:18:01.700 --> 00:18:03.340
sort of Python in the browser.


00:18:03.340 --> 00:18:06.340
And like, there's just all these crazy variations.


00:18:06.340 --> 00:18:07.380
So I think there's a lot,


00:18:07.380 --> 00:18:09.420
I just kind of only highlight that to point out,


00:18:09.420 --> 00:18:11.900
like, it's not just Jupyter.


00:18:11.900 --> 00:18:13.620
There's like a ton of these things


00:18:13.620 --> 00:18:17.380
where Jupyter is the main environment


00:18:17.380 --> 00:18:19.020
that kind of lives in a web browser


00:18:19.020 --> 00:18:21.140
where people go and explore data.


00:18:21.140 --> 00:18:26.140
And I feel like Superset is a pretty modern,


00:18:26.140 --> 00:18:30.180
interesting player in that space of many choices.


00:18:31.220 --> 00:18:34.100
Yeah, happy to talk about SuperSet too,


00:18:34.100 --> 00:18:36.300
and try to introduce it in the context


00:18:36.300 --> 00:18:38.100
of what we're talking about before.


00:18:38.100 --> 00:18:39.100
- Yeah, yeah, yeah.


00:18:39.100 --> 00:18:42.660
- But think about SuperSet. - Tell us about SuperSet.


00:18:42.660 --> 00:18:46.100
- Yeah, so SuperSet is essentially very much


00:18:46.100 --> 00:18:51.100
like a data exploration, dashboarding, visualization tool


00:18:51.100 --> 00:18:55.860
that's very much like catering to organization, right?


00:18:55.860 --> 00:18:59.420
So we, SuperSet solves like challenges


00:18:59.420 --> 00:19:03.340
or the problem space of data consumption for entire teams.


00:19:03.340 --> 00:19:07.100
So we're not necessarily focused on people who know Python


00:19:07.100 --> 00:19:10.740
or people who are data scientists or data analysts


00:19:10.740 --> 00:19:13.080
or data engineers, like we very much catered


00:19:13.080 --> 00:19:14.580
to the entire team.


00:19:14.580 --> 00:19:17.180
And the idea there is to have a single place


00:19:17.180 --> 00:19:21.400
to explore data, visualize it, interact with it,


00:19:21.400 --> 00:19:24.700
share, create dashboard, and then we have a SQL IDE


00:19:24.700 --> 00:19:28.700
on top of that to, I think like on the GitHub page,


00:19:28.700 --> 00:19:30.740
I don't know here if we have good screenshots to that.


00:19:30.740 --> 00:19:32.660
I think an image is worth a thousand word.


00:19:32.660 --> 00:19:34.820
And I know not everyone is like looking


00:19:34.820 --> 00:19:36.860
at what we're looking at,


00:19:36.860 --> 00:19:40.540
but here we have the drag and drop kind of explore.


00:19:40.540 --> 00:19:43.020
I think the screenshot is a little bit dated.


00:19:43.020 --> 00:19:45.340
There might be a little bit more recent on the,


00:19:45.340 --> 00:19:49.060
on a GitHub, on the GitHub page too,


00:19:49.060 --> 00:19:50.140
where you can see like,


00:19:50.140 --> 00:19:51.620
we have this drag and drop interface,


00:19:51.620 --> 00:19:54.060
very similar to what people are familiar with


00:19:54.060 --> 00:19:56.540
in business intelligence, right?


00:19:56.540 --> 00:19:59.660
where you have access to your dataset,


00:19:59.660 --> 00:20:01.740
and you drag and drop your metrics and dimensions


00:20:01.740 --> 00:20:04.180
and pick your visualization type,


00:20:04.180 --> 00:20:05.860
get to the exact chart that you want.


00:20:05.860 --> 00:20:09.900
You can assemble these charts into interactive dashboards


00:20:09.900 --> 00:20:13.560
with dynamic filtering on the dashboard


00:20:13.560 --> 00:20:17.160
and expose that to business users, right?


00:20:17.160 --> 00:20:18.500
So they can explore on their own,


00:20:18.500 --> 00:20:21.060
they can create their own dashboard,


00:20:21.060 --> 00:20:23.120
they can answer their own questions.


00:20:23.120 --> 00:20:25.500
Yeah, this sort of--


00:20:25.500 --> 00:20:28.580
>> It lives in a really, really interesting space.


00:20:28.580 --> 00:20:30.920
That's why I brought up Excel as well,


00:20:30.920 --> 00:20:34.760
is because Excel is not meant for programmers,


00:20:34.760 --> 00:20:36.300
but it's meant for people


00:20:36.300 --> 00:20:37.700
who are trying to do serious stuff with it.


00:20:37.700 --> 00:20:40.020
They maybe they'll write equals and they'll


00:20:40.020 --> 00:20:41.860
find a formula they can put in there,


00:20:41.860 --> 00:20:43.840
or they'll do a VLOOKUP,


00:20:43.840 --> 00:20:46.540
or they're trying to go more than just like,


00:20:46.540 --> 00:20:49.020
I need a grid of stuff.


00:20:49.020 --> 00:20:52.380
While Jupyter, those things are awesome,


00:20:52.380 --> 00:20:57.380
Super set feels like it caters a little bit more to like a power user type of person


00:20:57.380 --> 00:21:04.080
that has Python extension capabilities, but you don't have to start as a Python developer to get into it.


00:21:04.080 --> 00:21:04.680
Is that right?


00:21:04.680 --> 00:21:10.780
Actually, not right. Like so. So the premise is like, you don't need to have any Python skills.


00:21:10.780 --> 00:21:16.480
The skills that may help if you want to go deeper inside Super set is, you know, knowing some SQL.


00:21:16.480 --> 00:21:20.280
But knowing SQL is not a requirement. So think about like,


00:21:20.280 --> 00:21:24.780
If you think about Tableau, people familiar with Tableau or Looker, right, that's really


00:21:24.780 --> 00:21:27.620
the space that we're in.


00:21:27.620 --> 00:21:35.020
So it's platformy in a sense that, okay, you can access your database connection, you interact


00:21:35.020 --> 00:21:36.640
with datasets.


00:21:36.640 --> 00:21:44.380
But then, you know, think about the experience of someone just consuming a dashboard.


00:21:44.380 --> 00:21:49.260
You open a dashboard, it's a collection of chart, maybe it's titled like financial forecast


00:21:49.260 --> 00:21:54.260
for 2023 and you really need little technical skills to use.


00:21:54.260 --> 00:22:01.260
You need business knowledge mainly to consume a dashboard.


00:22:01.260 --> 00:22:02.560
These dashboards are interactive,


00:22:02.560 --> 00:22:04.700
so that means you'll be able to apply a filter


00:22:04.700 --> 00:22:09.340
on a specific quarter, a specific customer type of market,


00:22:09.340 --> 00:22:11.540
and then interact with the dashboard in that way.


00:22:11.540 --> 00:22:14.460
But primarily, the dashboard interface caters


00:22:14.460 --> 00:22:19.060
to the business user or anyone that is trying to understand.


00:22:19.060 --> 00:22:23.220
- I see, almost like a more of a BI type of a user person.


00:22:23.220 --> 00:22:24.740
- It is, yeah, like it is a BI tool.


00:22:24.740 --> 00:22:27.860
Super Set is a BI tool to be clear.


00:22:27.860 --> 00:22:32.860
It's a BI tool that maybe is modern in many ways


00:22:32.860 --> 00:22:37.860
and assumes, like, if you wanna get the way you get deeper,


00:22:37.860 --> 00:22:42.620
say in the Explorer, and I don't know if you can click


00:22:42.620 --> 00:22:44.640
on the upper left on the Explorer.


00:22:44.640 --> 00:22:46.180
So here for context, we're looking at more


00:22:46.180 --> 00:22:48.520
the drag and drop place in SuperSet


00:22:48.520 --> 00:22:50.600
where you pick metrics and dimension


00:22:50.600 --> 00:22:52.800
and visualization type you wanna look at.


00:22:52.800 --> 00:22:56.800
So it's your typical kind of tableau like interface, right?


00:22:56.800 --> 00:23:01.180
And here, you can essentially just drag and drop,


00:23:01.180 --> 00:23:02.760
but if you do know SQL,


00:23:02.760 --> 00:23:04.540
you're able to create your own metrics


00:23:04.540 --> 00:23:08.080
and express them as SQL expressions, for instance.


00:23:08.080 --> 00:23:10.460
Calculated metrics.


00:23:10.460 --> 00:23:12.900
- Exactly, you can have computed columns


00:23:12.900 --> 00:23:15.920
and aggregation and stuff like that, right?


00:23:15.920 --> 00:23:22.080
Exactly. So you'll define metrics as SQL aggregatable expressions.


00:23:22.080 --> 00:23:25.280
So sum of this divided by the count, this thing of that,


00:23:25.280 --> 00:23:27.760
and it has to be a valid SQL expression.


00:23:27.760 --> 00:23:33.660
But yeah, so for people who are a little bit more technical,


00:23:33.660 --> 00:23:38.260
maybe understand the data better and have a little bit of knowledge of SQL,


00:23:38.260 --> 00:23:42.940
they don't have to, but they can use SQL


00:23:42.940 --> 00:23:45.940
as part of that exploration experience.


00:23:45.940 --> 00:23:48.780
For instance, if you pick a filter,


00:23:48.780 --> 00:23:52.680
here you'll be able to pick a column,


00:23:52.680 --> 00:23:56.020
an operator like CustomerID in,


00:23:56.020 --> 00:23:59.360
and then go pick the customer IDs in a GUI type setting.


00:23:59.360 --> 00:24:03.520
But you can also go to the little SQL editor in a filter popover,


00:24:03.520 --> 00:24:06.520
and then write a more complex SQL expression if you want to.


00:24:06.520 --> 00:24:11.100
We wanted to not necessarily bury SQL as we feel like more and more people are learning SQL.


00:24:11.100 --> 00:24:13.660
It's becoming the lingua franca of data.


00:24:13.660 --> 00:24:16.580
We feel like there's gonna be a certain percentage


00:24:16.580 --> 00:24:18.340
of the workforce in the next decade


00:24:18.340 --> 00:24:20.540
that's gonna become more data literate


00:24:20.540 --> 00:24:23.180
and that's in part by learning SQL


00:24:23.180 --> 00:24:27.100
and understanding data set, data structures


00:24:27.100 --> 00:24:31.820
and what data sets in their particular organizations


00:24:31.820 --> 00:24:33.540
are and are made out of.


00:24:33.540 --> 00:24:37.380
- Right, and by using SQL,


00:24:37.380 --> 00:24:39.740
it means you can connect to different data sources


00:24:39.740 --> 00:24:41.740
and you can connect to live data.


00:24:41.740 --> 00:24:44.060
- That's right.


00:24:44.060 --> 00:24:45.260
- Yeah, some kind of export or whatever,


00:24:45.260 --> 00:24:46.620
you just connect to Postgres


00:24:46.620 --> 00:24:49.380
or you connect to whatever and then go from there.


00:24:49.380 --> 00:24:50.220
- Exactly, yeah.


00:24:50.220 --> 00:24:52.900
So the way things work in SuperSight,


00:24:52.900 --> 00:24:55.740
so you go and create your database connection


00:24:55.740 --> 00:24:59.020
or connections to whatever,


00:24:59.020 --> 00:25:02.940
SQL speaking databases you use as a data warehouse,


00:25:02.940 --> 00:25:04.040
as a data store.


00:25:04.040 --> 00:25:07.020
Things that are really popular right now


00:25:07.020 --> 00:25:08.780
are the big cloud data warehouse,


00:25:08.780 --> 00:25:12.420
Snowflake, BigQuery, but there's still a lot of Postgres


00:25:12.420 --> 00:25:16.100
and MySQL, even for analytical use cases, right?


00:25:16.100 --> 00:25:18.420
And people, so you connect to that database


00:25:18.420 --> 00:25:23.020
and then you go and you have different ways to get started.


00:25:23.020 --> 00:25:26.380
One is to go and start exploring the tables


00:25:26.380 --> 00:25:29.660
that exist already, tables or views,


00:25:29.660 --> 00:25:32.020
or you have this SQL IDE that you're kind of pointing


00:25:32.020 --> 00:25:35.120
to now too, where, so it's possible for you to go


00:25:35.120 --> 00:25:38.660
and step down to that level that's more interacting


00:25:38.660 --> 00:25:42.380
the SQL level, and here you can also create datasets,


00:25:42.380 --> 00:25:44.340
and create what we call virtual datasets


00:25:44.340 --> 00:25:46.180
that are essentially views for people


00:25:46.180 --> 00:25:50.000
who are familiar with the database construct of a view.


00:25:50.000 --> 00:25:54.800
And that allows people to go and explore


00:25:54.800 --> 00:25:56.420
that dataset, a virtual dataset,


00:25:56.420 --> 00:25:59.440
assemble dashboard, create visualization,


00:25:59.440 --> 00:26:02.780
collaborate with others, share links on Slack,


00:26:02.780 --> 00:26:06.660
and annotate, add comments, that kind of thing.


00:26:06.660 --> 00:26:08.940
I want to dive into the data sources more,


00:26:08.940 --> 00:26:13.820
but I want to make sure that we highlight this for people listening who don't know about SuperSet.


00:26:13.820 --> 00:26:17.300
Two things, and you've hinted pretty strongly at one already.


00:26:17.300 --> 00:26:18.920
First of all, when I go to Excel,


00:26:18.920 --> 00:26:21.300
I don't see a fork me on GitHub.


00:26:21.300 --> 00:26:25.860
I mean, I'm looking, I don't see anywhere on this page that it says fork me on GitHub.


00:26:25.860 --> 00:26:31.780
Over on Apache/SuperSet on GitHub.


00:26:31.780 --> 00:26:33.940
Yeah, clearly, right there you can.


00:26:33.940 --> 00:26:38.940
So this is one, it's open source and two, very popular.


00:26:38.940 --> 00:26:42.520
It's almost got 50,000 stars and 10,000 forks.


00:26:42.520 --> 00:26:45.820
Like that's Django flask level of popularity


00:26:45.820 --> 00:26:48.920
for people keeping score, I guess.


00:26:48.920 --> 00:26:50.320
- Yeah, it's right up there.


00:26:50.320 --> 00:26:52.800
Depending on, you know, stars are just like


00:26:52.800 --> 00:26:56.360
some sort of proxy for hype or interest, right?


00:26:56.360 --> 00:26:58.260
And fork are like, it's a good proxy


00:26:58.260 --> 00:27:00.120
for how many people have kind of, you know,


00:27:00.120 --> 00:27:02.680
wanted to play with a code, which is also a proxy


00:27:02.680 --> 00:27:04.800
for a different kind of hype and interest.


00:27:04.800 --> 00:27:06.280
But yeah, it's up there, you know,


00:27:06.280 --> 00:27:09.520
probably in the top 50 to 100, you know,


00:27:09.520 --> 00:27:11.440
open source projects of all time


00:27:11.440 --> 00:27:15.640
in terms of like value delivered and just popularity.


00:27:15.640 --> 00:27:18.560
Yeah, which is like way beyond what I expected,


00:27:18.560 --> 00:27:20.880
you know, in 2015 when I started a project.


00:27:20.880 --> 00:27:21.920
Same with Apache Airflows.


00:27:21.920 --> 00:27:24.280
I also started at Apache Airflow.


00:27:24.280 --> 00:27:26.560
That's also like very, very, very popular


00:27:26.560 --> 00:27:29.600
and used in like tens of thousands of organizations.


00:27:29.600 --> 00:27:30.560
I think it's similar.


00:27:30.560 --> 00:27:35.480
It speaks to the scale and just how,


00:27:35.480 --> 00:27:37.320
like the problem space is super validated.


00:27:37.320 --> 00:27:41.320
Like everyone needs to visualize data, explore data,


00:27:41.320 --> 00:27:46.320
create dashboard, write SQL, see results, visualize results.


00:27:46.320 --> 00:27:51.060
So very popular, definitely the leading open source project


00:27:51.060 --> 00:27:55.380
in this space of call it business intelligence,


00:27:55.380 --> 00:27:56.560
data consumption.


00:27:58.340 --> 00:28:00.860
And it's a very mature project, right?


00:28:00.860 --> 00:28:04.500
So it's used by thousands of people at places like Airbnb,


00:28:04.500 --> 00:28:08.760
Microsoft, Tesla, people have forked the project


00:28:08.760 --> 00:28:12.200
or use it super heavily internally.


00:28:12.200 --> 00:28:15.720
That in the wild section that you're pointing to,


00:28:15.720 --> 00:28:18.340
which is kind of trying to list out the people


00:28:18.340 --> 00:28:20.800
who use the product is very limited kind of version,


00:28:20.800 --> 00:28:22.800
the tip of the iceberg type thing of the people


00:28:22.800 --> 00:28:26.980
who self-reported using the product.


00:28:26.980 --> 00:28:29.660
- Yeah, yeah, so you have a link in the GitHub repo


00:28:29.660 --> 00:28:31.580
called In The Wild, and it just lists out


00:28:31.580 --> 00:28:34.220
under these different verticals,


00:28:34.220 --> 00:28:37.420
you'll find these companies using them,


00:28:37.420 --> 00:28:40.660
which is, you know, on one hand,


00:28:40.660 --> 00:28:42.220
it doesn't matter if these other companies


00:28:42.220 --> 00:28:44.540
are using it or not, but then if you're trying


00:28:44.540 --> 00:28:45.940
to sell it to your organization


00:28:45.940 --> 00:28:48.640
or trying to decide if you can trust it,


00:28:48.640 --> 00:28:52.980
like, well, you know, if you're in education,


00:28:52.980 --> 00:28:56.340
it works for brilliant.org, and it works for Udemy


00:28:56.340 --> 00:28:58.820
in the Wikimedia Foundation, maybe it'll work for you.


00:28:58.820 --> 00:29:01.700
You know, like that's a, it's a better validation, right?


00:29:01.700 --> 00:29:03.820
- Yeah, and then, you know, especially looking at like,


00:29:03.820 --> 00:29:05.660
those are people that, you know,


00:29:05.660 --> 00:29:07.720
open a pull request to add their name


00:29:07.720 --> 00:29:10.500
to this like hidden file on their repo, right?


00:29:10.500 --> 00:29:12.580
It shows out like tip of the iceberg it is.


00:29:12.580 --> 00:29:15.100
But I think one thing I've been telling people


00:29:15.100 --> 00:29:17.980
on in the context of this podcast is it makes sense.


00:29:17.980 --> 00:29:20.620
It's like, if you want to contribute to open source,


00:29:20.620 --> 00:29:22.220
there's a lot of ways you can contribute.


00:29:22.220 --> 00:29:24.300
And the obvious one is to, you know,


00:29:24.300 --> 00:29:25.980
use the software, open a pull request.


00:29:25.980 --> 00:29:29.720
but the less obvious one is to let the world know,


00:29:29.720 --> 00:29:32.780
like the most basic and the very minimum


00:29:32.780 --> 00:29:37.780
maybe when your organization is getting significant value


00:29:37.780 --> 00:29:40.620
from an open source project, just to be public about it,


00:29:40.620 --> 00:29:43.220
let the world know, you know, if you work at Uber


00:29:43.220 --> 00:29:46.420
and you get tons of value from, I don't know, Gatsby


00:29:46.420 --> 00:29:50.100
or like whatever, let the world know that you do.


00:29:50.100 --> 00:29:52.140
And that's a vote of confidence


00:29:52.140 --> 00:29:54.020
and it speaks to the scale of the community


00:29:54.020 --> 00:29:56.520
and kind of to work for others,


00:29:56.520 --> 00:29:58.140
it probably worth it.


00:29:58.140 --> 00:29:59.860
You know, the chances it's gonna work for you


00:29:59.860 --> 00:30:01.460
are much greater.


00:30:01.460 --> 00:30:02.380
- Yeah.


00:30:02.380 --> 00:30:05.260
Another thing that's interesting about the GitHub repo,


00:30:05.260 --> 00:30:06.660
source code really, I guess,


00:30:06.660 --> 00:30:08.100
is what I'm thinking of.


00:30:08.100 --> 00:30:08.940
Two things here.


00:30:08.940 --> 00:30:10.580
One is it's super active, right?


00:30:10.580 --> 00:30:11.620
If you go in here and you look around,


00:30:11.620 --> 00:30:12.660
like sometimes you'll see,


00:30:12.660 --> 00:30:15.780
you know, last change two years ago or whatever, right?


00:30:15.780 --> 00:30:19.260
But last change seven hours ago,


00:30:19.260 --> 00:30:23.100
couple of days ago, two days ago, right?


00:30:23.100 --> 00:30:26.080
There's a lot of activity here, right?


00:30:26.080 --> 00:30:29.820
- Yeah, it's super intense in terms of like


00:30:29.820 --> 00:30:31.160
how many people work on a project.


00:30:31.160 --> 00:30:32.480
There's like a contributors tab.


00:30:32.480 --> 00:30:34.720
You might be able to click on to,


00:30:34.720 --> 00:30:36.720
on the right there, click contributors.


00:30:36.720 --> 00:30:39.880
So 832 people have contributed to the aid.


00:30:39.880 --> 00:30:42.220
And that's just like code contributions.


00:30:42.220 --> 00:30:45.080
Here it's possible to see the history of who's contributed.


00:30:45.080 --> 00:30:46.440
Something that's interesting is like


00:30:46.440 --> 00:30:48.120
we distribute on PyPI,


00:30:48.120 --> 00:30:52.400
but, and the project was largely Python code.


00:30:52.400 --> 00:30:57.040
It looks like we have too much data and the GitHub UI is struggling to render.


00:30:57.040 --> 00:30:58.040
We're going to break GitHub.


00:30:58.040 --> 00:30:59.040
Sorry, GitHub.


00:30:59.040 --> 00:31:04.000
Yeah, we're going to break GitHub right now because we have too many contributions.


00:31:04.000 --> 00:31:05.640
Here you can kind of see the scale contribution.


00:31:05.640 --> 00:31:12.120
You can also see how I've been selling into my CEO role and less in a code contribution


00:31:12.120 --> 00:31:13.120
type of role now.


00:31:13.120 --> 00:31:18.320
But you can see how a bunch of people have contributed over time.


00:31:18.320 --> 00:31:25.440
I was going to say, we decided to distribute on PyPI originally, and it was largely a Python


00:31:25.440 --> 00:31:31.680
project from the get-go. But more and more, if you look at the code distribution, a lot of the


00:31:31.680 --> 00:31:38.320
code is in TypeScript, JavaScript now, because the nature of the project is such a front-end


00:31:38.320 --> 00:31:44.880
project. And something that's interesting about open source is we have seen less application


00:31:45.840 --> 00:31:51.200
GUI type, up-to-stack type projects really succeeding at scale.


00:31:51.200 --> 00:31:53.580
And SuperSet is definitely one of those,


00:31:53.580 --> 00:31:59.380
like very much a front-end application type product that's open source.


00:31:59.380 --> 00:32:04.380
And then succeeding at a massive scale too,


00:32:04.380 --> 00:32:07.180
where typically in open source, we see libraries,


00:32:07.180 --> 00:32:10.120
we see backends and frameworks, right?


00:32:10.120 --> 00:32:12.320
Like being really massively successful.


00:32:13.260 --> 00:32:19.460
but that was part of the reason that I really wanted to prove


00:32:19.460 --> 00:32:25.540
that SuperSet and that open source can succeed up the stack too.


00:32:25.540 --> 00:32:29.340
And we've been working very, very actively on that in this community.


00:32:29.340 --> 00:32:33.780
Yeah, it's a super good point because it's clearly open source


00:32:33.780 --> 00:32:36.860
is one on the frameworks and the libraries level.


00:32:36.860 --> 00:32:43.100
But there's fewer examples of it creating beautiful user interface


00:32:43.100 --> 00:32:45.820
experiences and types of applications.


00:32:45.820 --> 00:32:48.300
Yeah, and I have a pretty good theory on that too,


00:32:48.300 --> 00:32:49.820
like why is it the case that we've seen?


00:32:49.820 --> 00:32:51.180
Why is it? What do you think?


00:32:51.180 --> 00:32:56.700
Yeah, so I think like open source has been very much a playground for engineers, right?


00:32:56.700 --> 00:33:03.260
Like the tool set and, you know, GitHub and Git and source control and the pull requests


00:33:03.260 --> 00:33:09.260
and issues, like all of these things have been historically the way that engineers build software.


00:33:09.260 --> 00:33:12.460
And it's been a little bit hostile to PMs and designers.


00:33:12.460 --> 00:33:15.980
Not hostile, I've been like, oh, you know, actively hostile, but just it was not...


00:33:15.980 --> 00:33:17.660
Not welcoming?


00:33:17.660 --> 00:33:23.180
Yeah, or yeah, not, it's just built by engineers for engineers, like GitHub and Git was built by


00:33:23.180 --> 00:33:27.180
engineers for engineers. And we never really thought of like, how do we include product


00:33:27.180 --> 00:33:34.540
designers and product managers to the workflows there? And then the interest, I think a lot of


00:33:34.540 --> 00:33:41.980
engineers add like this great image of open source and see it as an outlet for their careers. And


00:33:41.980 --> 00:33:44.360
and they love the idea of working in the open.


00:33:44.360 --> 00:33:47.040
That does not exist, that drive of working in the open


00:33:47.040 --> 00:33:48.080
with PMs and designers.


00:33:48.080 --> 00:33:50.560
So we've been thinking about how do we create,


00:33:50.560 --> 00:33:52.840
enlarge our community and open up our community


00:33:52.840 --> 00:33:57.520
to very much welcome PMs and product designers


00:33:57.520 --> 00:34:00.160
as part of this community.


00:34:00.160 --> 00:34:04.920
And it's been, I think we've made some headway


00:34:04.920 --> 00:34:07.320
as we should blog about how we did this


00:34:07.320 --> 00:34:10.600
in the SuperSet project, but we opened up


00:34:10.600 --> 00:34:12.120
and we created some processes


00:34:12.120 --> 00:34:15.200
where we also do design review,


00:34:15.200 --> 00:34:17.440
we do product reviews,


00:34:17.440 --> 00:34:20.160
that our PMs get together


00:34:20.160 --> 00:34:21.600
with other people in the community


00:34:21.600 --> 00:34:26.600
to kind of design beyond technical solutions.


00:34:26.600 --> 00:34:30.240
- Yeah, there's a ton of visualizations here


00:34:30.240 --> 00:34:31.520
for people who haven't seen it yet,


00:34:31.520 --> 00:34:33.080
just visit the website


00:34:33.080 --> 00:34:34.880
and you'll see right away,


00:34:34.880 --> 00:34:37.360
this is primarily a visual tool,


00:34:37.360 --> 00:34:39.360
the tool for visualizing data, right?


00:34:39.360 --> 00:34:41.800
- Yeah, so it is like a GUI tool in a lot of ways,


00:34:41.800 --> 00:34:43.640
but I think what's interesting too,


00:34:43.640 --> 00:34:45.400
it's a GUI tool first, right?


00:34:45.400 --> 00:34:47.720
So it's a BI tool in the sense that,


00:34:47.720 --> 00:34:49.700
you know, a lot of what you do is point and click


00:34:49.700 --> 00:34:53.520
and drag and drop and, you know, hit a save button.


00:34:53.520 --> 00:34:56.520
But because we're open source, we also have,


00:34:56.520 --> 00:35:01.520
we're pushing the APIs and SDKs very strongly too.


00:35:01.520 --> 00:35:06.240
So it's probably the most platformy BI tool around


00:35:06.240 --> 00:35:07.840
because of our open source roots.


00:35:07.840 --> 00:35:09.760
- Sounds cool. - We started from the ground up.


00:35:09.760 --> 00:35:12.000
So say the visualization is a plugin system,


00:35:12.000 --> 00:35:14.920
so you can create your own visualizations


00:35:14.920 --> 00:35:16.640
and distribute them.


00:35:16.640 --> 00:35:19.520
The backend and Python is like,


00:35:19.520 --> 00:35:21.680
the coverage of the API is like 100%, right?


00:35:21.680 --> 00:35:22.880
Or it's like all over.


00:35:22.880 --> 00:35:24.080
So everything you can do in the GUI,


00:35:24.080 --> 00:35:25.360
you can do as code too.


00:35:25.360 --> 00:35:26.440
- Okay.


00:35:26.440 --> 00:35:28.040
Yeah, right now the audience is asking,


00:35:28.040 --> 00:35:31.520
does it expose an API to your data?


00:35:31.520 --> 00:35:34.080
- Yes, and it should be in the docs, right?


00:35:34.080 --> 00:35:38.120
So if you go to in the docs here,


00:35:38.120 --> 00:35:41.040
somewhere in there, it should be maybe it's in the API


00:35:41.040 --> 00:35:42.240
at the bottom there.


00:35:42.240 --> 00:35:45.920
I don't know how well documented it is here.


00:35:45.920 --> 00:35:48.160
It should be, it looks like it's not rendering right


00:35:48.160 --> 00:35:50.960
on like 480 by 320 pixels.


00:35:50.960 --> 00:35:51.960
(laughs)


00:35:51.960 --> 00:35:52.800
- There you go.


00:35:52.800 --> 00:35:53.760
Here we go, how's that?


00:35:53.760 --> 00:35:54.920
- Oh, there you go.


00:35:54.920 --> 00:35:58.560
So command minus to rescale this, but yeah.


00:35:58.560 --> 00:36:02.520
So very good API coverage.


00:36:03.880 --> 00:36:08.000
you know, and well-managed, you know, API behind the scenes.


00:36:08.000 --> 00:36:10.200
- Yeah, it looks like you even exposed some directly,


00:36:10.200 --> 00:36:12.840
some of the open API swagger type of documentation,


00:36:12.840 --> 00:36:15.720
which you could maybe even auto-generate some stuff.


00:36:15.720 --> 00:36:17.240
Does it have, does it have a pack?


00:36:17.240 --> 00:36:20.560
Does it have like a library, a Python package


00:36:20.560 --> 00:36:23.960
that talks to the API, anything along those lines?


00:36:23.960 --> 00:36:26.160
- Yes, I forgot exactly what it was.


00:36:26.160 --> 00:36:30.600
I think it's open API and then swagger.


00:36:30.600 --> 00:36:32.840
Right, I think I set up the first version of that


00:36:32.840 --> 00:36:35.780
a long time ago, but it's a self-documenting thing.


00:36:35.780 --> 00:36:37.420
So if you put the right decorators


00:36:37.420 --> 00:36:40.520
and the right doc strings, it self-documents.


00:36:40.520 --> 00:36:41.800
I think we do Marshmallow too,


00:36:41.800 --> 00:36:45.620
and other things to do like schema definition


00:36:45.620 --> 00:36:47.380
of what can come in and out.


00:36:47.380 --> 00:36:49.820
And that dictates, I think that's self-documenting too,


00:36:49.820 --> 00:36:53.300
in terms of like the input and expected output schemas too.


00:36:53.300 --> 00:36:57.820
So yeah, or it could be like Python 3,


00:36:57.820 --> 00:36:59.820
like type annotations too,


00:36:59.820 --> 00:37:02.880
I think it gets picked up properly, which is great.


00:37:02.880 --> 00:37:06.880
Beyond that, there's more like there's JavaScript stuff.


00:37:06.880 --> 00:37:07.780
There's a plugin.


00:37:07.780 --> 00:37:12.780
I think if you were to Google a super set plugin examples,


00:37:12.780 --> 00:37:16.180
you'll find all sorts of resources, maybe out of the...


00:37:16.180 --> 00:37:19.580
- Oh, there's even a whole collection of them.


00:37:19.580 --> 00:37:20.420
Yeah, look at that.


00:37:20.420 --> 00:37:21.740
- Yes, it's managed in different ways.


00:37:21.740 --> 00:37:23.780
- I didn't Google, I Kaggied it.


00:37:23.780 --> 00:37:25.700
I don't know what the word for Googling with Kaggy is,


00:37:25.700 --> 00:37:26.980
but there you go.


00:37:26.980 --> 00:37:27.800
- Got it, yeah.


00:37:27.800 --> 00:37:30.560
And we have a good blog post on the preset blogs.


00:37:30.560 --> 00:37:32.440
If you go preset IO slash blog,


00:37:32.440 --> 00:37:34.000
we have like how to get started


00:37:34.000 --> 00:37:36.680
and write your first superset plugin.


00:37:36.680 --> 00:37:39.340
That's much more like JavaScript.


00:37:39.340 --> 00:37:41.040
So that's a hundred percent,


00:37:41.040 --> 00:37:44.580
TypeScript, JavaScript front end code to build plugins.


00:37:44.580 --> 00:37:45.920
It has to be, right?


00:37:45.920 --> 00:37:47.880
You don't want to be in the backend


00:37:47.880 --> 00:37:50.880
trying to figure out how to lay things out


00:37:50.880 --> 00:37:55.880
or use the Python library to do interactive visualizations


00:37:56.400 --> 00:38:01.520
doesn't work super well, so the plugin framework is all front-end code.


00:38:01.520 --> 00:38:08.480
And then beyond that, there's more API, there's component libraries as part of SuperSend,


00:38:08.480 --> 00:38:13.120
and there's much more than the REST API for the backend.


00:38:13.120 --> 00:38:16.240
There's other SDKs and component libraries.


00:38:16.240 --> 00:38:22.160
Yeah, so the first thing I wanted to point out about the source code and the GitHub repo


00:38:22.880 --> 00:38:27.720
is just the popularity and all the contributors


00:38:27.720 --> 00:38:29.640
and what not there.


00:38:29.640 --> 00:38:31.040
The other is that this,


00:38:31.040 --> 00:38:34.880
while not necessarily made for Python people


00:38:34.880 --> 00:38:36.400
the way that Jupyter would be,


00:38:36.400 --> 00:38:37.600
it's made for BI users,


00:38:37.600 --> 00:38:41.320
but it is open source and in Python built on Flask


00:38:41.320 --> 00:38:44.440
and tools like that, right?


00:38:44.440 --> 00:38:46.720
And you talk about the extensions on the backend


00:38:46.720 --> 00:38:49.120
and pieces along there.


00:38:49.120 --> 00:38:52.360
So maybe talk about for people that wanna dig in


00:38:52.360 --> 00:38:55.280
from a Python side, what can I find?


00:38:55.280 --> 00:38:58.080
- Yeah, we could try to open a requirements folder


00:38:58.080 --> 00:39:01.300
'cause at this point it's not even a requirements.txt file


00:39:01.300 --> 00:39:03.280
here for people.


00:39:03.280 --> 00:39:05.760
- You have a whole project for setting it up, okay.


00:39:05.760 --> 00:39:07.880
- There are requirements subfolder.


00:39:07.880 --> 00:39:08.700
- Yeah, yeah.


00:39:08.700 --> 00:39:10.600
Oh, are you guys using pip-tools here?


00:39:10.600 --> 00:39:15.040
- I believe it's pip-tools and pip compiles.


00:39:15.040 --> 00:39:17.400
- I love working that way.


00:39:17.400 --> 00:39:19.800
That's my way these days, it's great.


00:39:19.800 --> 00:39:21.800
- Yeah, 'cause we need to pin the versions


00:39:21.800 --> 00:39:24.200
And so we have the, for people that are not familiar with it,


00:39:24.200 --> 00:39:27.120
usually define an in file that's like your version ranges,


00:39:27.120 --> 00:39:30.240
and then you can kind of pick, compile your version.


00:39:30.240 --> 00:39:34.540
And then that turns into like kind of frozen,


00:39:34.540 --> 00:39:37.440
like libraries, like specific numbers.


00:39:37.440 --> 00:39:41.100
So it's, you know, you can have like everything pinned out.


00:39:41.100 --> 00:39:43.000
We use so much stuff here


00:39:43.000 --> 00:39:44.920
and we use stuff that uses a lot of stuff.


00:39:44.920 --> 00:39:47.040
So if you import, you know, just Flask,


00:39:47.040 --> 00:39:50.480
like Flask itself is likely to import a bunch of things.


00:39:50.480 --> 00:39:54.560
So once you kind of on, you kind of recurse


00:39:54.560 --> 00:39:57.120
through that dependency tree and expand it.


00:39:57.120 --> 00:39:59.800
It's a massive dependency tree on the Python side.


00:39:59.800 --> 00:40:03.640
It's also a massive dependency tree on the JavaScript side.


00:40:03.640 --> 00:40:05.600
- Oh yeah.


00:40:05.600 --> 00:40:08.240
- Big application made out of, you know,


00:40:08.240 --> 00:40:11.840
hundreds of open source packages


00:40:11.840 --> 00:40:14.800
'cause we kind of need it all to build this full,


00:40:14.800 --> 00:40:17.040
like this application.


00:40:17.040 --> 00:40:19.640
So dependency management is a little bit of a struggle


00:40:19.640 --> 00:40:21.840
when you manage such a big piece of software


00:40:21.840 --> 00:40:24.360
that's just connected to everything.


00:40:24.360 --> 00:40:26.400
- There's no joke, there's a lot of dependencies here.


00:40:26.400 --> 00:40:29.220
So, but there's ways you can run it


00:40:29.220 --> 00:40:31.260
without worrying too much about that, right?


00:40:31.260 --> 00:40:32.480
- Yeah, I mean, you can definitely


00:40:32.480 --> 00:40:34.000
just run the Docker container,


00:40:34.000 --> 00:40:35.440
you can pip install superset,


00:40:35.440 --> 00:40:38.160
there's a somewhat straightforward way


00:40:38.160 --> 00:40:42.280
to set it up locally and get things going.


00:40:42.280 --> 00:40:47.560
Yeah, it's kind of interesting how


00:40:47.560 --> 00:40:49.280
building application nowadays,


00:40:49.280 --> 00:40:54.880
if you think about the dependency tree that go behind any kind of solution


00:40:54.880 --> 00:40:56.760
or application that's not just a library,


00:40:56.760 --> 00:41:01.160
like library should have like very minimal requirements,


00:41:01.160 --> 00:41:02.840
kind of dependency trees,


00:41:02.840 --> 00:41:06.240
where this should be self-contained and kind of focused, I think.


00:41:06.240 --> 00:41:11.560
But here, I think to build such a large scale application,


00:41:11.560 --> 00:41:14.040
we just need to have a lot of dependencies.


00:41:14.040 --> 00:41:17.040
And then these dependencies have often a fair amount of dependency.


00:41:17.040 --> 00:41:19.040
I'm surprised to see that now we're looking at Click


00:41:19.040 --> 00:41:21.080
for people not necessarily looking,


00:41:21.080 --> 00:41:25.280
but just Click itself probably has a lot of its own sub-packages now too.


00:41:25.280 --> 00:41:28.200
Exactly, and there's a lot of things that


00:41:28.200 --> 00:41:32.200
want Click to be in your dependencies here.


00:41:32.200 --> 00:41:35.280
I guess there's a... We'll talk about running in just a minute.


00:41:35.280 --> 00:41:40.920
There's a lot of architectural layers at play here.


00:41:40.920 --> 00:41:46.440
So you've got SuperSet, but you've also got Celery,


00:41:46.440 --> 00:41:48.920
you've got Redis, you've got some database layers.


00:41:48.920 --> 00:41:51.960
There's a lot of technology that people would know


00:41:51.960 --> 00:41:54.520
working as a group that luckily Docker


00:41:54.520 --> 00:41:56.440
just takes care of for us.


00:41:56.440 --> 00:42:00.760
- Yeah, Docker, the Docker compose and, you know,


00:42:00.760 --> 00:42:01.600
help try it.


00:42:01.600 --> 00:42:04.520
So I think we have like a helm chart too.


00:42:04.520 --> 00:42:08.440
I always, it's always important for me to keep it such


00:42:08.440 --> 00:42:10.840
that you can kind of just pip install super set


00:42:10.840 --> 00:42:14.000
and run a few commands and get it running locally.


00:42:14.000 --> 00:42:18.640
So you don't need to have Redis out of the box


00:42:18.640 --> 00:42:20.040
and Celery out of the box.


00:42:20.040 --> 00:42:22.020
So it's similar to Airflow in that way


00:42:22.020 --> 00:42:26.760
where you want it to have a very self-contained thing at first.


00:42:26.760 --> 00:42:31.880
But then if you want to run any modern web app that


00:42:31.880 --> 00:42:35.880
does serious work and solves some real problem,


00:42:35.880 --> 00:42:38.200
it's likely that you need-- OK, you need to have web servers


00:42:38.200 --> 00:42:39.920
and an application server.


00:42:39.920 --> 00:42:42.160
But you need to have the whole front end stack, right?


00:42:42.160 --> 00:42:43.440
Like something like webpack.


00:42:43.440 --> 00:42:45.680
you probably have front-end infrastructure,


00:42:45.680 --> 00:42:48.180
just on how you build your front-end,


00:42:48.180 --> 00:42:50.680
it gets pretty complicated quickly.


00:42:50.680 --> 00:42:52.180
Then you probably need async workers,


00:42:52.180 --> 00:42:54.180
so all of a sudden you need something like Celery


00:42:54.180 --> 00:42:56.940
and something like Redis as a message queue


00:42:56.940 --> 00:42:59.320
to talk to the async workers.


00:42:59.320 --> 00:43:01.480
Then you probably want to start caching some things,


00:43:01.480 --> 00:43:04.780
so you need a caching back-end for certain things.


00:43:04.780 --> 00:43:08.680
And then you need to support an open source,


00:43:08.680 --> 00:43:13.520
you probably need to support different databases.


00:43:13.520 --> 00:43:16.520
So some people might want to use MySQL as a backend


00:43:16.520 --> 00:43:20.800
or Postgres or some more other things.


00:43:20.800 --> 00:43:25.800
So then you need to like optionally support these things


00:43:25.800 --> 00:43:26.960
through abstraction layers.


00:43:26.960 --> 00:43:29.840
So it gets complicated fairly quickly.


00:43:29.840 --> 00:43:31.520
- Yeah, sure does.


00:43:31.520 --> 00:43:33.800
I was really cool though, that you can just pip install it


00:43:33.800 --> 00:43:36.440
and there's a more lightweight version


00:43:36.440 --> 00:43:38.560
without going through all the details.


00:43:38.560 --> 00:43:41.240
Let's talk about getting going, get it running,


00:43:41.240 --> 00:43:43.120
exploring it a bit and hosting it.


00:43:43.120 --> 00:43:45.600
But before we do, I said like 15 minutes ago,


00:43:45.600 --> 00:43:48.260
two quick comments before we talk about databases.


00:43:48.260 --> 00:43:51.160
Let's just talk about the database thing real quick here.


00:43:51.160 --> 00:43:55.360
Over here near the bottom,


00:43:55.360 --> 00:43:57.600
obviously where your data comes from,


00:43:57.600 --> 00:44:00.440
we opened this, I pointed out that Excel is bad


00:44:00.440 --> 00:44:02.640
at getting data from different data sources.


00:44:02.640 --> 00:44:07.640
People have operational data, they have data warehouses,


00:44:07.640 --> 00:44:12.180
they have data lakes, whatever you call them,


00:44:12.180 --> 00:44:13.260
things like this, right?


00:44:13.260 --> 00:44:14.540
So there's a lot of different places


00:44:14.540 --> 00:44:16.500
people are putting data.


00:44:16.500 --> 00:44:20.740
Maybe just touch a bit on the database integration here.


00:44:20.740 --> 00:44:24.220
- Yeah, and I think like in the context of this,


00:44:24.220 --> 00:44:25.860
this Python podcast too,


00:44:25.860 --> 00:44:29.020
so for us, we use SQLAlchemy very heavily.


00:44:29.020 --> 00:44:32.580
So SQLAlchemy is a SQL toolkit first


00:44:32.580 --> 00:44:34.900
and then an ORM built on top of it


00:44:34.900 --> 00:44:37.140
and probably much more than that.


00:44:37.140 --> 00:44:41.140
but the way that we support first,


00:44:41.140 --> 00:44:44.380
I would say, the metadata database for SuperSet,


00:44:44.380 --> 00:44:47.580
so in SuperSet, when you save dashboards,


00:44:47.580 --> 00:44:49.680
save visualizations, save queries,


00:44:49.680 --> 00:44:51.220
that goes to a metadata database,


00:44:51.220 --> 00:44:55.120
and we tend to recommend Postgres and MySQL


00:44:55.120 --> 00:44:57.120
as the backend for the app,


00:44:57.120 --> 00:44:59.520
just to keep the state of the app somewhere


00:44:59.520 --> 00:45:02.700
in a proper relational database, so that's one.


00:45:02.700 --> 00:45:06.060
And then we connect to all these databases


00:45:06.060 --> 00:45:07.600
is to do analytics on them, right?


00:45:07.600 --> 00:45:09.000
And that's what we're looking at here,


00:45:09.000 --> 00:45:11.180
the supported databases in the sense of like,


00:45:11.180 --> 00:45:13.440
what can we build charts off of,


00:45:13.440 --> 00:45:16.700
and what can we enable data exploration around of.


00:45:16.700 --> 00:45:19.700
And then this is powered by SQLAlchemy.


00:45:19.700 --> 00:45:24.580
So that means that anything that has a DB API driver


00:45:24.580 --> 00:45:27.140
and a SQLAlchemy dialect,


00:45:27.140 --> 00:45:30.400
and then maybe that's an opportunity to talk


00:45:30.400 --> 00:45:32.340
a little bit more about the database abstraction


00:45:32.340 --> 00:45:33.320
and the Python world,


00:45:33.320 --> 00:45:35.120
since we have a Python centric audience.


00:45:35.120 --> 00:45:40.080
So dbAPI as a spec is one of the peps out there.


00:45:40.080 --> 00:45:42.620
I forgot the number of the dbAPI pep,


00:45:42.620 --> 00:45:44.880
but I was like, you know, just a common interface


00:45:44.880 --> 00:45:47.720
for all the databases in Python.


00:45:47.720 --> 00:45:51.600
So that's called dbAPI and then SQLAlchemy,


00:45:51.600 --> 00:45:55.040
this SQL toolkit knows how to speak certain dialects


00:45:55.040 --> 00:45:57.420
and builds an ORM on top of things.


00:45:57.420 --> 00:46:02.280
And this, yeah, so pep249,


00:46:02.280 --> 00:46:05.560
So it came a little bit later in the story of Python.


00:46:05.560 --> 00:46:06.400
I don't know, what's the number?


00:46:06.400 --> 00:46:07.720
What's the latest PEP number?


00:46:07.720 --> 00:46:08.560
I don't know.


00:46:08.560 --> 00:46:11.200
- Oh, they're pretty high these days.


00:46:11.200 --> 00:46:16.200
Although they seem to be kind of organized by concept.


00:46:16.200 --> 00:46:20.920
But let's see, we've got some of the 8,000s here.


00:46:20.920 --> 00:46:21.760
- Oh, okay.


00:46:21.760 --> 00:46:24.000
So there's like some encoding.


00:46:24.000 --> 00:46:24.960
- Kind of grouping.


00:46:24.960 --> 00:46:26.400
Yeah, I'm not sure exactly what it is.


00:46:26.400 --> 00:46:29.120
- The 3,000 are for a specific thing and the 8,000.


00:46:29.120 --> 00:46:31.400
- I think so, but yeah, don't hold me to it.


00:46:31.400 --> 00:46:32.540
- Yeah, I think so.


00:46:32.540 --> 00:46:37.040
- Anyhow, but yeah, so what you need in order


00:46:37.040 --> 00:46:40.960
to basically for a superset to connect


00:46:40.960 --> 00:46:45.520
to any flavor of database is a viable DB API driver.


00:46:45.520 --> 00:46:47.920
And once that's built, SQLAlchemy dialects,


00:46:47.920 --> 00:46:49.680
SQLAlchemy dialects are fairly easy.


00:46:49.680 --> 00:46:51.720
Like we've written a bunch of API drivers


00:46:51.720 --> 00:46:54.840
and SQLAlchemy dialects in the past


00:46:54.840 --> 00:46:57.520
and they're not that hard to implement.


00:46:57.520 --> 00:46:58.600
So that means that pretty much anything


00:46:58.600 --> 00:47:00.360
that speaks SQL out there,


00:47:00.360 --> 00:47:04.360
we can talk to, essentially.


00:47:04.360 --> 00:47:07.360
Yeah, so we've got the standard MySQL Postgres.


00:47:07.360 --> 00:47:11.360
Microsoft SQL Server is probably a big one in the BI space


00:47:11.360 --> 00:47:15.360
because a lot of enterprises are back with that.


00:47:15.360 --> 00:47:20.360
But it also has more unique ones like Snowflake and Druid


00:47:20.360 --> 00:47:23.360
and Google BigQuery and Firebird,


00:47:23.360 --> 00:47:27.360
a lot of different places that people can...


00:47:27.360 --> 00:47:32.960
Yeah, well, we see like, you know, in terms like the SuperSet community and then the preset


00:47:32.960 --> 00:47:33.960
customer.


00:47:33.960 --> 00:47:39.080
So I started a company three years ago that's essentially commercializing Apache SuperSet


00:47:39.080 --> 00:47:41.360
and offering a managed service so you don't have to run it.


00:47:41.360 --> 00:47:43.640
So we're on call, you're not on call.


00:47:43.640 --> 00:47:46.560
There's a freemium to say if you want to try SuperSet, you can pip install SuperSet and


00:47:46.560 --> 00:47:48.840
kind of struggle with Docker and all this stuff.


00:47:48.840 --> 00:47:53.160
Or you can try it directly at preset so you can just like start for free and see if it


00:47:53.160 --> 00:47:54.280
works for you.


00:47:54.280 --> 00:47:56.160
then you can kind of postpone the decision of like,


00:47:56.160 --> 00:47:57.480
do I want to run it on my own


00:47:57.480 --> 00:47:59.560
or do I want to use a managed service


00:47:59.560 --> 00:48:01.460
and kind of pay as I go instead?


00:48:01.460 --> 00:48:05.700
But yeah, so what we see in terms of


00:48:05.700 --> 00:48:07.760
what our customers use, so a lot of Snowflake,


00:48:07.760 --> 00:48:09.620
a lot of BigQuery, these cloud data warehouses


00:48:09.620 --> 00:48:12.520
kind of no brainer nowadays.


00:48:12.520 --> 00:48:15.640
If you have a true analytical workload,


00:48:15.640 --> 00:48:19.360
just put all your data and Snowflake, BigQuery.


00:48:19.360 --> 00:48:21.240
And then there's still some Redshift


00:48:21.240 --> 00:48:23.720
and there's still like all sorts of like,


00:48:23.720 --> 00:48:26.840
database engines for whatever historical reasons


00:48:26.840 --> 00:48:29.040
people have or they have constraints sometimes


00:48:29.040 --> 00:48:32.800
to run something on premise or in their cloud


00:48:32.800 --> 00:48:34.960
and then right now. - Right, absolutely.


00:48:34.960 --> 00:48:38.120
So because it's open source, they can go and host it


00:48:38.120 --> 00:48:39.360
until their heart's content,


00:48:39.360 --> 00:48:43.960
or they can go SaaS style and work with you all.


00:48:43.960 --> 00:48:47.360
- That's right, so for us, we do offer the managed service


00:48:47.360 --> 00:48:51.600
as the freemium and pay as you go kind of per seat.


00:48:51.600 --> 00:48:53.040
So it's like 20 bucks per user per month.


00:48:53.040 --> 00:48:58.040
It's pretty straightforward and kind of easy to grow into


00:48:58.040 --> 00:48:59.640
and you pay as you go.


00:48:59.640 --> 00:49:02.000
And then we have something called the Managed Private Cloud.


00:49:02.000 --> 00:49:05.600
So if you do want to run a managed service inside your cloud


00:49:05.600 --> 00:49:07.840
because you don't want the data to leave,


00:49:07.840 --> 00:49:09.840
maybe your data is not already in a cloud data warehouse,


00:49:09.840 --> 00:49:13.460
maybe it's inside your VPC and you want to keep it there.


00:49:13.460 --> 00:49:14.660
So we offer a service.


00:49:14.660 --> 00:49:16.200
It's still a managed service


00:49:16.200 --> 00:49:18.820
with a centralized control plane,


00:49:18.820 --> 00:49:19.860
but that runs on your cloud.


00:49:19.860 --> 00:49:21.880
So we do offer this and then you're always free


00:49:21.880 --> 00:49:23.580
to run it on your own, right?


00:49:23.580 --> 00:49:26.640
Like to, and there the question is like,


00:49:26.640 --> 00:49:31.240
can, you have to think the math of like running


00:49:31.240 --> 00:49:34.780
a piece of open source software versus,


00:49:34.780 --> 00:49:38.880
like running on your own versus like paying a vendor,


00:49:38.880 --> 00:49:41.480
like running Kafka or buying Confluent for instance,


00:49:41.480 --> 00:49:43.680
or running Spark or Databricks


00:49:43.680 --> 00:49:46.440
is whether you're interested in the bells and whistle


00:49:46.440 --> 00:49:47.600
that the vendor uses.


00:49:47.600 --> 00:49:50.560
And then the constraint you have around like quality


00:49:50.560 --> 00:49:53.440
service and think about total cost of ownership.


00:49:53.440 --> 00:49:58.880
So the reality is like running something like SuperSET at scale in your


00:49:58.880 --> 00:50:03.760
organization, if you want the latest, greatest secure kind of patched up


00:50:03.760 --> 00:50:08.960
a version of it is that it's, it's pretty expensive to the total cost of


00:50:08.960 --> 00:50:11.960
ownership of open source is fairly high.


00:50:11.960 --> 00:50:16.600
So often the vendors can do it at a better, better price and better quality.


00:50:17.440 --> 00:50:22.440
to patch Celery and Redis and Memcache and databases


00:50:22.440 --> 00:50:26.640
and your servers hosting them and keeping them all going.


00:50:26.640 --> 00:50:27.480
It's non-trivial.


00:50:27.480 --> 00:50:29.840
And then there's disaster recovery and failure.


00:50:29.840 --> 00:50:31.680
And as soon as you were thinking,


00:50:31.680 --> 00:50:33.720
well, maybe we should hire somebody to do this.


00:50:33.720 --> 00:50:34.840
Then all of a sudden,


00:50:34.840 --> 00:50:37.560
a paid service starts to sound pretty appealing, right?


00:50:37.560 --> 00:50:38.400
- Oh yeah.


00:50:38.400 --> 00:50:41.880
I mean, when you think about like what it really takes


00:50:41.880 --> 00:50:44.080
to manage a piece of software


00:50:44.080 --> 00:50:45.600
or collection of pieces of software,


00:50:45.600 --> 00:50:49.920
like, you know, SuperSet and Kafka and Airflow and all these things.


00:50:49.920 --> 00:50:54.480
And you want it to be state of the art, kind of latest, greatest version,


00:50:54.480 --> 00:51:01.760
and kind of secured compliance, if compliance is a concern and all this stuff.


00:51:01.760 --> 00:51:07.480
Generally, at least for smaller organizations, it makes tons of sense to,


00:51:07.480 --> 00:51:12.520
like, you know, use, who's the best people to run the software reliably


00:51:12.520 --> 00:51:14.200
is the people writing the software.


00:51:14.200 --> 00:51:15.040
- Yeah.


00:51:15.040 --> 00:51:18.500
- And, you know, even on things like, you know,


00:51:18.500 --> 00:51:21.860
I preset, we have a multi-tenant version of SuperSET


00:51:21.860 --> 00:51:25.460
that we run where you can't really have that


00:51:25.460 --> 00:51:26.720
if you run it on your own.


00:51:26.720 --> 00:51:31.300
So that means we, how much we pay per cycle


00:51:31.300 --> 00:51:33.780
in terms of infrastructure cost is gonna be much cheaper


00:51:33.780 --> 00:51:36.740
than what you can get to running SuperSET on your own.


00:51:36.740 --> 00:51:38.140
So. - Sure.


00:51:38.140 --> 00:51:43.140
Not every user is asking an active BI question all the time.


00:51:43.300 --> 00:51:44.140
- That's right.


00:51:44.140 --> 00:51:45.780
- You got extra resources to share.


00:51:45.780 --> 00:51:47.020
- And then you provision for peak.


00:51:47.020 --> 00:51:48.900
It's a little bit the same with infrastructure, right?


00:51:48.900 --> 00:51:52.420
Like if you run a database server on your own,


00:51:52.420 --> 00:51:54.380
you have to provision for peak access,


00:51:54.380 --> 00:51:55.980
where if there's a cloud service,


00:51:55.980 --> 00:51:58.740
then you have to provision the cloud vendor


00:51:58.740 --> 00:52:00.660
as the provision for the total peak


00:52:00.660 --> 00:52:02.140
across all the customers.


00:52:02.140 --> 00:52:04.700
So there's tons of economies of scale there


00:52:04.700 --> 00:52:07.700
and we pass that on to our customers.


00:52:07.700 --> 00:52:08.540
- Cool.


00:52:08.540 --> 00:52:10.340
All right, well, let's talk about maybe getting started


00:52:10.340 --> 00:52:12.780
in just the first touch type of experience


00:52:12.780 --> 00:52:15.480
before we run out of time here.


00:52:15.480 --> 00:52:18.100
You have a nice doc that says,


00:52:18.100 --> 00:52:21.300
installing and using Superset.


00:52:21.300 --> 00:52:23.060
And I went for the easy way.


00:52:23.060 --> 00:52:26.020
So on my Mac, I have Docker for Mac already set up,


00:52:26.020 --> 00:52:28.320
which means I have Docker and Docker Compose.


00:52:28.320 --> 00:52:34.440
And so basically that's clone the repo, the Superset repo.


00:52:34.440 --> 00:52:36.380
- Right.


00:52:36.380 --> 00:52:39.080
- Go in there and then just run Docker Compose pull


00:52:39.080 --> 00:52:43.600
and then Docker compose up on a certain definition file,


00:52:43.600 --> 00:52:44.440
configuration file.


00:52:44.440 --> 00:52:46.480
- And then pray, there should be a comment that says,


00:52:46.480 --> 00:52:49.940
pray and hope for the best, fix yourself a copy.


00:52:49.940 --> 00:52:53.360
One thing that's really interesting is like,


00:52:53.360 --> 00:52:56.960
and I'm sure a lot of other like open source leaders


00:52:56.960 --> 00:53:01.960
can kind of relate to that is that no one agrees


00:53:01.960 --> 00:53:07.040
on the best way to run something for production use cases,


00:53:08.360 --> 00:53:12.640
for sandbox use cases and even in developer mode, right?


00:53:12.640 --> 00:53:17.360
Like, so for me, I'm like, I hate Docker and Docker Compose


00:53:17.360 --> 00:53:18.720
because I don't have enough control


00:53:18.720 --> 00:53:21.240
and I'll tend to just kind of run my own set


00:53:21.240 --> 00:53:22.680
of my own environment.


00:53:22.680 --> 00:53:27.320
I run Teamux and I do my own builds


00:53:27.320 --> 00:53:29.080
and I prefer adding more control


00:53:29.080 --> 00:53:31.040
instead of trying to understand that abstraction layer


00:53:31.040 --> 00:53:33.560
that Docker and Docker Compose is.


00:53:33.560 --> 00:53:38.000
So there's an alternative, I think, documentation somewhere


00:53:38.000 --> 00:53:39.600
and there's a big contributing MD


00:53:39.600 --> 00:53:42.620
that's more geared towards people.


00:53:42.620 --> 00:53:44.580
Like how do I run my setup


00:53:44.580 --> 00:53:47.680
if I want to actually develop on the tool?


00:53:47.680 --> 00:53:49.920
So somewhere on the SuperSet repo,


00:53:49.920 --> 00:53:53.080
there's a computer contributing MD file that says,


00:53:53.080 --> 00:53:54.720
here's if you wanna develop with Docker,


00:53:54.720 --> 00:53:56.520
Docker Compose, you do this.


00:53:56.520 --> 00:54:00.960
If you wanna develop using more kind of a different,


00:54:00.960 --> 00:54:02.800
like more raw level, how to do things.


00:54:02.800 --> 00:54:04.960
- Create your own virtual environment and go.


00:54:04.960 --> 00:54:05.800
- Yeah, that's it.


00:54:05.800 --> 00:54:11.800
And some people use PyEnv, some people prefer using like virtual and more directly.


00:54:11.800 --> 00:54:17.800
So it's really hard to come up with a, we got a prescribed way to do it with a good documentation.


00:54:17.800 --> 00:54:22.120
But then, you know, half of the people are going to go their own way.


00:54:22.120 --> 00:54:27.560
Anyways, let's say Docker Compose here too, is like a lot of people prefer Helm charts for Kubernetes.


00:54:27.560 --> 00:54:35.560
Right. So then we have Helm charts, we have Docker Compose construct, then we do have


00:54:35.560 --> 00:54:37.400
other documentation as to how to do it.


00:54:37.400 --> 00:54:38.720
But it's been really difficult to have


00:54:38.720 --> 00:54:41.160
a very clear prescribed way to do it and then


00:54:41.160 --> 00:54:44.240
maintain the different ways


00:54:44.240 --> 00:54:46.600
individually and keep them all working.


00:54:46.600 --> 00:54:49.760
>> Sure. As much as I'm not a huge fan


00:54:49.760 --> 00:54:52.560
of developing code in Docker,


00:54:52.560 --> 00:54:55.080
I do think this is a nice way for


00:54:55.080 --> 00:54:58.400
a low effort first touch experience.


00:54:58.400 --> 00:55:00.200
You're like, I just want to run it and log into


00:55:00.200 --> 00:55:03.240
the web app and see how it feels and play with it.


00:55:03.240 --> 00:55:05.680
and you get all the various moving parts,


00:55:05.680 --> 00:55:07.680
or you get Celery and Redis and whatnot,


00:55:07.680 --> 00:55:09.000
which is pretty cool.


00:55:09.000 --> 00:55:11.040
- Yeah, and then that's also kind of a map


00:55:11.040 --> 00:55:12.560
of how to run it on your own, right?


00:55:12.560 --> 00:55:15.320
So maybe you're like, oh, I don't like Docker Compose,


00:55:15.320 --> 00:55:18.560
I prefer my own version of something else,


00:55:18.560 --> 00:55:19.960
but I'm gonna look at the Docker Compose


00:55:19.960 --> 00:55:22.400
to see what it's doing and add the recipe.


00:55:22.400 --> 00:55:24.140
So that recipe is still very useful


00:55:24.140 --> 00:55:26.880
for people who have different ways.


00:55:26.880 --> 00:55:29.040
- Sure, or just knowing, look, there has to be,


00:55:29.040 --> 00:55:32.320
or maybe it's good if there's a Redis server.


00:55:32.320 --> 00:55:33.680
Okay, well, I have Redis.


00:55:33.680 --> 00:55:38.680
Let me just set it up to connect to that one, for example.


00:55:38.680 --> 00:55:41.120
- Yes, I'm just gonna change that part of the recipe


00:55:41.120 --> 00:55:43.280
because I already have that ingredient.


00:55:43.280 --> 00:55:45.240
- Yeah, exactly, exactly.


00:55:45.240 --> 00:55:48.480
Okay, so when I, let me zoom out a little here.


00:55:48.480 --> 00:55:51.780
When you run the Docker container, it says,


00:55:51.780 --> 00:55:54.440
you wait a moment, it says everything worked.


00:55:54.440 --> 00:55:59.040
Go over to localhost 8088 and log in.


00:56:00.040 --> 00:56:05.040
the super secure default password and username is adminadmin.


00:56:05.040 --> 00:56:07.720
So you can change that, but, you know,


00:56:07.720 --> 00:56:08.760
it's an easy way to get in there.


00:56:08.760 --> 00:56:12.060
And what you get is you get some example dashboards


00:56:12.060 --> 00:56:14.120
and some example charts, right?


00:56:14.120 --> 00:56:14.960
- Yeah, and those are-


00:56:14.960 --> 00:56:16.600
- It's mostly about the things we find when we get here.


00:56:16.600 --> 00:56:18.800
So people know how to go explore when they get started.


00:56:18.800 --> 00:56:20.960
- Right, and you probably want to zoom out a little bit


00:56:20.960 --> 00:56:23.080
'cause I think the rendering here


00:56:23.080 --> 00:56:24.160
is gonna look a little bit better.


00:56:24.160 --> 00:56:25.500
It's kind of interesting too, 'cause you don't,


00:56:25.500 --> 00:56:27.580
out of the box, you don't get the thumbnail back in.


00:56:27.580 --> 00:56:29.640
So you don't get the pretty thumbnails, you know,


00:56:29.640 --> 00:56:31.800
that will have a preset or that you can set up


00:56:31.800 --> 00:56:33.540
if you spend a little bit more time


00:56:33.540 --> 00:56:35.620
on setting up your salary backend


00:56:35.620 --> 00:56:38.880
and getting all the thumbnails to compute in the backend.


00:56:38.880 --> 00:56:41.760
But yeah, so what you get out of the box


00:56:41.760 --> 00:56:44.560
is a set of very small datasets


00:56:44.560 --> 00:56:48.200
and charts and dashboard built on top of


00:56:48.200 --> 00:56:50.460
that you can navigate and play with.


00:56:50.460 --> 00:56:54.080
If you really wanna get value and get a real POC,


00:56:54.080 --> 00:56:56.240
you probably wanna connect to your real data warehouse,


00:56:56.240 --> 00:56:58.920
probably not out of your local,


00:56:58.920 --> 00:57:02.060
but get to a slightly more,


00:57:02.060 --> 00:57:04.300
or maybe you have a copy of your data warehouse


00:57:04.300 --> 00:57:05.640
or some data you wanna play with,


00:57:05.640 --> 00:57:07.160
then you can connect here.


00:57:07.160 --> 00:57:08.840
If you were to look at somewhere--


00:57:08.840 --> 00:57:10.040
- Datasets, right?


00:57:10.040 --> 00:57:14.240
- So datasets are like coming from your database connections


00:57:14.240 --> 00:57:16.320
to someone to upper right, you have settings.


00:57:16.320 --> 00:57:17.560
- I see.


00:57:17.560 --> 00:57:18.920
- Right, so you could connect,


00:57:18.920 --> 00:57:20.380
database connections are here.


00:57:20.380 --> 00:57:22.480
So you could create a new database connection


00:57:22.480 --> 00:57:23.320
on the upper right.


00:57:23.320 --> 00:57:24.480
If you click, you'll see,


00:57:24.480 --> 00:57:27.480
just a screen to connect to your database.


00:57:27.480 --> 00:57:30.440
So you pick the database you wanna connect to,


00:57:30.440 --> 00:57:31.940
you add your connection string,


00:57:31.940 --> 00:57:34.440
and then you can start playing with your own data.


00:57:34.440 --> 00:57:35.840
If you don't wanna play with your own data,


00:57:35.840 --> 00:57:38.680
you can play with the data we provide, it's fairly limited.


00:57:38.680 --> 00:57:41.280
We haven't spent a lot of cycles working on


00:57:41.280 --> 00:57:44.240
adding the latest, most fun datasets to play with


00:57:44.240 --> 00:57:45.780
with the best dashboard examples,


00:57:45.780 --> 00:57:47.360
but it allows you to get started


00:57:47.360 --> 00:57:49.880
and get a sense for what SuperSet can do.


00:57:49.880 --> 00:57:52.600
- Yeah, so we have a couple of major building blocks.


00:57:52.600 --> 00:57:55.640
We have dashboards, we have charts, we have datasets,


00:57:55.640 --> 00:57:58.080
and we have the SQL IDE thing.


00:57:58.080 --> 00:58:00.220
- That's right.


00:58:00.220 --> 00:58:01.540
- Maybe I'll pull up a,


00:58:01.540 --> 00:58:03.580
here we'll pull up a sales dashboard.


00:58:03.580 --> 00:58:06.060
Nothing speaks, nothing screams BI more


00:58:06.060 --> 00:58:07.900
than sales dashboard.


00:58:07.900 --> 00:58:08.740
- That's right.


00:58:08.740 --> 00:58:11.420
We just had to have a, you know, an example there,


00:58:11.420 --> 00:58:13.340
but it loads like a few bar charts


00:58:13.340 --> 00:58:15.580
and it's not like the best design dashboard.


00:58:15.580 --> 00:58:16.400
It shows that we support-


00:58:16.400 --> 00:58:17.240
- But it looks good.


00:58:17.240 --> 00:58:19.380
Like there's a lot of, there's some beautiful stuff here.


00:58:19.380 --> 00:58:20.580
- Yeah, you can do so much more.


00:58:20.580 --> 00:58:21.940
I feel like our examples are dated.


00:58:21.940 --> 00:58:24.140
You can do so much better with like super set


00:58:24.140 --> 00:58:27.120
if you actually take a little bit more time,


00:58:27.120 --> 00:58:29.760
we should work on our examples as a community,


00:58:29.760 --> 00:58:31.660
you know, to have like really compelling data sets


00:58:31.660 --> 00:58:33.820
to play with, but it gives a good overview.


00:58:33.820 --> 00:58:37.500
And here, if you click on the dot, dot, dot for any chart,


00:58:37.500 --> 00:58:40.720
so here for people who can't see the visual support


00:58:40.720 --> 00:58:43.240
and click on edit chart.


00:58:43.240 --> 00:58:45.860
So that will send you to our Explorer.


00:58:45.860 --> 00:58:48.740
So we're in the dashboard, we're looking at a specific chart.


00:58:48.740 --> 00:58:52.800
Then we just move to our chart editor.


00:58:52.800 --> 00:58:54.800
that's very much like your exploration.


00:58:54.800 --> 00:58:56.800
Here, you can click on a metric,


00:58:56.800 --> 00:58:58.800
you can drag and drop different metrics.


00:58:58.800 --> 00:59:01.800
I'm going to max and see what happens.


00:59:01.800 --> 00:59:03.800
There we go.


00:59:03.800 --> 00:59:07.480
If you were to click on View All Charts,


00:59:07.480 --> 00:59:09.480
I don't know if you see that somewhere,


00:59:09.480 --> 00:59:11.480
at the top middle somewhere,


00:59:11.480 --> 00:59:14.320
there's all sorts of visualizations that are supported here.


00:59:14.320 --> 00:59:17.420
You get a big list of all the visualization plugins


00:59:17.420 --> 00:59:20.420
that ship with SuperSet today, all your common charts,


00:59:20.420 --> 00:59:24.260
but also some geospatial stuff and some more advanced


00:59:24.260 --> 00:59:26.100
and complicated charts.


00:59:26.100 --> 00:59:27.420
- Nice.


00:59:27.420 --> 00:59:28.860
- And do all sorts of things.


00:59:28.860 --> 00:59:34.980
So that's, you know, and here maybe like just to do


00:59:34.980 --> 00:59:36.940
a little bit of the flow of the demo,


00:59:36.940 --> 00:59:39.660
apologies for people not watching and just looking at,


00:59:39.660 --> 00:59:44.100
so hit cancel and then click on the upper right dot, dot, dot


00:59:44.100 --> 00:59:47.120
so not settings, but the dot, dot, dot here.


00:59:47.120 --> 00:59:50.580
So you can say, view the query or run in SQL lab


00:59:50.580 --> 00:59:53.320
will allow you to go kind of step deeper.


00:59:53.320 --> 00:59:56.420
Where now the SQL that happened to be running


00:59:56.420 --> 01:00:00.060
behind this chart, now you can alter


01:00:00.060 --> 01:00:02.860
and push your own analysis from this point on.


01:00:02.860 --> 01:00:04.420
- Oh yeah, this is cool.


01:00:04.420 --> 01:00:05.900
- So we went from a dashboard


01:00:05.900 --> 01:00:09.800
to kind of your exploration session and into a SQL IDE.


01:00:09.800 --> 01:00:14.800
So you can go deeper here and just like run your own analysis


01:00:14.800 --> 01:00:16.640
It's a big playground for data.


01:00:16.640 --> 01:00:21.880
- Yeah, and you get a little pull up your table


01:00:21.880 --> 01:00:24.680
or your SQLAlchemy model, maybe it is, I'm not sure.


01:00:24.680 --> 01:00:26.240
- They call it like a schema navigator.


01:00:26.240 --> 01:00:28.520
So in this case, it's very much like you're navigating


01:00:28.520 --> 01:00:31.840
your database kind of object, right?


01:00:31.840 --> 01:00:33.400
So you can navigate your schemas


01:00:33.400 --> 01:00:35.740
and see the tables and the views.


01:00:35.740 --> 01:00:38.800
And then there's good auto-completes.


01:00:38.800 --> 01:00:40.120
It's very much an IDE.


01:00:40.120 --> 01:00:42.760
If you start typing, it will auto-complete


01:00:42.760 --> 01:00:45.980
the table names and then the column names.


01:00:45.980 --> 01:00:46.820
- Yeah, super cool.


01:00:46.820 --> 01:00:48.100
You also get a query history.


01:00:48.100 --> 01:00:49.780
That seems nice for if you're like playing around,


01:00:49.780 --> 01:00:54.220
you're like, oh, five versions ago of typing in this.


01:00:54.220 --> 01:00:57.540
I had the picture I wanted and now I know where to go, right?


01:00:57.540 --> 01:00:58.380
- Yeah, totally.


01:00:58.380 --> 01:01:00.340
So I think that for the people who speak SQL,


01:01:00.340 --> 01:01:04.580
they can go deeper and run more complex analysis.


01:01:04.580 --> 01:01:06.460
- Sure, yeah, very neat.


01:01:06.460 --> 01:01:09.020
All right, well, maybe let's close it out


01:01:09.020 --> 01:01:10.320
with a quick conversation on this


01:01:10.320 --> 01:01:12.020
and then I know we're out of time.


01:01:12.020 --> 01:01:18.020
I picked on Excel for having very poor source control options.


01:01:18.020 --> 01:01:23.020
What's the story here about versioning and sharing and collaboration?


01:01:23.020 --> 01:01:27.020
Yeah, so there's this thing in BI called Headless BI.


01:01:27.020 --> 01:01:31.020
It's the ability to manage BI assets as code.


01:01:31.020 --> 01:01:39.020
And so at Preset, we have built a CLI on top of the SuperSift API


01:01:39.020 --> 01:01:42.560
that allows you to import and export objects


01:01:42.560 --> 01:01:47.360
from and to the BI tool to the file system.


01:01:47.360 --> 01:01:51.860
So it's really easy to say, I want to store this dashboard


01:01:51.860 --> 01:01:54.760
or this set of dashboard or this set of object


01:01:54.760 --> 01:01:55.960
and manage them as code.


01:01:55.960 --> 01:01:58.820
So there's a CLI that allows you to push and pull


01:01:58.820 --> 01:02:03.820
from the BI tool and from SuperSet into Git and GitHub.


01:02:03.820 --> 01:02:06.080
- All right, let me see if I got this right.


01:02:06.080 --> 01:02:09.660
So I might create a folder in it that is a GitHub repo,


01:02:09.660 --> 01:02:11.380
or a Git repo rather,


01:02:11.380 --> 01:02:13.820
then I would export all my stuff, commit that,


01:02:13.820 --> 01:02:15.800
and then I would just like write over it


01:02:15.800 --> 01:02:16.780
and keep committing those,


01:02:16.780 --> 01:02:18.220
those would sort of track my changes.


01:02:18.220 --> 01:02:21.820
And if I ever need to, I can re-instantiate


01:02:21.820 --> 01:02:25.820
or rehydrate that thing out of the file set into SuperSet.


01:02:25.820 --> 01:02:27.740
- Yeah, so there's more to it than that.


01:02:27.740 --> 01:02:29.580
And I'm going to try to explain it well,


01:02:29.580 --> 01:02:32.420
but once you say hit that eject button,


01:02:32.420 --> 01:02:35.900
which would be exporting the BI assets as code,


01:02:35.900 --> 01:02:38.460
then you get a collection of YAML files


01:02:38.460 --> 01:02:40.580
that represents your chart, your datasets


01:02:40.580 --> 01:02:44.020
and your database connection definition, right?


01:02:44.020 --> 01:02:47.180
So your dashboard then is represented as code.


01:02:47.180 --> 01:02:48.600
When you push things,


01:02:48.600 --> 01:02:50.820
well, so first you can templateize things.


01:02:50.820 --> 01:02:52.820
So it's YAML, so you can use Jinja,


01:02:52.820 --> 01:02:56.700
which is a great Python package to template files.


01:02:56.700 --> 01:03:01.700
So you can inject some templates into your BI tool.


01:03:01.700 --> 01:03:04.420
If you were to say broadcast this object


01:03:04.420 --> 01:03:06.740
to multiple superset instances,


01:03:06.740 --> 01:03:10.380
or to say, I'm gonna do permutation of variation on a theme,


01:03:10.380 --> 01:03:12.420
you can do that through templating.


01:03:12.420 --> 01:03:14.460
And that's through the Preset CLI,


01:03:14.460 --> 01:03:16.540
and you can push, as you push,


01:03:16.540 --> 01:03:19.980
then there's a flag, I believe the flag is on by default,


01:03:19.980 --> 01:03:23.460
where it will prevent people from updating the object


01:03:23.460 --> 01:03:26.660
in the GUI saying, this object is managed as code,


01:03:26.660 --> 01:03:29.020
the source code lives here for reference,


01:03:29.020 --> 01:03:31.320
so you can click and go see the code on GitHub.


01:03:32.300 --> 01:03:37.300
but then you can't save it because it's essentially read-only


01:03:37.300 --> 01:03:39.540
and managed by source control.


01:03:39.540 --> 01:03:45.500
I think in the future, we're looking to have a companion


01:03:45.500 --> 01:03:49.620
for each superset workspace on preset to be able to have


01:03:49.620 --> 01:03:53.220
the full history over time of what has changed,


01:03:53.220 --> 01:03:57.620
so you can go and restore assets as they were a while ago.


01:03:57.620 --> 01:04:00.300
Because there's always someone that's going to delete something


01:04:00.300 --> 01:04:05.300
or delete a dashboard or change it in ways that are destructive


01:04:05.300 --> 01:04:08.680
and people want to roll back, so it's possible to do that too.


01:04:08.680 --> 01:04:13.680
Sure. It makes a lot of sense to have some kind of source control story.


01:04:13.680 --> 01:04:17.020
But at the same time, because it's kind of a SaaS thing,


01:04:17.020 --> 01:04:21.020
either self-hosted, your little baby SaaS, or at a preset,


01:04:21.020 --> 01:04:27.220
it's kind of a shared asset that doesn't need to be synced


01:04:27.220 --> 01:04:31.380
and pushed and pulled and cloned as much to allow people to work on it, right?


01:04:31.380 --> 01:04:38.660
Yeah, so there's different things. I think the Google Docs approach, which is to keep a GUI


01:04:38.660 --> 01:04:44.340
revision history and being able to see who changed what, when, is also valuable. And I'm sure we're


01:04:44.340 --> 01:04:48.340
going to see that in the future of SuperSET too, being able to say, "I want to look at the history


01:04:48.340 --> 01:04:56.100
of this dashboard from a GUI perspective." So that's something that has been requested and


01:04:56.100 --> 01:04:58.340
than we'll have in the future.


01:04:58.340 --> 01:05:01.300
So call it your Google Docs kind of GUI version.


01:05:01.300 --> 01:05:03.300
- Yeah, yeah, yeah.


01:05:03.300 --> 01:05:06.900
- The managing asset as code is a different use case, right?


01:05:06.900 --> 01:05:08.580
If you have an embedded dashboard,


01:05:08.580 --> 01:05:11.460
if you publish a certain dashboard


01:05:11.460 --> 01:05:13.380
as part of your application,


01:05:13.380 --> 01:05:15.980
and that's more the rigor,


01:05:15.980 --> 01:05:17.700
like, oh, I wanna have it in source control,


01:05:17.700 --> 01:05:20.100
I want a version, I want it, you know.


01:05:20.100 --> 01:05:20.920
- Sure.


01:05:20.920 --> 01:05:21.760
- Yeah.


01:05:21.760 --> 01:05:25.260
- Yeah, it's kind of like having a DevOps team


01:05:25.260 --> 01:05:27.460
versus someone keeps the server running.


01:05:27.460 --> 01:05:30.380
All right, like there's different levels of maturity


01:05:30.380 --> 01:05:34.620
around different things and companies and, you know.


01:05:34.620 --> 01:05:36.020
- Yeah, people want that flexibility too,


01:05:36.020 --> 01:05:38.300
like infrastructure as code, for instance, is great.


01:05:38.300 --> 01:05:40.420
And, but that doesn't mean that everything should,


01:05:40.420 --> 01:05:44.080
like if you and I want to go and create a AWS account


01:05:44.080 --> 01:05:45.720
and spin up some resources,


01:05:45.720 --> 01:05:48.900
maybe we don't need to start with Terraform script.


01:05:48.900 --> 01:05:50.300
We can do that now.


01:05:50.300 --> 01:05:51.940
And then you can generate the code later.


01:05:51.940 --> 01:05:55.280
maybe you can say like, hey, AWS, can I generate


01:05:55.280 --> 01:05:57.680
the Terraform code of all the stuff that I've done


01:05:57.680 --> 01:06:00.060
in the past three days so that, you know,


01:06:00.060 --> 01:06:02.180
GUI to code can flow.


01:06:02.180 --> 01:06:03.020
- Right.


01:06:03.020 --> 01:06:04.760
- And yet the other way of like, you know, code to GUI.


01:06:04.760 --> 01:06:09.120
But yeah, I think it's important for this sort of tools,


01:06:09.120 --> 01:06:11.600
managing critical assets to have these workflows


01:06:11.600 --> 01:06:13.600
like GUI to code, code to GUI,


01:06:13.600 --> 01:06:17.160
and be able to have the flexibility and best of both worlds


01:06:17.160 --> 01:06:20.000
as you go up in your maturity lifecycle


01:06:20.000 --> 01:06:21.880
and your need for rigor.


01:06:21.880 --> 01:06:24.880
- Makes a lot of sense to me.


01:06:24.880 --> 01:06:28.280
All right, well, we are well out of time here, Max.


01:06:28.280 --> 01:06:32.340
So congrats again on creating such a cool project.


01:06:32.340 --> 01:06:34.440
And I guess with Airflow as well,


01:06:34.440 --> 01:06:35.480
it's not even the first one.


01:06:35.480 --> 01:06:37.320
So very popular and it seems like


01:06:37.320 --> 01:06:38.640
it's definitely taken off, it's great.


01:06:38.640 --> 01:06:39.680
- Yeah, it's been super exciting,


01:06:39.680 --> 01:06:41.200
like way beyond my expectation.


01:06:41.200 --> 01:06:45.800
And I think really often like the original creators


01:06:45.800 --> 01:06:49.260
get too much kind of recognition and reward


01:06:49.260 --> 01:06:51.140
compared to like the rest of the community, right?


01:06:51.140 --> 01:06:54.040
So what it takes for something like SuperSet to exist


01:06:54.040 --> 01:06:56.360
is it takes 800 people contributing


01:06:56.360 --> 01:06:59.500
and it takes an entire Slack community.


01:06:59.500 --> 01:07:01.560
And really often we give a lot of credit


01:07:01.560 --> 01:07:03.540
to the person who created the thing,


01:07:03.540 --> 01:07:05.500
but you should look at like how bad SuperSet was


01:07:05.500 --> 01:07:07.540
when I was like the first person,


01:07:07.540 --> 01:07:09.500
when I've been the only person working on it.


01:07:09.500 --> 01:07:10.580
And when it really took off


01:07:10.580 --> 01:07:13.540
is when we saw like a set of really good contributors


01:07:13.540 --> 01:07:15.900
coming in and pushing it to the next level.


01:07:15.900 --> 01:07:18.620
So it's been rewarding.


01:07:18.620 --> 01:07:19.460
It's awesome.


01:07:19.460 --> 01:07:21.060
I definitely got some people excited about it


01:07:21.060 --> 01:07:22.460
on the comments and the audiences.


01:07:22.460 --> 01:07:26.260
This project has me stupid excited, which is lovely.


01:07:26.260 --> 01:07:27.500
- Love to see that excitement, right?


01:07:27.500 --> 01:07:30.660
Like a lot of this validation comes through usage and value


01:07:30.660 --> 01:07:33.340
and people getting excited, contributing


01:07:33.340 --> 01:07:34.660
and more like just using here.


01:07:34.660 --> 01:07:36.540
Like we love to see people just say like,


01:07:36.540 --> 01:07:39.900
hey, we're using this and getting tons of value.


01:07:39.900 --> 01:07:42.500
- Yeah, go to the in the wild.


01:07:42.500 --> 01:07:43.340
- Yeah, stick it to the--


01:07:43.340 --> 01:07:44.700
- Put your stamp on it, right?


01:07:44.700 --> 01:07:46.820
- I get like the communistic, like, you know,


01:07:46.820 --> 01:07:49.020
Like together we can build better things


01:07:49.020 --> 01:07:51.460
than vendors on their own can.


01:07:51.460 --> 01:07:53.020
It's just like open source is a better way


01:07:53.020 --> 01:07:56.180
to not only to collaborate and build software,


01:07:56.180 --> 01:07:57.900
it's a better way to discover software,


01:07:57.900 --> 01:08:02.900
adopt software and just like get to solutions.


01:08:02.900 --> 01:08:05.940
- Very cool.


01:08:05.940 --> 01:08:06.780
All right, well, before you get out of here,


01:08:06.780 --> 01:08:08.260
final two quick questions.


01:08:08.260 --> 01:08:11.620
If you're gonna write some code, what editor do you use?


01:08:11.620 --> 01:08:13.260
- As I'm still a Vim person,


01:08:13.260 --> 01:08:14.540
I feel like I need to modernize.


01:08:14.540 --> 01:08:17.020
I'm not like a Vim is better than all the IDEs.


01:08:17.020 --> 01:08:19.460
It's just muscle memory at this point.


01:08:19.460 --> 01:08:24.180
It was just very common line and very kind of into Vim


01:08:24.180 --> 01:08:29.180
and like my specific kind of a tune up for Vim.


01:08:29.180 --> 01:08:31.500
And it's not because I think it's better.


01:08:31.500 --> 01:08:33.420
It's just like habit, you know?


01:08:33.420 --> 01:08:35.420
- Yeah, yeah, cool.


01:08:35.420 --> 01:08:38.020
There's a funny guy who I think he's German.


01:08:38.020 --> 01:08:40.300
He does this YouTube series making fun


01:08:40.300 --> 01:08:42.560
of different programming languages and communities.


01:08:42.560 --> 01:08:45.520
And then one is this guy, he talks about how he fought


01:08:45.520 --> 01:08:46.680
in the VIM Emacs Wars.


01:08:46.680 --> 01:08:47.760
Yeah, it's pretty good.


01:08:47.760 --> 01:08:51.360
All right, so you're on the VIM side, fantastic.


01:08:51.360 --> 01:08:52.800
And then-- - Yeah, but I'm not


01:08:52.800 --> 01:08:54.600
on the side too, it's like, that's what I use


01:08:54.600 --> 01:08:56.360
but at the same time, like, encourage people


01:08:56.360 --> 01:08:58.000
to find something that works for them.


01:08:58.000 --> 01:09:00.000
Then I talk about the power of muscle memory, right?


01:09:00.000 --> 01:09:04.660
Like once you really know your tool set and the shortcuts,


01:09:04.660 --> 01:09:07.080
it's like your computer becomes an extension


01:09:07.080 --> 01:09:10.640
of your brain and your muscles and there's just a beauty


01:09:10.640 --> 01:09:12.440
in that, so it's good to have a tool


01:09:12.440 --> 01:09:14.920
that enables you and to have that self-training


01:09:14.920 --> 01:09:17.100
of like, I'm gonna train my muscle memory


01:09:17.100 --> 01:09:18.840
so I can do the things that I do all the time,


01:09:18.840 --> 01:09:20.120
like without it. - Right.


01:09:20.120 --> 01:09:21.800
Right, you think I want this to happen


01:09:21.800 --> 01:09:24.460
and then it happens and you don't have to be conscious


01:09:24.460 --> 01:09:27.600
of it happening, right, in your editor, like--


01:09:27.600 --> 01:09:30.780
- Clicking around, I'll do the sequence of like six clicks


01:09:30.780 --> 01:09:33.080
to do this thing in Photoshop all the time.


01:09:33.080 --> 01:09:36.000
Why can't you just do like Command + Shift + R + B,


01:09:36.000 --> 01:09:40.400
you know, like, do a sequence, it just happens magically.


01:09:40.400 --> 01:09:41.240
- Yeah, absolutely.


01:09:41.240 --> 01:09:44.480
And then notable PyPI package or other library found,


01:09:44.480 --> 01:09:47.160
like this is awesome, people should know about.


01:09:47.160 --> 01:09:50.280
- Yeah, so I wanted to talk about, so I live,


01:09:50.280 --> 01:09:52.400
you know, we use SQL very heavily, you know,


01:09:52.400 --> 01:09:55.120
as you saw, so if you're a data practitioner,


01:09:55.120 --> 01:09:57.280
you write a lot of SQL.


01:09:57.280 --> 01:09:59.920
I spend quite a bit of time writing tons of SQL


01:09:59.920 --> 01:10:04.840
in Airflow, a little bit in dbt too, more recently.


01:10:04.840 --> 01:10:07.840
So there's this like SQL linter that came out,


01:10:07.840 --> 01:10:10.840
it's called SQL Fluff, it's been around for a little while.


01:10:10.840 --> 01:10:15.540
People, so check out PyPI SQL Fluff.


01:10:15.540 --> 01:10:17.080
There it is.


01:10:17.080 --> 01:10:22.080
And it's a very configurable SQL linter fixer.


01:10:22.080 --> 01:10:24.480
So, you know, like we all love like PEP 8


01:10:24.480 --> 01:10:27.140
and things like black that are very deterministic


01:10:27.140 --> 01:10:28.480
and opinionated.


01:10:28.480 --> 01:10:30.400
I think we're not there in the SQL world.


01:10:30.400 --> 01:10:34.780
People have not agreed on our PEP 8 equivalent for SQL.


01:10:34.780 --> 01:10:37.720
So this is like highly configurable.


01:10:37.720 --> 01:10:39.240
So you can agree with your team


01:10:39.240 --> 01:10:42.780
on the set of like linting rules for your repo,


01:10:42.780 --> 01:10:45.640
and then it can fix a lot of stuff for you.


01:10:45.640 --> 01:10:49.920
So I think it helps if we're gonna manage mountains of SQL,


01:10:49.920 --> 01:10:51.000
I don't like SQL that much,


01:10:51.000 --> 01:10:54.080
but it seems like this generation of data teams


01:10:54.080 --> 01:10:57.840
is gonna rely a lot on a lot of SQL.


01:10:57.840 --> 01:11:00.020
Then having a linter, you know,


01:11:00.020 --> 01:11:03.160
helps making that a little bit more bearable.


01:11:03.160 --> 01:11:05.400
- Excellent, SQLfluff.com, very cool.


01:11:05.400 --> 01:11:09.100
All right, final call to action.


01:11:09.100 --> 01:11:11.660
people are excited about SuperSET,


01:11:11.660 --> 01:11:12.860
they wanna get started, wanna play with it,


01:11:12.860 --> 01:11:14.340
what do you tell them?


01:11:14.340 --> 01:11:17.060
- pip install SuperSET, I mean, come to the GitHub repo,


01:11:17.060 --> 01:11:19.020
check out superset.apache.org.


01:11:19.020 --> 01:11:21.460
We haven't talked about the Apache Software Foundation too,


01:11:21.460 --> 01:11:25.420
but we're supported by the Apache Software Foundation


01:11:25.420 --> 01:11:27.340
in many ways, and then you should be able


01:11:27.340 --> 01:11:30.500
to find tons of resources.


01:11:30.500 --> 01:11:34.220
It is a little bit harder to get started than other things


01:11:34.220 --> 01:11:36.780
'cause it's such a broad piece of software


01:11:36.780 --> 01:11:39.900
that's like very, very layered.


01:11:39.900 --> 01:11:44.900
We have a Slack, so I think there is a type of issue


01:11:44.900 --> 01:11:47.620
that's probably called like starter issues


01:11:47.620 --> 01:11:48.940
or I forgot the exact name of it.


01:11:48.940 --> 01:11:51.700
So, and then we have a Slack to get involved


01:11:51.700 --> 01:11:52.900
and I believe there in Slack,


01:11:52.900 --> 01:11:56.300
there's a way to introduce yourself


01:11:56.300 --> 01:11:57.700
and there's a bunch of channels that are more like,


01:11:57.700 --> 01:11:59.580
how do I get started?


01:11:59.580 --> 01:12:01.040
How do I contribute?


01:12:01.040 --> 01:12:03.220
So there should be outlets for anyone


01:12:03.220 --> 01:12:06.540
who wants to get involved to get connected.


01:12:06.540 --> 01:12:12.180
If you fail at doing that, you can probably reach out to me directly on Twitter or elsewhere.


01:12:12.180 --> 01:12:14.380
I might be able to do some minor stuff.


01:12:14.380 --> 01:12:19.380
Yeah, there's a few people commit to the project, so there's got to be a lot out there.


01:12:19.380 --> 01:12:21.660
Yeah, I mean, that's a thing though.


01:12:21.660 --> 01:12:26.180
When a project gets bigger and there's more contributors, that doesn't mean it's necessarily


01:12:26.180 --> 01:12:29.100
more welcoming and easier to get into.


01:12:29.100 --> 01:12:32.820
There's more people, but sometimes there's not as clear of a...


01:12:32.820 --> 01:12:35.120
If you don't have a BDFL, sometimes it's a little bit


01:12:35.120 --> 01:12:37.480
harder to talk to a single person


01:12:37.480 --> 01:12:40.080
and get the exact pointer that you need.


01:12:40.080 --> 01:12:44.160
So I would say, just get on the Slack, talk to a few people,


01:12:44.160 --> 01:12:46.000
think about how you want to get involved too,


01:12:46.000 --> 01:12:47.760
and be clear about your intentions.


01:12:47.760 --> 01:12:51.360
And then we'll be able to connect you


01:12:51.360 --> 01:12:54.400
in the right place, the right person.


01:12:54.400 --> 01:12:55.080
Fantastic.


01:12:55.080 --> 01:12:55.880
All right.


01:12:55.880 --> 01:12:57.440
Well, Max, thank you for being here.


01:12:57.440 --> 01:12:59.040
Thanks for creating this cool project.


01:12:59.040 --> 01:13:01.600
Looks like tons of people are getting value from it.


01:13:01.600 --> 01:13:03.000
- Yeah, thank you for having me on the show too.


01:13:03.000 --> 01:13:04.880
And I'm gonna go and look back at the episodes


01:13:04.880 --> 01:13:06.240
and kind of, you know,


01:13:06.240 --> 01:13:08.220
I'm always looking for good content too


01:13:08.220 --> 01:13:10.220
and keeping in touch with the Python community too.


01:13:10.220 --> 01:13:12.660
So I'm gonna go and dig in your archives there


01:13:12.660 --> 01:13:15.260
and listen to a bunch of episodes.


01:13:15.260 --> 01:13:17.540
- We have seven years almost every single week.


01:13:17.540 --> 01:13:19.500
So there's a bunch of episodes back there.


01:13:19.500 --> 01:13:20.540
So yeah.


01:13:20.540 --> 01:13:21.740
- Awesome. - Thanks so much.


01:13:21.740 --> 01:13:23.140
Yeah, see you later. - Thank you.


01:13:23.140 --> 01:13:24.340
All right, take care.

